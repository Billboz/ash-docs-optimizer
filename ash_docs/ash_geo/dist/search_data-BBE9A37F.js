searchData={"items":[{"type":"module","title":"AshGeo","doc":"Base module containing common utility functions\n\nThis module contains some things used internally that may also be useful\noutside of `AshGeo` itself, but depending upon what you what to do, you should\nprobably be using one of:\n\n- `AshGeo.Validation` for validations of `Geo` types and using `Topo`\n  functions\n- `AshGeo.Postgis` for [PostGIS `st_*`\n  functions](https://postgis.net/docs/reference.html) for use with `Ash.Expr`\n- `AshGeo.GeoAny`, `AshGeo.GeoJson`, `AshGeo.GeoWkt`, `AshGeo.GeoWkb` for\n  input types\n- `AshGeo.Geometry` for base geometry type","ref":"AshGeo.html"},{"type":"function","title":"AshGeo.geo_type_aliases/0","doc":"Type aliases for `Geo` types, auto-generated from the module names\n\nFor example, the alias derived from `Geo.PointZM` is `:point_zm`.","ref":"AshGeo.html#geo_type_aliases/0"},{"type":"function","title":"AshGeo.geo_types/0","doc":"List of `Geo` types","ref":"AshGeo.html#geo_types/0"},{"type":"macro","title":"AshGeo.is_geo/1","doc":"Macro to check whether a module is a `Geo` type, suitable for use in guards","ref":"AshGeo.html#is_geo/1"},{"type":"function","title":"AshGeo.module_suffix_to_snake/1","doc":"Transform the last element of a module path into a snake-cased atom.","ref":"AshGeo.html#module_suffix_to_snake/1"},{"type":"function","title":"AshGeo.topo_functions/0","doc":"List of `Topo` functions","ref":"AshGeo.html#topo_functions/0"},{"type":"module","title":"AshGeo.GeoAny","doc":"Geometry type which attempts to auto-detect and decode from JSON, WKT and WKB\n\nAccepts all options for `AshGeo.Geometry`, plus `prefer_binary_encoding`,\nand may also be narrowed with `use` in the same way.","ref":"AshGeo.GeoAny.html"},{"type":"module","title":"Options - AshGeo.GeoAny","doc":"* `:prefer_binary_encoding` - Which binary encoding format to attempt first: WKT or WKB. Valid values are :wkt, :wkb The default value is `:wkt`.\n\n* `:storage_type` (`t:atom/0`) - Column type in the database  \n  *May **NOT** be overridden using `:constraints`.*  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, storage_type: :\"geometry(Point,26918)\"\n  ```\n\n* `:geo_types` - Allowed `Geo` types  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, geo_types: :point\n  ```  \n  ```elixir\n  use AshGeo.Geometry, geo_types: [:point, :point_z, :point_zm]\n  ```  \n  ```elixir\n  use AshGeo.Geometry, geo_types: [:point, Geo.PointZ, :point_zm]\n  ```  \n  #### See also  \n  - `AshGeo.geo_types/0`\n  - `AshGeo.geo_type_aliases/0`\n\n* `:force_srid` (`t:integer/0`) - SRID to force on the geometry  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, force_srid: 4326\n  ```\n\n* `:check_srid` (`t:integer/0`) - SRID to check on the geometry  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, check_srid: 4326\n  ```","ref":"AshGeo.GeoAny.html#module-options"},{"type":"function","title":"AshGeo.GeoAny.cast_input/2","doc":"Try decoding with `Geo.WKB` and `Geo.WKT`, in the order specified by `:prefer`.","ref":"AshGeo.GeoAny.html#cast_input/2"},{"type":"module","title":"AshGeo.GeoJson","doc":"Geometry type which accepts and decodes GeoJSON input\n\nAccepts all options of `AshGeo.Geometry`, and may be narrowed with `use`\nin the same way.","ref":"AshGeo.GeoJson.html"},{"type":"module","title":"Options - AshGeo.GeoJson","doc":"* `:storage_type` (`t:atom/0`) - Column type in the database  \n  *May **NOT** be overridden using `:constraints`.*  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, storage_type: :\"geometry(Point,26918)\"\n  ```\n\n* `:geo_types` - Allowed `Geo` types  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, geo_types: :point\n  ```  \n  ```elixir\n  use AshGeo.Geometry, geo_types: [:point, :point_z, :point_zm]\n  ```  \n  ```elixir\n  use AshGeo.Geometry, geo_types: [:point, Geo.PointZ, :point_zm]\n  ```  \n  #### See also  \n  - `AshGeo.geo_types/0`\n  - `AshGeo.geo_type_aliases/0`\n\n* `:force_srid` (`t:integer/0`) - SRID to force on the geometry  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, force_srid: 4326\n  ```\n\n* `:check_srid` (`t:integer/0`) - SRID to check on the geometry  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, check_srid: 4326\n  ```","ref":"AshGeo.GeoJson.html#module-options"},{"type":"function","title":"AshGeo.GeoJson.cast_input/2","doc":"Try decoding with `Geo.JSON`.","ref":"AshGeo.GeoJson.html#cast_input/2"},{"type":"module","title":"AshGeo.GeoWkb","doc":"Geometry type which accepts and decodes WKB input\n\nAccepts all options of `AshGeo.Geometry`, and may be narrowed with `use`\nin the same way.","ref":"AshGeo.GeoWkb.html"},{"type":"module","title":"Options - AshGeo.GeoWkb","doc":"* `:storage_type` (`t:atom/0`) - Column type in the database  \n  *May **NOT** be overridden using `:constraints`.*  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, storage_type: :\"geometry(Point,26918)\"\n  ```\n\n* `:geo_types` - Allowed `Geo` types  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, geo_types: :point\n  ```  \n  ```elixir\n  use AshGeo.Geometry, geo_types: [:point, :point_z, :point_zm]\n  ```  \n  ```elixir\n  use AshGeo.Geometry, geo_types: [:point, Geo.PointZ, :point_zm]\n  ```  \n  #### See also  \n  - `AshGeo.geo_types/0`\n  - `AshGeo.geo_type_aliases/0`\n\n* `:force_srid` (`t:integer/0`) - SRID to force on the geometry  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, force_srid: 4326\n  ```\n\n* `:check_srid` (`t:integer/0`) - SRID to check on the geometry  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, check_srid: 4326\n  ```","ref":"AshGeo.GeoWkb.html#module-options"},{"type":"function","title":"AshGeo.GeoWkb.cast_input/2","doc":"Try decoding with `Geo.WKB`.","ref":"AshGeo.GeoWkb.html#cast_input/2"},{"type":"module","title":"AshGeo.GeoWkt","doc":"Geometry type which accepts and decodes WKT input\n\nAccepts all options of `AshGeo.Geometry`, and may be narrowed with `use`\nin the same way.","ref":"AshGeo.GeoWkt.html"},{"type":"module","title":"Options - AshGeo.GeoWkt","doc":"* `:storage_type` (`t:atom/0`) - Column type in the database  \n  *May **NOT** be overridden using `:constraints`.*  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, storage_type: :\"geometry(Point,26918)\"\n  ```\n\n* `:geo_types` - Allowed `Geo` types  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, geo_types: :point\n  ```  \n  ```elixir\n  use AshGeo.Geometry, geo_types: [:point, :point_z, :point_zm]\n  ```  \n  ```elixir\n  use AshGeo.Geometry, geo_types: [:point, Geo.PointZ, :point_zm]\n  ```  \n  #### See also  \n  - `AshGeo.geo_types/0`\n  - `AshGeo.geo_type_aliases/0`\n\n* `:force_srid` (`t:integer/0`) - SRID to force on the geometry  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, force_srid: 4326\n  ```\n\n* `:check_srid` (`t:integer/0`) - SRID to check on the geometry  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, check_srid: 4326\n  ```","ref":"AshGeo.GeoWkt.html#module-options"},{"type":"function","title":"AshGeo.GeoWkt.cast_input/2","doc":"Try decoding with `Geo.WKT`.","ref":"AshGeo.GeoWkt.html#cast_input/2"},{"type":"module","title":"AshGeo.Geometry","doc":"Base geometry type\n\nTo create a constrained geometry type, `use AshGeo.Geometry` accepts several\noptions that may be useful. Options provided to `use` define constraints that\nare applied statically to a new type instance, and may be further added or\noverridden using `:constraints` on instances of that type, with the exception\nof `:storage_type`.","ref":"AshGeo.Geometry.html"},{"type":"module","title":"Example - AshGeo.Geometry","doc":"```elixir\ndefmodule App.Type.Point26918 do\n  use AshGeo.Geometry,\n    storage_type: :\"geometry(Point,26918)\",\n    geo_types: :point\nend\n\ndefmodule App.Resource.PointOfInterest do\n  alias App.Type.Point26918\n\n  attributes do\n    attribute :name, :string\n    attribute :location, Point26918, allow_nil?: false\n  end\n\n  actions do\n    create :create do\n      argument :location, Point26918 do\n        allow_nil? false\n        constraits: [force_srid: 26918]\n      end\n\n      change set_attribute(:location, arg(:location))\n    end\n  end\nend\n```","ref":"AshGeo.Geometry.html#module-example"},{"type":"module","title":"Options - AshGeo.Geometry","doc":"* `:storage_type` (`t:atom/0`) - Column type in the database  \n  *May **NOT** be overridden using `:constraints`.*  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, storage_type: :\"geometry(Point,26918)\"\n  ```\n\n* `:geo_types` - Allowed `Geo` types  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, geo_types: :point\n  ```  \n  ```elixir\n  use AshGeo.Geometry, geo_types: [:point, :point_z, :point_zm]\n  ```  \n  ```elixir\n  use AshGeo.Geometry, geo_types: [:point, Geo.PointZ, :point_zm]\n  ```  \n  #### See also  \n  - `AshGeo.geo_types/0`\n  - `AshGeo.geo_type_aliases/0`\n\n* `:force_srid` (`t:integer/0`) - SRID to force on the geometry  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, force_srid: 4326\n  ```\n\n* `:check_srid` (`t:integer/0`) - SRID to check on the geometry  \n  #### Examples  \n  ```elixir\n  use AshGeo.Geometry, check_srid: 4326\n  ```","ref":"AshGeo.Geometry.html#module-options"},{"type":"module","title":"AshGeo.Postgis","doc":"PostGIS functions for use with `Ash.Expr`","ref":"AshGeo.Postgis.html"},{"type":"macro","title":"AshGeo.Postgis.gis_index/2","doc":"Create","ref":"AshGeo.Postgis.html#gis_index/2"},{"type":"macro","title":"AshGeo.Postgis.st_area/1","doc":"","ref":"AshGeo.Postgis.html#st_area/1"},{"type":"macro","title":"AshGeo.Postgis.st_as_binary/1","doc":"","ref":"AshGeo.Postgis.html#st_as_binary/1"},{"type":"macro","title":"AshGeo.Postgis.st_as_text/1","doc":"","ref":"AshGeo.Postgis.html#st_as_text/1"},{"type":"macro","title":"AshGeo.Postgis.st_bd_m_poly_from_text/2","doc":"","ref":"AshGeo.Postgis.html#st_bd_m_poly_from_text/2"},{"type":"macro","title":"AshGeo.Postgis.st_bd_poly_from_text/2","doc":"","ref":"AshGeo.Postgis.html#st_bd_poly_from_text/2"},{"type":"macro","title":"AshGeo.Postgis.st_boundary/1","doc":"","ref":"AshGeo.Postgis.html#st_boundary/1"},{"type":"macro","title":"AshGeo.Postgis.st_buffer/2","doc":"","ref":"AshGeo.Postgis.html#st_buffer/2"},{"type":"macro","title":"AshGeo.Postgis.st_buffer/3","doc":"","ref":"AshGeo.Postgis.html#st_buffer/3"},{"type":"macro","title":"AshGeo.Postgis.st_build_area/1","doc":"","ref":"AshGeo.Postgis.html#st_build_area/1"},{"type":"macro","title":"AshGeo.Postgis.st_centroid/1","doc":"","ref":"AshGeo.Postgis.html#st_centroid/1"},{"type":"macro","title":"AshGeo.Postgis.st_collect/1","doc":"","ref":"AshGeo.Postgis.html#st_collect/1"},{"type":"macro","title":"AshGeo.Postgis.st_collect/2","doc":"","ref":"AshGeo.Postgis.html#st_collect/2"},{"type":"macro","title":"AshGeo.Postgis.st_contains/2","doc":"","ref":"AshGeo.Postgis.html#st_contains/2"},{"type":"macro","title":"AshGeo.Postgis.st_convex_hull/1","doc":"","ref":"AshGeo.Postgis.html#st_convex_hull/1"},{"type":"macro","title":"AshGeo.Postgis.st_covered_by/2","doc":"","ref":"AshGeo.Postgis.html#st_covered_by/2"},{"type":"macro","title":"AshGeo.Postgis.st_covers/2","doc":"","ref":"AshGeo.Postgis.html#st_covers/2"},{"type":"macro","title":"AshGeo.Postgis.st_crosses/2","doc":"","ref":"AshGeo.Postgis.html#st_crosses/2"},{"type":"macro","title":"AshGeo.Postgis.st_difference/2","doc":"","ref":"AshGeo.Postgis.html#st_difference/2"},{"type":"macro","title":"AshGeo.Postgis.st_dimension/1","doc":"","ref":"AshGeo.Postgis.html#st_dimension/1"},{"type":"macro","title":"AshGeo.Postgis.st_disjoint/2","doc":"","ref":"AshGeo.Postgis.html#st_disjoint/2"},{"type":"macro","title":"AshGeo.Postgis.st_distance/2","doc":"","ref":"AshGeo.Postgis.html#st_distance/2"},{"type":"macro","title":"AshGeo.Postgis.st_distance_in_meters/2","doc":"Casts the 2 geometries given to geographies in order to return distance in meters.","ref":"AshGeo.Postgis.html#st_distance_in_meters/2"},{"type":"macro","title":"AshGeo.Postgis.st_distance_sphere/2","doc":"Please note that ST_Distance_Sphere has been deprecated as of Postgis 2.2.\nPostgis 2.1 is no longer supported on PostgreSQL >= 9.5.\nThis macro is still in place to support users of PostgreSQL <= 9.4.x.","ref":"AshGeo.Postgis.html#st_distance_sphere/2"},{"type":"macro","title":"AshGeo.Postgis.st_distancesphere/2","doc":"","ref":"AshGeo.Postgis.html#st_distancesphere/2"},{"type":"macro","title":"AshGeo.Postgis.st_dwithin/3","doc":"","ref":"AshGeo.Postgis.html#st_dwithin/3"},{"type":"macro","title":"AshGeo.Postgis.st_dwithin_in_meters/3","doc":"Casts the 2 geometries given to geographies in order to check for distance in meters.","ref":"AshGeo.Postgis.html#st_dwithin_in_meters/3"},{"type":"macro","title":"AshGeo.Postgis.st_end_point/1","doc":"","ref":"AshGeo.Postgis.html#st_end_point/1"},{"type":"macro","title":"AshGeo.Postgis.st_envelope/1","doc":"","ref":"AshGeo.Postgis.html#st_envelope/1"},{"type":"macro","title":"AshGeo.Postgis.st_equals/2","doc":"","ref":"AshGeo.Postgis.html#st_equals/2"},{"type":"macro","title":"AshGeo.Postgis.st_extent/1","doc":"","ref":"AshGeo.Postgis.html#st_extent/1"},{"type":"macro","title":"AshGeo.Postgis.st_exterior_ring/1","doc":"","ref":"AshGeo.Postgis.html#st_exterior_ring/1"},{"type":"macro","title":"AshGeo.Postgis.st_flip_coordinates/1","doc":"","ref":"AshGeo.Postgis.html#st_flip_coordinates/1"},{"type":"macro","title":"AshGeo.Postgis.st_generate_points/2","doc":"","ref":"AshGeo.Postgis.html#st_generate_points/2"},{"type":"macro","title":"AshGeo.Postgis.st_generate_points/3","doc":"","ref":"AshGeo.Postgis.html#st_generate_points/3"},{"type":"macro","title":"AshGeo.Postgis.st_geom_coll_from_wkb/2","doc":"","ref":"AshGeo.Postgis.html#st_geom_coll_from_wkb/2"},{"type":"macro","title":"AshGeo.Postgis.st_geom_from_text/2","doc":"","ref":"AshGeo.Postgis.html#st_geom_from_text/2"},{"type":"macro","title":"AshGeo.Postgis.st_geometry_n/2","doc":"","ref":"AshGeo.Postgis.html#st_geometry_n/2"},{"type":"macro","title":"AshGeo.Postgis.st_geometry_type/1","doc":"","ref":"AshGeo.Postgis.html#st_geometry_type/1"},{"type":"macro","title":"AshGeo.Postgis.st_interior_ring_n/2","doc":"","ref":"AshGeo.Postgis.html#st_interior_ring_n/2"},{"type":"macro","title":"AshGeo.Postgis.st_intersection/2","doc":"","ref":"AshGeo.Postgis.html#st_intersection/2"},{"type":"macro","title":"AshGeo.Postgis.st_intersects/2","doc":"","ref":"AshGeo.Postgis.html#st_intersects/2"},{"type":"macro","title":"AshGeo.Postgis.st_is_closed/1","doc":"","ref":"AshGeo.Postgis.html#st_is_closed/1"},{"type":"macro","title":"AshGeo.Postgis.st_is_ring/1","doc":"","ref":"AshGeo.Postgis.html#st_is_ring/1"},{"type":"macro","title":"AshGeo.Postgis.st_is_simple/1","doc":"","ref":"AshGeo.Postgis.html#st_is_simple/1"},{"type":"macro","title":"AshGeo.Postgis.st_length/1","doc":"","ref":"AshGeo.Postgis.html#st_length/1"},{"type":"macro","title":"AshGeo.Postgis.st_line_from_text/2","doc":"","ref":"AshGeo.Postgis.html#st_line_from_text/2"},{"type":"macro","title":"AshGeo.Postgis.st_line_from_wkb/2","doc":"","ref":"AshGeo.Postgis.html#st_line_from_wkb/2"},{"type":"macro","title":"AshGeo.Postgis.st_linestring_from_text/2","doc":"","ref":"AshGeo.Postgis.html#st_linestring_from_text/2"},{"type":"macro","title":"AshGeo.Postgis.st_linestring_from_wkb/2","doc":"","ref":"AshGeo.Postgis.html#st_linestring_from_wkb/2"},{"type":"macro","title":"AshGeo.Postgis.st_m/1","doc":"","ref":"AshGeo.Postgis.html#st_m/1"},{"type":"macro","title":"AshGeo.Postgis.st_m_geom_coll_from_text/2","doc":"","ref":"AshGeo.Postgis.html#st_m_geom_coll_from_text/2"},{"type":"macro","title":"AshGeo.Postgis.st_m_geom_from_wkb/2","doc":"","ref":"AshGeo.Postgis.html#st_m_geom_from_wkb/2"},{"type":"macro","title":"AshGeo.Postgis.st_m_geometry_from_wkb/2","doc":"","ref":"AshGeo.Postgis.html#st_m_geometry_from_wkb/2"},{"type":"macro","title":"AshGeo.Postgis.st_m_line_from_text/2","doc":"","ref":"AshGeo.Postgis.html#st_m_line_from_text/2"},{"type":"macro","title":"AshGeo.Postgis.st_m_line_from_wkb/2","doc":"","ref":"AshGeo.Postgis.html#st_m_line_from_wkb/2"},{"type":"macro","title":"AshGeo.Postgis.st_m_point_from_text/2","doc":"","ref":"AshGeo.Postgis.html#st_m_point_from_text/2"},{"type":"macro","title":"AshGeo.Postgis.st_m_point_from_wkb/2","doc":"","ref":"AshGeo.Postgis.html#st_m_point_from_wkb/2"},{"type":"macro","title":"AshGeo.Postgis.st_m_poly_from_text/2","doc":"","ref":"AshGeo.Postgis.html#st_m_poly_from_text/2"},{"type":"macro","title":"AshGeo.Postgis.st_m_poly_from_wkb/2","doc":"","ref":"AshGeo.Postgis.html#st_m_poly_from_wkb/2"},{"type":"macro","title":"AshGeo.Postgis.st_make_box_2d/2","doc":"","ref":"AshGeo.Postgis.html#st_make_box_2d/2"},{"type":"macro","title":"AshGeo.Postgis.st_mem_union/1","doc":"","ref":"AshGeo.Postgis.html#st_mem_union/1"},{"type":"macro","title":"AshGeo.Postgis.st_num_geometries/1","doc":"","ref":"AshGeo.Postgis.html#st_num_geometries/1"},{"type":"macro","title":"AshGeo.Postgis.st_num_interior_ring/1","doc":"","ref":"AshGeo.Postgis.html#st_num_interior_ring/1"},{"type":"macro","title":"AshGeo.Postgis.st_num_interior_rings/1","doc":"","ref":"AshGeo.Postgis.html#st_num_interior_rings/1"},{"type":"macro","title":"AshGeo.Postgis.st_num_points/1","doc":"","ref":"AshGeo.Postgis.html#st_num_points/1"},{"type":"macro","title":"AshGeo.Postgis.st_overlaps/2","doc":"","ref":"AshGeo.Postgis.html#st_overlaps/2"},{"type":"macro","title":"AshGeo.Postgis.st_point/2","doc":"","ref":"AshGeo.Postgis.html#st_point/2"},{"type":"macro","title":"AshGeo.Postgis.st_point_from_text/2","doc":"","ref":"AshGeo.Postgis.html#st_point_from_text/2"},{"type":"macro","title":"AshGeo.Postgis.st_point_from_wkb/2","doc":"","ref":"AshGeo.Postgis.html#st_point_from_wkb/2"},{"type":"macro","title":"AshGeo.Postgis.st_point_n/2","doc":"","ref":"AshGeo.Postgis.html#st_point_n/2"},{"type":"macro","title":"AshGeo.Postgis.st_point_on_surface/1","doc":"","ref":"AshGeo.Postgis.html#st_point_on_surface/1"},{"type":"macro","title":"AshGeo.Postgis.st_poly_from_wkb/2","doc":"","ref":"AshGeo.Postgis.html#st_poly_from_wkb/2"},{"type":"macro","title":"AshGeo.Postgis.st_polygon_from_text/2","doc":"","ref":"AshGeo.Postgis.html#st_polygon_from_text/2"},{"type":"macro","title":"AshGeo.Postgis.st_polygon_from_wkb/2","doc":"","ref":"AshGeo.Postgis.html#st_polygon_from_wkb/2"},{"type":"macro","title":"AshGeo.Postgis.st_relate/2","doc":"","ref":"AshGeo.Postgis.html#st_relate/2"},{"type":"macro","title":"AshGeo.Postgis.st_relate/3","doc":"","ref":"AshGeo.Postgis.html#st_relate/3"},{"type":"macro","title":"AshGeo.Postgis.st_set_srid/2","doc":"","ref":"AshGeo.Postgis.html#st_set_srid/2"},{"type":"macro","title":"AshGeo.Postgis.st_shift_longitude/1","doc":"","ref":"AshGeo.Postgis.html#st_shift_longitude/1"},{"type":"macro","title":"AshGeo.Postgis.st_srid/1","doc":"","ref":"AshGeo.Postgis.html#st_srid/1"},{"type":"macro","title":"AshGeo.Postgis.st_start_point/1","doc":"","ref":"AshGeo.Postgis.html#st_start_point/1"},{"type":"macro","title":"AshGeo.Postgis.st_sym_difference/2","doc":"","ref":"AshGeo.Postgis.html#st_sym_difference/2"},{"type":"macro","title":"AshGeo.Postgis.st_touches/2","doc":"","ref":"AshGeo.Postgis.html#st_touches/2"},{"type":"macro","title":"AshGeo.Postgis.st_transform/2","doc":"","ref":"AshGeo.Postgis.html#st_transform/2"},{"type":"macro","title":"AshGeo.Postgis.st_union/1","doc":"","ref":"AshGeo.Postgis.html#st_union/1"},{"type":"macro","title":"AshGeo.Postgis.st_union/2","doc":"","ref":"AshGeo.Postgis.html#st_union/2"},{"type":"macro","title":"AshGeo.Postgis.st_within/2","doc":"","ref":"AshGeo.Postgis.html#st_within/2"},{"type":"macro","title":"AshGeo.Postgis.st_x/1","doc":"","ref":"AshGeo.Postgis.html#st_x/1"},{"type":"macro","title":"AshGeo.Postgis.st_y/1","doc":"","ref":"AshGeo.Postgis.html#st_y/1"},{"type":"macro","title":"AshGeo.Postgis.st_z/1","doc":"","ref":"AshGeo.Postgis.html#st_z/1"},{"type":"module","title":"AshGeo.Validation","doc":"Validation shorthands for `Geo.PostGIS` types for use with Ash `validate`\n\n```elixir\nactions do\n  read :containing do\n    argument :point, :geo_any\n\n    validate is_point(:point)\n\n    filter expr(^st_contains(^arg(:point)))\n  end\nend\n```","ref":"AshGeo.Validation.html"},{"type":"macro","title":"AshGeo.Validation.contains/2","doc":"Check geometry A against geometry B using `Topo.contains?/2`","ref":"AshGeo.Validation.html#contains/2"},{"type":"macro","title":"AshGeo.Validation.disjoint/2","doc":"Check geometry A against geometry B using `Topo.disjoint?/2`","ref":"AshGeo.Validation.html#disjoint/2"},{"type":"macro","title":"AshGeo.Validation.equals/2","doc":"Check geometry A against geometry B using `Topo.equals?/2`","ref":"AshGeo.Validation.html#equals/2"},{"type":"macro","title":"AshGeo.Validation.intersects/2","doc":"Check geometry A against geometry B using `Topo.intersects?/2`","ref":"AshGeo.Validation.html#intersects/2"},{"type":"macro","title":"AshGeo.Validation.is_geometry_collection/1","doc":"Check argument is a `:geometry_collection` (`Geo.GeometryCollection`)","ref":"AshGeo.Validation.html#is_geometry_collection/1"},{"type":"macro","title":"AshGeo.Validation.is_line_string/1","doc":"Check argument is a `:line_string` (`Geo.LineString`)","ref":"AshGeo.Validation.html#is_line_string/1"},{"type":"macro","title":"AshGeo.Validation.is_line_string_z/1","doc":"Check argument is a `:line_string_z` (`Geo.LineStringZ`)","ref":"AshGeo.Validation.html#is_line_string_z/1"},{"type":"macro","title":"AshGeo.Validation.is_multi_line_string/1","doc":"Check argument is a `:multi_line_string` (`Geo.MultiLineString`)","ref":"AshGeo.Validation.html#is_multi_line_string/1"},{"type":"macro","title":"AshGeo.Validation.is_multi_line_string_z/1","doc":"Check argument is a `:multi_line_string_z` (`Geo.MultiLineStringZ`)","ref":"AshGeo.Validation.html#is_multi_line_string_z/1"},{"type":"macro","title":"AshGeo.Validation.is_multi_point/1","doc":"Check argument is a `:multi_point` (`Geo.MultiPoint`)","ref":"AshGeo.Validation.html#is_multi_point/1"},{"type":"macro","title":"AshGeo.Validation.is_multi_point_z/1","doc":"Check argument is a `:multi_point_z` (`Geo.MultiPointZ`)","ref":"AshGeo.Validation.html#is_multi_point_z/1"},{"type":"macro","title":"AshGeo.Validation.is_multi_polygon/1","doc":"Check argument is a `:multi_polygon` (`Geo.MultiPolygon`)","ref":"AshGeo.Validation.html#is_multi_polygon/1"},{"type":"macro","title":"AshGeo.Validation.is_multi_polygon_z/1","doc":"Check argument is a `:multi_polygon_z` (`Geo.MultiPolygonZ`)","ref":"AshGeo.Validation.html#is_multi_polygon_z/1"},{"type":"macro","title":"AshGeo.Validation.is_point/1","doc":"Check argument is a `:point` (`Geo.Point`)","ref":"AshGeo.Validation.html#is_point/1"},{"type":"macro","title":"AshGeo.Validation.is_point_m/1","doc":"Check argument is a `:point_m` (`Geo.PointM`)","ref":"AshGeo.Validation.html#is_point_m/1"},{"type":"macro","title":"AshGeo.Validation.is_point_z/1","doc":"Check argument is a `:point_z` (`Geo.PointZ`)","ref":"AshGeo.Validation.html#is_point_z/1"},{"type":"macro","title":"AshGeo.Validation.is_point_zm/1","doc":"Check argument is a `:point_zm` (`Geo.PointZM`)","ref":"AshGeo.Validation.html#is_point_zm/1"},{"type":"macro","title":"AshGeo.Validation.is_polygon/1","doc":"Check argument is a `:polygon` (`Geo.Polygon`)","ref":"AshGeo.Validation.html#is_polygon/1"},{"type":"macro","title":"AshGeo.Validation.is_polygon_z/1","doc":"Check argument is a `:polygon_z` (`Geo.PolygonZ`)","ref":"AshGeo.Validation.html#is_polygon_z/1"},{"type":"macro","title":"AshGeo.Validation.within/2","doc":"Check geometry A against geometry B using `Topo.within?/2`","ref":"AshGeo.Validation.html#within/2"},{"type":"module","title":"AshGeo.Validation.ArgumentStructType","doc":"Validate that the argument's value matches the specified struct type.","ref":"AshGeo.Validation.ArgumentStructType.html"},{"type":"module","title":"Options - AshGeo.Validation.ArgumentStructType","doc":"* `:argument` (`t:atom/0`) - Required. Argument to assert struct type\n\n* `:struct_type` (`t:atom/0`) - Required. Struct type to assert","ref":"AshGeo.Validation.ArgumentStructType.html#module-options"},{"type":"module","title":"AshGeo.Validation.Topo","doc":"Validate that the specified `Topo` function return true.","ref":"AshGeo.Validation.Topo.html"},{"type":"module","title":"Options - AshGeo.Validation.Topo","doc":"* `:function` - Required. Topo function to use for comparison Valid values are :contains?, :disjoint?, :equals?, :intersects?, :within?\n\n* `:geometry_a` (`t:atom/0`) - Required. Geometry A\n\n* `:geometry_b` (`t:atom/0`) - Required. Geometry B","ref":"AshGeo.Validation.Topo.html#module-options"},{"type":"module","title":"See also - AshGeo.Validation.Topo","doc":"- `AshGeo.topo_functions/0`","ref":"AshGeo.Validation.Topo.html#module-see-also"},{"type":"extras","title":"AshGeo","doc":"# AshGeo\n### *All your Ash resources, in space!*\n\n[![Hex](http://img.shields.io/hexpm/v/ash_geo.svg?style=flat)](https://hex.pm/packages/ash_geo)\n[![Hex Docs](https://img.shields.io/badge/hex-docs-purple.svg)](https://hexdocs.pm/ash_geo/)\n[![Downloads](https://img.shields.io/hexpm/dt/ash_geo.svg)](https://hex.pm/packages/ash_geo)\n[![Build Status](https://img.shields.io/github/actions/workflow/status/bcksl/ash_geo/ci.yml)](https://github.com/bcksl/ash_geo)\n[![Coverage Status](https://coveralls.io/repos/github/bcksl/ash_geo/badge.svg?branch=main)](https://coveralls.io/github/bcksl/ash_geo?branch=main)\n[![License](https://img.shields.io/github/license/bcksl/ash_geo?color=blue)](https://github.com/bcksl/git_opts/blob/main/LICENSE.md)\n[![GitHub Stars](https://img.shields.io/github/stars/bcksl/ash_geo?color=ffd700&label=github&logo=github)](https://github.com/bcksl/ash_geo)\n\n**AshGeo** contains tools for using geospatial data in [Ash] resources and\nexpressions, backed by [PostGIS], [Geo], [Geo.PostGIS] and [Topo].\n\nIt provides:\n\n- All the `st_*` functions that you would get with `Geo.PostGIS` for use with\n  Ash [`expr`][Ash expressions], and [more to come](#roadmap).\n- An `Ash.Type` backed by each of `Geo.JSON`, `Geo.WKB` and `Geo.WKT` which may\n  be used as `argument` types in your Ash actions, and will automatically cast\n  input from GeoJSON, WKT and WKB encodings.\n- An `Ash.Type` for `Geo.PostGIS.Geometry`, for use with resource attributes.\n- All types may be overridden and narrowed with `use`, allowing you to add\n  stricter constraints and storage types (e.g.  `geometry(Point,26918)`).\n- Validations for `Geo` types (such as `is_point_zm(:arg)` for checking that\n  argument `:arg` is a instance of `Geo.PointZM`)\n- Validations backed by `Topo`, allowing checks of simple constraints such as\n  `contains?` without needing to hit the database.","ref":"readme.html"},{"type":"extras","title":"Installation - AshGeo","doc":"```elixir\ndef deps do\n  [\n    {:ash_geo, \"~> 0.3.0\"},\n  ]\nend\n```\n\nThis package provides a collection of non-overlapping functionality based on\nseveral dependencies, not all of which may be necessary your application.\nTherefore, the dependencies for the functionality you wish to use must be added\nalongside `:ash_geo`.\n\n- For `Topo` validations, `:topo` must be added.\n- For Postgis expressions, `:geo_postgis` must be added.","ref":"readme.html#installation"},{"type":"extras","title":"Configuration - AshGeo","doc":"### `config/config.exs`:\n\n```elixir\n# Geo.PostGIS: Use Jason coder\nconfig :geo_postgis, json_library: Jason\n\n# Ash: Type shorthands\nconfig :ash, :custom_types, [\n  geometry: AshGeo.Geometry,\n  geo_json: AshGeo.GeoJson,\n  geo_wkt: AshGeo.GeoWkt,\n  geo_wkb: AshGeo.GeoWkb,\n  geo_any: AshGeo.GeoAny,\n  # You may add shorthands for any narrowed types here\n  #point26918: CoolApp.Type.GeometryPoint26918,\n]\n```\n\n### `config/runtime.exs`:\n\n```elixir\n# Postgrex: Geo.PostGIS types\nPostgrex.Types.define(CoolApp.PostgresTypes,\n  [Geo.PostGIS.Extension | Ecto.Adapters.Postgres.extensions()],\n  json: Jason)\n\n# Ecto: Geo.PostGIS types\nconfig :cool_app, CoolApp.Repo, types: CoolApp.PostgresTypes\n```","ref":"readme.html#configuration"},{"type":"extras","title":"Usage - AshGeo","doc":"```elixir\ndefmodule Area do\n  use Ash.Resource, data_layer: AshPostgres.DataLayer\n\n  import AshGeo.Postgis\n\n  attributes do\n    uuid_primary_key :id,\n    attribute :geom, :geometry, allow_nil?: false\n  end\n\n  actions do\n    create :create do\n      argument :geom, :geo_any\n\n      change set_attribute(:geom, arg(:geom))\n    end\n\n    read :containing do\n      argument :geom, :geo_any do\n        allow_nil? false\n        constraints geo_types: :point\n      end\n\n      filter expr(^st_within(^arg(:geom), geom))\n    end\n  end\n\n  code_interface do\n    define_for Area\n    define :create, args: [:geom]\n    define :containing, args: [:geom]\n  end\nend\n```\n\nTry it out:\n\n```elixir\nArea.create! \"POLYGON ((30 0, 20 30, 0 10, 30 0))\"\nArea.create! \"POLYGON ((30 10, 40 40, 20 40, 10 20, 30 10))\"\nArea.containing! \"POINT(30 30)\"\nArea.containing! \"POINT(20 20)\"\nArea.containing! \"POINT(10 40)\"\nArea.containing! \"POLYGON((0 0, 30 20, 40 30, 0 0))\"\n```\n\nThe full documentation can be found [on HexDocs].","ref":"readme.html#usage"},{"type":"extras","title":"Roadmap - AshGeo","doc":"- Add more PostGIS function wrappers (check out the [PostGIS reference] to see\n  all that are available).\n- Continue to improve the test suite.\n- Replace validation macros with Spark DSL patches or similar.\n- Replace PostGIS `fragment` macros with custom predicates\n  ([`ash#374`](https://github.com/ash-project/ash/issues/374))\n- Add datalayer-independent expression predicates backed by Topo.\n- Add more informative error messages\n  ([`ash#365`](https://github.com/ash-project/ash/issues/365)).","ref":"readme.html#roadmap"},{"type":"extras","title":"Developing - AshGeo","doc":"To get set up with the development environment, you will need a Postgres\ninstance with support for the PostGIS extensions listed in\n`test/support/repo.ex` (the [`postgis/postgis`][postgis image] image works\nnicely) and a superuser account `ash_geo_test` credentialed according to\n`config/config.exs`.\n\nYou may now generate and apply the test migrations:\n\n```sh\nmix ash_postgres.generate_migrations\n```\n\n**AshGeo** uses `ex_check` to bundle the test configuration, and simply running\n`mix check` should closely follow the configuration used in CI.","ref":"readme.html#developing"},{"type":"extras","title":"Contributing - AshGeo","doc":"If you have ideas or come across any bugs, feel free to open a [pull request] or\nan [issue]. You can also find me on the [Ash\nDiscord](https://discord.gg/D7FNG2q) as `@\\`.","ref":"readme.html#contributing"},{"type":"extras","title":"License - AshGeo","doc":"MIT License\n\nCopyright (c) 2023 [bcksl]\n\nSee [LICENSE.md] for details.\n\n[bcksl]: https://github.com/bcksl\n[LICENSE.md]: https://github.com/bcksl/ash_geo/blob/main/LICENSE.md\n[pull request]: https://github.com/bcksl/ash_geo/pulls\n[issue]: https://github.com/bcksl/ash_geo/issues\n[on HexDocs]: https://hexdocs.pm/ash_geo\n[PostGIS]: https://postgis.net/\n[PostGIS reference]: https://postgis.net/docs/reference.html\n[postgis image]: https://hub.docker.com/r/postgis/postgis\n[Geo]: https://github.com/bryanjos/geo\n[Geo.PostGIS]: https://github.com/bryanjos/geo_postgis\n[Ash]: https://github.com/ash-project/ash\n[Ash expressions]: https://hexdocs.pm/ash/expressions.html","ref":"readme.html#license"},{"type":"extras","title":"Change Log","doc":"# Change Log\n\nAll notable changes to this project will be documented in this file.\nSee [Conventional Commits](Https://conventionalcommits.org) for commit guidelines.\n\n<!-- changelog -->\n\n## [v0.3.0](https://github.com/bcksl/ash_geo/compare/v0.2.0...v0.3.0) (2024-07-31)","ref":"changelog.html"},{"type":"extras","title":"Breaking Changes: - Change Log","doc":"* update to 3.0\n\n\n\n## [v0.2.0](https://github.com/bcksl/ash_geo/compare/v0.1.3...v0.2.0) (2023-08-09)","ref":"changelog.html#breaking-changes"},{"type":"extras","title":"Features: - Change Log","doc":"* add `check_srid` and `force_srid` to geometry","ref":"changelog.html#features"},{"type":"extras","title":"Bug Fixes: - Change Log","doc":"* make `topo` also an optional dependency\n\n* missing `expr` on `fragment`","ref":"changelog.html#bug-fixes"},{"type":"extras","title":"Improvements: - Change Log","doc":"* add `test` alias for `mix` to create and migrate\n\n## [v0.1.3](https://github.com/bcksl/ash_geo/compare/v0.1.2...v0.1.3) (2023-07-31)","ref":"changelog.html#improvements"},{"type":"extras","title":"Bug Fixes: - Change Log","doc":"* remove reduntant `docs` task from `mix check`\n\n* ensure ci gets triggered on release\n\n## [v0.1.2](https://github.com/bcksl/ash_geo/compare/v0.1.1...v0.1.2) (2023-06-07)","ref":"changelog.html#bug-fixes"},{"type":"extras","title":"Bug Fixes: - Change Log","doc":"* ensure ci gets triggered on release\n\n## [v0.1.1](https://github.com/bcksl/ash_geo/compare/v0.1.0...v0.1.1) (2023-06-02)\n\n\n\n\n## [v0.1.0](https://github.com/bcksl/ash_geo/compare/v0.1.0...v0.1.0) (2023-06-02)","ref":"changelog.html#bug-fixes"},{"type":"extras","title":"Features: - Change Log","doc":"* adapt ci workflow from `ash`, plus `coveralls` and more\n\n* flesh out readme","ref":"changelog.html#features"}],"content_type":"text/markdown","producer":{"name":"ex_doc","version":[48,46,51,52,46,50]}}