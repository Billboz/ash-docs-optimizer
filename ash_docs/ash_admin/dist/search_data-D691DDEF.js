searchData={"content_type":"text/markdown","items":[{"doc":"The type of the value in the form. Use `default` if you are just specifying field order","ref":"dsl-ashadmin-resource.html#admin-form-field-type","title":"AshAdmin.Resource.admin.form.field.type","type":"DSL"},{"doc":"The name of the field to be modified","ref":"dsl-ashadmin-resource.html#admin-form-field-name","title":"AshAdmin.Resource.admin.form.field.name","type":"DSL"},{"doc":"Declare non-default behavior for a specific attribute.","ref":"dsl-ashadmin-resource.html#admin-form-field","title":"AshAdmin.Resource.admin.form.field","type":"DSL"},{"doc":"Configure the appearance of fields in admin forms.","ref":"dsl-ashadmin-resource.html#admin-form","title":"AshAdmin.Resource.admin.form","type":"DSL"},{"doc":"The list of fields that should not be redacted in the admin UI even if they are marked as sensitive.","ref":"dsl-ashadmin-resource.html#admin-show_sensitive_fields","title":"AshAdmin.Resource.admin.show_sensitive_fields","type":"DSL"},{"doc":"The group in the top resource dropdown that the resource appears in.","ref":"dsl-ashadmin-resource.html#admin-resource_group","title":"AshAdmin.Resource.admin.resource_group","type":"DSL"},{"doc":"The list of attributes to render when this resource is shown as a relationship on another resource's datatable.","ref":"dsl-ashadmin-resource.html#admin-relationship_display_fields","title":"AshAdmin.Resource.admin.relationship_display_fields","type":"DSL"},{"doc":"The list of fields and their formats.","ref":"dsl-ashadmin-resource.html#admin-format_fields","title":"AshAdmin.Resource.admin.format_fields","type":"DSL"},{"doc":"The list of attributes to render on the table view.","ref":"dsl-ashadmin-resource.html#admin-table_columns","title":"AshAdmin.Resource.admin.table_columns","type":"DSL"},{"doc":"For resources that use ash_postgres' polymorphism capabilities, you can provide a list of actions that should require a table to be set.\nIf this is not set, then *all* actions will require tables.\n","ref":"dsl-ashadmin-resource.html#admin-polymorphic_actions","title":"AshAdmin.Resource.admin.polymorphic_actions","type":"DSL"},{"doc":"For resources that use ash_postgres' polymorphism capabilities, you can provide a list of tables that should be available to\nselect. These will be added to the list of derivable tables based on scanning all domains and resources provided to ash_admin.\n","ref":"dsl-ashadmin-resource.html#admin-polymorphic_tables","title":"AshAdmin.Resource.admin.polymorphic_tables","type":"DSL"},{"doc":"A list of destroy actions that can be used to destroy records. By default, all actions are included.","ref":"dsl-ashadmin-resource.html#admin-destroy_actions","title":"AshAdmin.Resource.admin.destroy_actions","type":"DSL"},{"doc":"A list of update actions that can be used to update records. By default, all actions are included.","ref":"dsl-ashadmin-resource.html#admin-update_actions","title":"AshAdmin.Resource.admin.update_actions","type":"DSL"},{"doc":"A list of create actions that can create records. By default, all actions are included.","ref":"dsl-ashadmin-resource.html#admin-create_actions","title":"AshAdmin.Resource.admin.create_actions","type":"DSL"},{"doc":"A list of read actions that can be used to show resource details. By default, all actions are included.","ref":"dsl-ashadmin-resource.html#admin-read_actions","title":"AshAdmin.Resource.admin.read_actions","type":"DSL"},{"doc":"The action to use when linking to the resource/viewing a single record. Defaults to the primary read action.","ref":"dsl-ashadmin-resource.html#admin-show_action","title":"AshAdmin.Resource.admin.show_action","type":"DSL"},{"doc":"Whether or not this resource can be used as the actor for requests.","ref":"dsl-ashadmin-resource.html#admin-actor?","title":"AshAdmin.Resource.admin.actor?","type":"DSL"},{"doc":"The proper name to use when this resource appears in the admin interface.","ref":"dsl-ashadmin-resource.html#admin-name","title":"AshAdmin.Resource.admin.name","type":"DSL"},{"doc":"Configure the admin dashboard for a given resource.","ref":"dsl-ashadmin-resource.html#admin","title":"AshAdmin.Resource.admin","type":"DSL"},{"doc":"Humanized names for each resource group to appear in the admin area. These will be used as labels in the top navigation dropdown. If a key for a group does not appear in this mapping, the label will not be rendered.","ref":"dsl-ashadmin-domain.html#admin-resource_group_labels","title":"AshAdmin.Domain.admin.resource_group_labels","type":"DSL"},{"doc":"Set the default page for the resource to be the primary read action or the resource schema. Schema is the default for backwards compatibility, if a resource doesn't have a primary read action it will fallback to the schema view.","ref":"dsl-ashadmin-domain.html#admin-default_resource_page","title":"AshAdmin.Domain.admin.default_resource_page","type":"DSL"},{"doc":"List of resources that should be included in the admin dashboard","ref":"dsl-ashadmin-domain.html#admin-show_resources","title":"AshAdmin.Domain.admin.show_resources","type":"DSL"},{"doc":"Whether or not this domain and its resources should be included in the admin dashboard.","ref":"dsl-ashadmin-domain.html#admin-show?","title":"AshAdmin.Domain.admin.show?","type":"DSL"},{"doc":"The name of the domain in the dashboard. Will be derived if not set.","ref":"dsl-ashadmin-domain.html#admin-name","title":"AshAdmin.Domain.admin.name","type":"DSL"},{"doc":"Configure the admin dashboard for a given domain.","ref":"dsl-ashadmin-domain.html#admin","title":"AshAdmin.Domain.admin","type":"DSL"},{"doc":"Provides core UI components.\n\nAt the first glance, this module may seem daunting, but its goal is\nto provide some core building blocks in your application, such as modals,\ntables, and forms. The components are mostly markup and well documented\nwith doc strings and declarative assigns. You may customize and style\nthem in any way you want, based on your application growth and needs.\n\nThe default components use Tailwind CSS, a utility-first CSS framework.\nSee the [Tailwind CSS documentation](https://tailwindcss.com) to learn\nhow to customize them or feel free to swap in another framework altogether.\n\nIcons are provided by [heroicons](https://heroicons.com). See `icon/1` for usage.","ref":"AshAdmin.CoreComponents.html","title":"AshAdmin.CoreComponents","type":"module"},{"doc":"Renders a back navigation link.","ref":"AshAdmin.CoreComponents.html#back/1","title":"AshAdmin.CoreComponents.back/1","type":"function"},{"doc":"<.back navigate={~p\"/posts\"}>Back to posts</.back>","ref":"AshAdmin.CoreComponents.html#back/1-examples","title":"Examples - AshAdmin.CoreComponents.back/1","type":"function"},{"doc":"* `navigate` (`:any`) (required)","ref":"AshAdmin.CoreComponents.html#back/1-attributes","title":"Attributes - AshAdmin.CoreComponents.back/1","type":"function"},{"doc":"* `inner_block` (required)","ref":"AshAdmin.CoreComponents.html#back/1-slots","title":"Slots - AshAdmin.CoreComponents.back/1","type":"function"},{"doc":"Renders a button.","ref":"AshAdmin.CoreComponents.html#button/1","title":"AshAdmin.CoreComponents.button/1","type":"function"},{"doc":"<.button>Send!</.button>\n    <.button phx-click=\"go\" class=\"ml-2\">Send!</.button>","ref":"AshAdmin.CoreComponents.html#button/1-examples","title":"Examples - AshAdmin.CoreComponents.button/1","type":"function"},{"doc":"* `type` (`:string`) - Defaults to `nil`.\n* `class` (`:string`) - Defaults to `nil`.\n* Global attributes are accepted. Supports all globals plus: `[\"disabled\", \"form\", \"name\", \"value\"]`.","ref":"AshAdmin.CoreComponents.html#button/1-attributes","title":"Attributes - AshAdmin.CoreComponents.button/1","type":"function"},{"doc":"* `inner_block` (required)","ref":"AshAdmin.CoreComponents.html#button/1-slots","title":"Slots - AshAdmin.CoreComponents.button/1","type":"function"},{"doc":"Generates a generic error message.","ref":"AshAdmin.CoreComponents.html#error/1","title":"AshAdmin.CoreComponents.error/1","type":"function"},{"doc":"* `inner_block` (required)","ref":"AshAdmin.CoreComponents.html#error/1-slots","title":"Slots - AshAdmin.CoreComponents.error/1","type":"function"},{"doc":"Renders flash notices.","ref":"AshAdmin.CoreComponents.html#flash/1","title":"AshAdmin.CoreComponents.flash/1","type":"function"},{"doc":"<.flash kind={:info} flash={@flash} />\n    <.flash kind={:info} phx-mounted={show(\"#flash\")}>Welcome Back!</.flash>","ref":"AshAdmin.CoreComponents.html#flash/1-examples","title":"Examples - AshAdmin.CoreComponents.flash/1","type":"function"},{"doc":"* `id` (`:string`) - the optional id of flash container. Defaults to `\"flash\"`.\n* `flash` (`:map`) - the map of flash messages to display. Defaults to `%{}`.\n* `title` (`:string`) - Defaults to `nil`.\n* `kind` (`:atom`) - used for styling and flash lookup.Must be one of `:info`, or `:error`.\n* Global attributes are accepted. the arbitrary HTML attributes to add to the flash container.","ref":"AshAdmin.CoreComponents.html#flash/1-attributes","title":"Attributes - AshAdmin.CoreComponents.flash/1","type":"function"},{"doc":"* `inner_block` - the optional inner block that renders the flash message.","ref":"AshAdmin.CoreComponents.html#flash/1-slots","title":"Slots - AshAdmin.CoreComponents.flash/1","type":"function"},{"doc":"Shows the flash group with standard titles and content.","ref":"AshAdmin.CoreComponents.html#flash_group/1","title":"AshAdmin.CoreComponents.flash_group/1","type":"function"},{"doc":"<.flash_group flash={@flash} />","ref":"AshAdmin.CoreComponents.html#flash_group/1-examples","title":"Examples - AshAdmin.CoreComponents.flash_group/1","type":"function"},{"doc":"* `flash` (`:map`) (required) - the map of flash messages.","ref":"AshAdmin.CoreComponents.html#flash_group/1-attributes","title":"Attributes - AshAdmin.CoreComponents.flash_group/1","type":"function"},{"doc":"Renders a header with title.","ref":"AshAdmin.CoreComponents.html#header/1","title":"AshAdmin.CoreComponents.header/1","type":"function"},{"doc":"* `class` (`:string`) - Defaults to `nil`.","ref":"AshAdmin.CoreComponents.html#header/1-attributes","title":"Attributes - AshAdmin.CoreComponents.header/1","type":"function"},{"doc":"* `inner_block` (required)\n* `subtitle`\n* `actions`","ref":"AshAdmin.CoreComponents.html#header/1-slots","title":"Slots - AshAdmin.CoreComponents.header/1","type":"function"},{"doc":"","ref":"AshAdmin.CoreComponents.html#hide/2","title":"AshAdmin.CoreComponents.hide/2","type":"function"},{"doc":"","ref":"AshAdmin.CoreComponents.html#hide_modal/2","title":"AshAdmin.CoreComponents.hide_modal/2","type":"function"},{"doc":"Renders a [Heroicon](https://heroicons.com).\n\nHeroicons come in three styles – outline, solid, and mini.\nBy default, the outline style is used, but solid and mini may\nbe applied by using the `-solid` and `-mini` suffix.\n\nYou can customize the size and colors of the icons by setting\nwidth, height, and background color classes.\n\nIcons are extracted from your `assets/vendor/heroicons` directory and bundled\nwithin your compiled app.css by the plugin in your `assets/tailwind.config.js`.","ref":"AshAdmin.CoreComponents.html#icon/1","title":"AshAdmin.CoreComponents.icon/1","type":"function"},{"doc":"<.icon name=\"hero-x-mark-solid\" />\n    <.icon name=\"hero-arrow-path\" class=\"ml-1 w-3 h-3 animate-spin\" />","ref":"AshAdmin.CoreComponents.html#icon/1-examples","title":"Examples - AshAdmin.CoreComponents.icon/1","type":"function"},{"doc":"* `name` (`:string`) (required)\n* `class` (`:string`) - Defaults to `nil`.","ref":"AshAdmin.CoreComponents.html#icon/1-attributes","title":"Attributes - AshAdmin.CoreComponents.icon/1","type":"function"},{"doc":"Renders an input with label and error messages.\n\nA `Phoenix.HTML.FormField` may be passed as argument,\nwhich is used to retrieve the input name, id, and values.\nOtherwise all attributes may be passed explicitly.","ref":"AshAdmin.CoreComponents.html#input/1","title":"AshAdmin.CoreComponents.input/1","type":"function"},{"doc":"This function accepts all HTML input types, considering that:\n\n  * You may also set `type=\"select\"` to render a ` ` tag\n\n  * `type=\"checkbox\"` is used exclusively to render boolean values\n\n  * For live file uploads, see `Phoenix.Component.live_file_input/1`\n\nSee https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\nfor more information.","ref":"AshAdmin.CoreComponents.html#input/1-types","title":"Types - AshAdmin.CoreComponents.input/1","type":"function"},{"doc":"<.input field={@form[:email]} type=\"email\" />\n    <.input name=\"my-input\" errors={[\"oh no!\"]} />","ref":"AshAdmin.CoreComponents.html#input/1-examples","title":"Examples - AshAdmin.CoreComponents.input/1","type":"function"},{"doc":"* `id` (`:any`) - Defaults to `nil`.\n* `name` (`:any`)\n* `label` (`:string`) - Defaults to `nil`.\n* `value` (`:any`)\n* `type` (`:string`) - Defaults to `\"text\"`.\n* `field` (`Phoenix.HTML.FormField`) - a form field struct retrieved from the form, for example: @form[:email].\n* `errors` (`:list`) - Defaults to `[]`.\n* `checked` (`:boolean`) - the checked flag for checkbox inputs.\n* `prompt` (`:string`) - the prompt for select inputs. Defaults to `nil`.\n* `options` (`:list`) - the options to pass to Phoenix.HTML.Form.options_for_select/2.\n* `multiple` (`:boolean`) - the multiple flag for select inputs. Defaults to `false`.\n* Global attributes are accepted. Supports all globals plus: `[\"accept\", \"autocomplete\", \"capture\", \"cols\", \"disabled\", \"form\", \"list\", \"max\", \"maxlength\", \"min\", \"minlength\", \"multiple\", \"pattern\", \"placeholder\", \"readonly\", \"required\", \"rows\", \"size\", \"step\"]`.","ref":"AshAdmin.CoreComponents.html#input/1-attributes","title":"Attributes - AshAdmin.CoreComponents.input/1","type":"function"},{"doc":"* `inner_block`","ref":"AshAdmin.CoreComponents.html#input/1-slots","title":"Slots - AshAdmin.CoreComponents.input/1","type":"function"},{"doc":"Renders a label.","ref":"AshAdmin.CoreComponents.html#label/1","title":"AshAdmin.CoreComponents.label/1","type":"function"},{"doc":"* `for` (`:string`) - Defaults to `nil`.","ref":"AshAdmin.CoreComponents.html#label/1-attributes","title":"Attributes - AshAdmin.CoreComponents.label/1","type":"function"},{"doc":"* `inner_block` (required)","ref":"AshAdmin.CoreComponents.html#label/1-slots","title":"Slots - AshAdmin.CoreComponents.label/1","type":"function"},{"doc":"Renders a data list.","ref":"AshAdmin.CoreComponents.html#list/1","title":"AshAdmin.CoreComponents.list/1","type":"function"},{"doc":"<.list>\n      <:item title=\"Title\"><%= @post.title %></:item>\n      <:item title=\"Views\"><%= @post.views %></:item>\n    </.list>","ref":"AshAdmin.CoreComponents.html#list/1-examples","title":"Examples - AshAdmin.CoreComponents.list/1","type":"function"},{"doc":"* `item` (required) - Accepts attributes:\n\n  * `title` (`:string`) (required)","ref":"AshAdmin.CoreComponents.html#list/1-slots","title":"Slots - AshAdmin.CoreComponents.list/1","type":"function"},{"doc":"Renders a modal.","ref":"AshAdmin.CoreComponents.html#modal/1","title":"AshAdmin.CoreComponents.modal/1","type":"function"},{"doc":"<.modal id=\"confirm-modal\">\n      This is a modal.\n    </.modal>\n\nJS commands may be passed to the `:on_cancel` to configure\nthe closing/cancel event, for example:\n\n    <.modal id=\"confirm\" on_cancel={JS.navigate(~p\"/posts\")}>\n      This is another modal.\n    </.modal>","ref":"AshAdmin.CoreComponents.html#modal/1-examples","title":"Examples - AshAdmin.CoreComponents.modal/1","type":"function"},{"doc":"* `id` (`:string`) (required)\n* `show` (`:boolean`) - Defaults to `false`.\n* `on_cancel` (`Phoenix.LiveView.JS`) - Defaults to `%Phoenix.LiveView.JS{ops: []}`.","ref":"AshAdmin.CoreComponents.html#modal/1-attributes","title":"Attributes - AshAdmin.CoreComponents.modal/1","type":"function"},{"doc":"* `inner_block` (required)","ref":"AshAdmin.CoreComponents.html#modal/1-slots","title":"Slots - AshAdmin.CoreComponents.modal/1","type":"function"},{"doc":"","ref":"AshAdmin.CoreComponents.html#show/2","title":"AshAdmin.CoreComponents.show/2","type":"function"},{"doc":"","ref":"AshAdmin.CoreComponents.html#show_modal/2","title":"AshAdmin.CoreComponents.show_modal/2","type":"function"},{"doc":"Renders a simple form.","ref":"AshAdmin.CoreComponents.html#simple_form/1","title":"AshAdmin.CoreComponents.simple_form/1","type":"function"},{"doc":"<.simple_form for={@form} phx-change=\"validate\" phx-submit=\"save\">\n      <.input field={@form[:email]} label=\"Email\"/>\n      <.input field={@form[:username]} label=\"Username\" />\n      <:actions>\n        <.button>Save</.button>\n      </:actions>\n    </.simple_form>","ref":"AshAdmin.CoreComponents.html#simple_form/1-examples","title":"Examples - AshAdmin.CoreComponents.simple_form/1","type":"function"},{"doc":"* `for` (`:any`) (required) - the datastructure for the form.\n* `as` (`:any`) - the server side parameter to collect all input under. Defaults to `nil`.\n* Global attributes are accepted. the arbitrary HTML attributes to apply to the form tag. Supports all globals plus: `[\"autocomplete\", \"name\", \"rel\", \"action\", \"enctype\", \"method\", \"novalidate\", \"target\", \"multipart\"]`.","ref":"AshAdmin.CoreComponents.html#simple_form/1-attributes","title":"Attributes - AshAdmin.CoreComponents.simple_form/1","type":"function"},{"doc":"* `inner_block` (required)\n* `actions` - the slot for form actions, such as a submit button.","ref":"AshAdmin.CoreComponents.html#simple_form/1-slots","title":"Slots - AshAdmin.CoreComponents.simple_form/1","type":"function"},{"doc":"Renders a table with generic styling.","ref":"AshAdmin.CoreComponents.html#table/1","title":"AshAdmin.CoreComponents.table/1","type":"function"},{"doc":"<.table id=\"users\" rows={@users}>\n      <:col :let={user} label=\"id\"><%= user.id %></:col>\n      <:col :let={user} label=\"username\"><%= user.username %></:col>\n    </.table>","ref":"AshAdmin.CoreComponents.html#table/1-examples","title":"Examples - AshAdmin.CoreComponents.table/1","type":"function"},{"doc":"* `id` (`:string`) (required)\n* `rows` (`:list`) (required)\n* `row_id` (`:any`) - the function for generating the row id. Defaults to `nil`.\n* `row_click` (`:any`) - the function for handling phx-click on each row. Defaults to `nil`.\n* `row_item` (`:any`) - the function for mapping each row before calling the :col and :action slots. Defaults to `&Function.identity/1`.","ref":"AshAdmin.CoreComponents.html#table/1-attributes","title":"Attributes - AshAdmin.CoreComponents.table/1","type":"function"},{"doc":"* `col` (required) - Accepts attributes:\n\n  * `label` (`:string`)\n* `action` - the slot for showing user actions in the last table column.","ref":"AshAdmin.CoreComponents.html#table/1-slots","title":"Slots - AshAdmin.CoreComponents.table/1","type":"function"},{"doc":"Translates an error message using gettext.","ref":"AshAdmin.CoreComponents.html#translate_error/1","title":"AshAdmin.CoreComponents.translate_error/1","type":"function"},{"doc":"Translates the errors for a field from a keyword list of errors.","ref":"AshAdmin.CoreComponents.html#translate_errors/2","title":"AshAdmin.CoreComponents.translate_errors/2","type":"function"},{"doc":"A domain extension to alter the behavior of a domain in the admin UI.","ref":"AshAdmin.Domain.html","title":"AshAdmin.Domain","type":"module"},{"doc":"Hello!","ref":"AshAdmin.Domain.html#admin/1","title":"AshAdmin.Domain.admin/1","type":"macro"},{"doc":"","ref":"AshAdmin.Domain.html#default_resource_page/1","title":"AshAdmin.Domain.default_resource_page/1","type":"function"},{"doc":"","ref":"AshAdmin.Domain.html#name/1","title":"AshAdmin.Domain.name/1","type":"function"},{"doc":"","ref":"AshAdmin.Domain.html#resource_group_labels/1","title":"AshAdmin.Domain.resource_group_labels/1","type":"function"},{"doc":"","ref":"AshAdmin.Domain.html#show?/1","title":"AshAdmin.Domain.show?/1","type":"function"},{"doc":"","ref":"AshAdmin.Domain.html#show_resources/1","title":"AshAdmin.Domain.show_resources/1","type":"function"},{"doc":"Mod Docs","ref":"AshAdmin.Domain.Admin.Options.html","title":"AshAdmin.Domain.Admin.Options","type":"module"},{"doc":"Hello 3","ref":"AshAdmin.Domain.Admin.Options.html#default_resource_page/1","title":"AshAdmin.Domain.Admin.Options.default_resource_page/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Domain.Admin.Options.html#name/1","title":"AshAdmin.Domain.Admin.Options.name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Domain.Admin.Options.html#resource_group_labels/1","title":"AshAdmin.Domain.Admin.Options.resource_group_labels/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Domain.Admin.Options.html#show?/1","title":"AshAdmin.Domain.Admin.Options.show?/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Domain.Admin.Options.html#show_resources/1","title":"AshAdmin.Domain.Admin.Options.show_resources/1","type":"macro"},{"doc":"A module providing Internationalization with a gettext-based API.\n\nBy using [Gettext](https://hexdocs.pm/gettext),\nyour module gains a set of macros for translations, for example:\n\n    use Gettext, backend: AshAdmin.Gettext\n\n    # Simple translation\n    gettext(\"Here is the string to translate\")\n\n    # Plural translation\n    ngettext(\"Here is the string to translate\",\n             \"Here are the strings to translate\",\n             3)\n\n    # Domain-based translation\n    dgettext(\"errors\", \"Here is the error message to translate\")\n\nSee the [Gettext Docs](https://hexdocs.pm/gettext) for detailed usage.","ref":"AshAdmin.Gettext.html","title":"AshAdmin.Gettext","type":"module"},{"doc":"","ref":"AshAdmin.Gettext.html#handle_missing_bindings/2","title":"AshAdmin.Gettext.handle_missing_bindings/2","type":"function"},{"doc":"","ref":"AshAdmin.Gettext.html#handle_missing_plural_translation/7","title":"AshAdmin.Gettext.handle_missing_plural_translation/7","type":"function"},{"doc":"","ref":"AshAdmin.Gettext.html#handle_missing_translation/5","title":"AshAdmin.Gettext.handle_missing_translation/5","type":"function"},{"doc":"A resource extension to alter the behaviour of a resource in the admin UI.","ref":"AshAdmin.Resource.html","title":"AshAdmin.Resource","type":"module"},{"doc":"","ref":"AshAdmin.Resource.html#actor?/1","title":"AshAdmin.Resource.actor?/1","type":"function"},{"doc":"Hello!","ref":"AshAdmin.Resource.html#admin/1","title":"AshAdmin.Resource.admin/1","type":"macro"},{"doc":"","ref":"AshAdmin.Resource.html#create_actions/1","title":"AshAdmin.Resource.create_actions/1","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#destroy_actions/1","title":"AshAdmin.Resource.destroy_actions/1","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#field/2","title":"AshAdmin.Resource.field/2","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#fields/1","title":"AshAdmin.Resource.fields/1","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#format_fields/1","title":"AshAdmin.Resource.format_fields/1","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#name/1","title":"AshAdmin.Resource.name/1","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#polymorphic?/2","title":"AshAdmin.Resource.polymorphic?/2","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#polymorphic_actions/1","title":"AshAdmin.Resource.polymorphic_actions/1","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#polymorphic_tables/2","title":"AshAdmin.Resource.polymorphic_tables/2","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#read_actions/1","title":"AshAdmin.Resource.read_actions/1","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#relationship_display_fields/1","title":"AshAdmin.Resource.relationship_display_fields/1","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#resource_group/1","title":"AshAdmin.Resource.resource_group/1","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#show_action/1","title":"AshAdmin.Resource.show_action/1","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#show_sensitive_fields/1","title":"AshAdmin.Resource.show_sensitive_fields/1","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#table_columns/1","title":"AshAdmin.Resource.table_columns/1","type":"function"},{"doc":"","ref":"AshAdmin.Resource.html#update_actions/1","title":"AshAdmin.Resource.update_actions/1","type":"function"},{"doc":"Mod docs","ref":"AshAdmin.Resource.Admin.Form.Field.html","title":"AshAdmin.Resource.Admin.Form.Field","type":"module"},{"doc":"Hello 4","ref":"AshAdmin.Resource.Admin.Form.Field.html#field/2","title":"AshAdmin.Resource.Admin.Form.Field.field/2","type":"macro"},{"doc":"Mod Docs","ref":"AshAdmin.Resource.Admin.Form.Field.Options.html","title":"AshAdmin.Resource.Admin.Form.Field.Options","type":"module"},{"doc":"Hello 2","ref":"AshAdmin.Resource.Admin.Form.Field.Options.html#type/1","title":"AshAdmin.Resource.Admin.Form.Field.Options.type/1","type":"macro"},{"doc":"Mod Docs","ref":"AshAdmin.Resource.Admin.Options.html","title":"AshAdmin.Resource.Admin.Options","type":"module"},{"doc":"Hello 3","ref":"AshAdmin.Resource.Admin.Options.html#actor?/1","title":"AshAdmin.Resource.Admin.Options.actor?/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Resource.Admin.Options.html#create_actions/1","title":"AshAdmin.Resource.Admin.Options.create_actions/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Resource.Admin.Options.html#destroy_actions/1","title":"AshAdmin.Resource.Admin.Options.destroy_actions/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Resource.Admin.Options.html#format_fields/1","title":"AshAdmin.Resource.Admin.Options.format_fields/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Resource.Admin.Options.html#name/1","title":"AshAdmin.Resource.Admin.Options.name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Resource.Admin.Options.html#polymorphic_actions/1","title":"AshAdmin.Resource.Admin.Options.polymorphic_actions/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Resource.Admin.Options.html#polymorphic_tables/1","title":"AshAdmin.Resource.Admin.Options.polymorphic_tables/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Resource.Admin.Options.html#read_actions/1","title":"AshAdmin.Resource.Admin.Options.read_actions/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Resource.Admin.Options.html#relationship_display_fields/1","title":"AshAdmin.Resource.Admin.Options.relationship_display_fields/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Resource.Admin.Options.html#resource_group/1","title":"AshAdmin.Resource.Admin.Options.resource_group/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Resource.Admin.Options.html#show_action/1","title":"AshAdmin.Resource.Admin.Options.show_action/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Resource.Admin.Options.html#show_sensitive_fields/1","title":"AshAdmin.Resource.Admin.Options.show_sensitive_fields/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Resource.Admin.Options.html#table_columns/1","title":"AshAdmin.Resource.Admin.Options.table_columns/1","type":"macro"},{"doc":"Hello 3","ref":"AshAdmin.Resource.Admin.Options.html#update_actions/1","title":"AshAdmin.Resource.Admin.Options.update_actions/1","type":"macro"},{"doc":"The representation of a configured field in the admin UI.","ref":"AshAdmin.Resource.Field.html","title":"AshAdmin.Resource.Field","type":"module"},{"doc":"","ref":"AshAdmin.Resource.Field.html#schema/0","title":"AshAdmin.Resource.Field.schema/0","type":"function"},{"doc":"MOD DOCS","ref":"AshAdmin.Resource.Form.html","title":"AshAdmin.Resource.Form","type":"module"},{"doc":"Hello!","ref":"AshAdmin.Resource.Form.html#form/1","title":"AshAdmin.Resource.Form.form/1","type":"macro"},{"doc":"Validates that table columns are all either attributes, or `:one` cardinality relationships.","ref":"AshAdmin.Resource.Transformers.ValidateTableColumns.html","title":"AshAdmin.Resource.Transformers.ValidateTableColumns","type":"module"},{"doc":"","ref":"AshAdmin.Resource.Transformers.ValidateTableColumns.html#after?/1","title":"AshAdmin.Resource.Transformers.ValidateTableColumns.after?/1","type":"function"},{"doc":"","ref":"AshAdmin.Resource.Transformers.ValidateTableColumns.html#after_compile?/0","title":"AshAdmin.Resource.Transformers.ValidateTableColumns.after_compile?/0","type":"function"},{"doc":"","ref":"AshAdmin.Resource.Transformers.ValidateTableColumns.html#before?/1","title":"AshAdmin.Resource.Transformers.ValidateTableColumns.before?/1","type":"function"},{"doc":"","ref":"AshAdmin.Resource.Transformers.ValidateTableColumns.html#transform/1","title":"AshAdmin.Resource.Transformers.ValidateTableColumns.transform/1","type":"function"},{"doc":"Provides LiveView routing for AshAdmin.","ref":"AshAdmin.Router.html","title":"AshAdmin.Router","type":"module"},{"doc":"Can be used to create a `:browser` pipeline easily if you don't have one.\n\nBy default it is called `:browser`, but you can rename it by supplying an argument,\nfor example:\n\n```elixir\ndefmodule MyAppWeb.Router do\n  use Phoenix.Router\n\n  import AshAdmin.Router\n  admin_browser_pipeline :something\n\n  scope \"/\" do\n\n    pipe_through [:something]\n    ash_admin \"/admin\"\n  end\nend\n```","ref":"AshAdmin.Router.html#admin_browser_pipeline/1","title":"AshAdmin.Router.admin_browser_pipeline/1","type":"macro"},{"doc":"Defines an AshAdmin route.\nIt expects the `path` the admin dashboard will be mounted at\nand a set of options.","ref":"AshAdmin.Router.html#ash_admin/2","title":"AshAdmin.Router.ash_admin/2","type":"macro"},{"doc":"* `:live_socket_path` - Optional override for the socket path. it must match\n    the `socket \"/live\", Phoenix.LiveView.Socket` in your endpoint. Defaults to `/live`.\n\n  * `:on_mount` - Optional list of hooks to attach to the mount lifecycle.\n\n  * `:session` - Optional extra session map or MFA tuple to be merged with the session.\n\n  * `:csp_nonce_assign_key` - Optional assign key to find the CSP nonce value used for assets\n    Supports either `atom()` or\n      `%{optional(:img) => atom(), optional(:script) => atom(), optional(:style) => atom()}`   \n      Defaults to `ash_admin-Ed55GFnX` for backwards compatibility.\n  \n  * `:live_session_name` - Optional atom to name the `live_session`. Defaults to `:ash_admin`.","ref":"AshAdmin.Router.html#ash_admin/2-options","title":"Options - AshAdmin.Router.ash_admin/2","type":"macro"},{"doc":"defmodule MyAppWeb.Router do\n      use Phoenix.Router\n\n      scope \"/\" do\n        import AshAdmin.Router\n\n        # Make sure you are piping through the browser pipeline\n        # If you don't have one, see `admin_browser_pipeline/1`\n        pipe_through [:browser]\n\n        ash_admin \"/admin\"\n        ash_admin \"/csp/admin\", live_session_name: :ash_admin_csp, csp_nonce_assign_key: :csp_nonce_value\n      end\n    end","ref":"AshAdmin.Router.html#ash_admin/2-examples","title":"Examples - AshAdmin.Router.ash_admin/2","type":"macro"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html","title":"Demo.Accounts.NestedEmbed","type":"module"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html#apply_constraints_array/2","title":"Demo.Accounts.NestedEmbed.apply_constraints_array/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html#cast_input/2","title":"Demo.Accounts.NestedEmbed.cast_input/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html#cast_stored/2","title":"Demo.Accounts.NestedEmbed.cast_stored/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html#check_atomic/2","title":"Demo.Accounts.NestedEmbed.check_atomic/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html#default_short_name/0","title":"Demo.Accounts.NestedEmbed.default_short_name/0","type":"function"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html#dump_to_native/2","title":"Demo.Accounts.NestedEmbed.dump_to_native/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html#fetch_key/2","title":"Demo.Accounts.NestedEmbed.fetch_key/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html#get_rewrites/4","title":"Demo.Accounts.NestedEmbed.get_rewrites/4","type":"function"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html#handle_change_array/3","title":"Demo.Accounts.NestedEmbed.handle_change_array/3","type":"function"},{"doc":"Validates that the keys in the provided input are valid for at least one action on the resource.\n\nRaises a KeyError error at compile time if not. This exists because generally a struct should only ever\nbe created by Ash as a result of a successful action. You should not be creating records manually in code,\ne.g `%MyResource{value: 1, value: 2}`. Generally that is fine, but often with embedded resources it is nice\nto be able to validate the keys that are being provided, e.g\n\n```elixir\nResource\n|> Ash.Changeset.for_create(:create, %{embedded: EmbeddedResource.input(foo: 1, bar: 2)})\n|> Ash.create()\n```","ref":"Demo.Accounts.NestedEmbed.html#input/1","title":"Demo.Accounts.NestedEmbed.input/1","type":"function"},{"doc":"Same as `input/1`, except restricts the keys to values accepted by the action provided.","ref":"Demo.Accounts.NestedEmbed.html#input/2","title":"Demo.Accounts.NestedEmbed.input/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html#load/4","title":"Demo.Accounts.NestedEmbed.load/4","type":"function"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html#prepare_change_array/3","title":"Demo.Accounts.NestedEmbed.prepare_change_array/3","type":"function"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html#rewrite/3","title":"Demo.Accounts.NestedEmbed.rewrite/3","type":"function"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html#storage_type/1","title":"Demo.Accounts.NestedEmbed.storage_type/1","type":"function"},{"doc":"","ref":"Demo.Accounts.NestedEmbed.html#t:t/0","title":"Demo.Accounts.NestedEmbed.t/0","type":"type"},{"doc":"TODO","ref":"Demo.Accounts.NewUser.html","title":"Demo.Accounts.NewUser","type":"module"},{"doc":"","ref":"Demo.Accounts.NewUser.html#apply_constraints_array/2","title":"Demo.Accounts.NewUser.apply_constraints_array/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NewUser.html#cast_input/2","title":"Demo.Accounts.NewUser.cast_input/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NewUser.html#cast_stored/2","title":"Demo.Accounts.NewUser.cast_stored/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NewUser.html#check_atomic/2","title":"Demo.Accounts.NewUser.check_atomic/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NewUser.html#default_short_name/0","title":"Demo.Accounts.NewUser.default_short_name/0","type":"function"},{"doc":"","ref":"Demo.Accounts.NewUser.html#dump_to_native/2","title":"Demo.Accounts.NewUser.dump_to_native/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NewUser.html#fetch_key/2","title":"Demo.Accounts.NewUser.fetch_key/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NewUser.html#get_rewrites/4","title":"Demo.Accounts.NewUser.get_rewrites/4","type":"function"},{"doc":"","ref":"Demo.Accounts.NewUser.html#handle_change_array/3","title":"Demo.Accounts.NewUser.handle_change_array/3","type":"function"},{"doc":"Validates that the keys in the provided input are valid for at least one action on the resource.\n\nRaises a KeyError error at compile time if not. This exists because generally a struct should only ever\nbe created by Ash as a result of a successful action. You should not be creating records manually in code,\ne.g `%MyResource{value: 1, value: 2}`. Generally that is fine, but often with embedded resources it is nice\nto be able to validate the keys that are being provided, e.g\n\n```elixir\nResource\n|> Ash.Changeset.for_create(:create, %{embedded: EmbeddedResource.input(foo: 1, bar: 2)})\n|> Ash.create()\n```","ref":"Demo.Accounts.NewUser.html#input/1","title":"Demo.Accounts.NewUser.input/1","type":"function"},{"doc":"Same as `input/1`, except restricts the keys to values accepted by the action provided.","ref":"Demo.Accounts.NewUser.html#input/2","title":"Demo.Accounts.NewUser.input/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NewUser.html#load/4","title":"Demo.Accounts.NewUser.load/4","type":"function"},{"doc":"","ref":"Demo.Accounts.NewUser.html#prepare_change_array/3","title":"Demo.Accounts.NewUser.prepare_change_array/3","type":"function"},{"doc":"","ref":"Demo.Accounts.NewUser.html#primary_key_matches?/2","title":"Demo.Accounts.NewUser.primary_key_matches?/2","type":"function"},{"doc":"","ref":"Demo.Accounts.NewUser.html#rewrite/3","title":"Demo.Accounts.NewUser.rewrite/3","type":"function"},{"doc":"","ref":"Demo.Accounts.NewUser.html#storage_type/1","title":"Demo.Accounts.NewUser.storage_type/1","type":"function"},{"doc":"","ref":"Demo.Accounts.NewUser.html#t:t/0","title":"Demo.Accounts.NewUser.t/0","type":"type"},{"doc":"","ref":"Demo.Accounts.Profile.html","title":"Demo.Accounts.Profile","type":"module"},{"doc":"","ref":"Demo.Accounts.Profile.html#apply_constraints_array/2","title":"Demo.Accounts.Profile.apply_constraints_array/2","type":"function"},{"doc":"","ref":"Demo.Accounts.Profile.html#cast_input/2","title":"Demo.Accounts.Profile.cast_input/2","type":"function"},{"doc":"","ref":"Demo.Accounts.Profile.html#cast_stored/2","title":"Demo.Accounts.Profile.cast_stored/2","type":"function"},{"doc":"","ref":"Demo.Accounts.Profile.html#check_atomic/2","title":"Demo.Accounts.Profile.check_atomic/2","type":"function"},{"doc":"","ref":"Demo.Accounts.Profile.html#default_short_name/0","title":"Demo.Accounts.Profile.default_short_name/0","type":"function"},{"doc":"","ref":"Demo.Accounts.Profile.html#dump_to_native/2","title":"Demo.Accounts.Profile.dump_to_native/2","type":"function"},{"doc":"","ref":"Demo.Accounts.Profile.html#fetch_key/2","title":"Demo.Accounts.Profile.fetch_key/2","type":"function"},{"doc":"","ref":"Demo.Accounts.Profile.html#get_rewrites/4","title":"Demo.Accounts.Profile.get_rewrites/4","type":"function"},{"doc":"","ref":"Demo.Accounts.Profile.html#handle_change_array/3","title":"Demo.Accounts.Profile.handle_change_array/3","type":"function"},{"doc":"Validates that the keys in the provided input are valid for at least one action on the resource.\n\nRaises a KeyError error at compile time if not. This exists because generally a struct should only ever\nbe created by Ash as a result of a successful action. You should not be creating records manually in code,\ne.g `%MyResource{value: 1, value: 2}`. Generally that is fine, but often with embedded resources it is nice\nto be able to validate the keys that are being provided, e.g\n\n```elixir\nResource\n|> Ash.Changeset.for_create(:create, %{embedded: EmbeddedResource.input(foo: 1, bar: 2)})\n|> Ash.create()\n```","ref":"Demo.Accounts.Profile.html#input/1","title":"Demo.Accounts.Profile.input/1","type":"function"},{"doc":"Same as `input/1`, except restricts the keys to values accepted by the action provided.","ref":"Demo.Accounts.Profile.html#input/2","title":"Demo.Accounts.Profile.input/2","type":"function"},{"doc":"","ref":"Demo.Accounts.Profile.html#load/4","title":"Demo.Accounts.Profile.load/4","type":"function"},{"doc":"","ref":"Demo.Accounts.Profile.html#prepare_change_array/3","title":"Demo.Accounts.Profile.prepare_change_array/3","type":"function"},{"doc":"","ref":"Demo.Accounts.Profile.html#rewrite/3","title":"Demo.Accounts.Profile.rewrite/3","type":"function"},{"doc":"","ref":"Demo.Accounts.Profile.html#storage_type/1","title":"Demo.Accounts.Profile.storage_type/1","type":"function"},{"doc":"","ref":"Demo.Accounts.Profile.html#t:t/0","title":"Demo.Accounts.Profile.t/0","type":"type"},{"doc":"","ref":"Demo.Accounts.User.html","title":"Demo.Accounts.User","type":"module"},{"doc":"","ref":"Demo.Accounts.User.html#default_short_name/0","title":"Demo.Accounts.User.default_short_name/0","type":"function"},{"doc":"Validates that the keys in the provided input are valid for at least one action on the resource.\n\nRaises a KeyError error at compile time if not. This exists because generally a struct should only ever\nbe created by Ash as a result of a successful action. You should not be creating records manually in code,\ne.g `%MyResource{value: 1, value: 2}`. Generally that is fine, but often with embedded resources it is nice\nto be able to validate the keys that are being provided, e.g\n\n```elixir\nResource\n|> Ash.Changeset.for_create(:create, %{embedded: EmbeddedResource.input(foo: 1, bar: 2)})\n|> Ash.create()\n```","ref":"Demo.Accounts.User.html#input/1","title":"Demo.Accounts.User.input/1","type":"function"},{"doc":"Same as `input/1`, except restricts the keys to values accepted by the action provided.","ref":"Demo.Accounts.User.html#input/2","title":"Demo.Accounts.User.input/2","type":"function"},{"doc":"","ref":"Demo.Accounts.User.html#primary_key_matches?/2","title":"Demo.Accounts.User.primary_key_matches?/2","type":"function"},{"doc":"","ref":"Demo.Accounts.User.html#t:t/0","title":"Demo.Accounts.User.t/0","type":"type"},{"doc":"","ref":"Demo.Repo.html","title":"Demo.Repo","type":"module"},{"doc":"","ref":"Demo.Repo.html#aggregate/3","title":"Demo.Repo.aggregate/3","type":"function"},{"doc":"","ref":"Demo.Repo.html#aggregate/4","title":"Demo.Repo.aggregate/4","type":"function"},{"doc":"","ref":"Demo.Repo.html#all/2","title":"Demo.Repo.all/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#all_tenants/0","title":"Demo.Repo.all_tenants/0","type":"function"},{"doc":"","ref":"Demo.Repo.html#checked_out?/0","title":"Demo.Repo.checked_out?/0","type":"function"},{"doc":"","ref":"Demo.Repo.html#checkout/2","title":"Demo.Repo.checkout/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#child_spec/1","title":"Demo.Repo.child_spec/1","type":"function"},{"doc":"","ref":"Demo.Repo.html#config/0","title":"Demo.Repo.config/0","type":"function"},{"doc":"","ref":"Demo.Repo.html#create?/0","title":"Demo.Repo.create?/0","type":"function"},{"doc":"","ref":"Demo.Repo.html#default_options/1","title":"Demo.Repo.default_options/1","type":"function"},{"doc":"","ref":"Demo.Repo.html#default_prefix/0","title":"Demo.Repo.default_prefix/0","type":"function"},{"doc":"","ref":"Demo.Repo.html#delete/2","title":"Demo.Repo.delete/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#delete!/2","title":"Demo.Repo.delete!/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#delete_all/2","title":"Demo.Repo.delete_all/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that forces all connections in the\npool to disconnect within the given interval.\n\nSee `Ecto.Adapters.SQL.disconnect_all/3` for more information.","ref":"Demo.Repo.html#disconnect_all/2","title":"Demo.Repo.disconnect_all/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#drop?/0","title":"Demo.Repo.drop?/0","type":"function"},{"doc":"","ref":"Demo.Repo.html#exists?/2","title":"Demo.Repo.exists?/2","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar\ndepending on the adapter to obtain statistics for the given query.\n\nSee `Ecto.Adapters.SQL.explain/4` for more information.","ref":"Demo.Repo.html#explain/3","title":"Demo.Repo.explain/3","type":"function"},{"doc":"","ref":"Demo.Repo.html#from_ecto/1","title":"Demo.Repo.from_ecto/1","type":"function"},{"doc":"","ref":"Demo.Repo.html#get/3","title":"Demo.Repo.get/3","type":"function"},{"doc":"","ref":"Demo.Repo.html#get!/3","title":"Demo.Repo.get!/3","type":"function"},{"doc":"","ref":"Demo.Repo.html#get_by/3","title":"Demo.Repo.get_by/3","type":"function"},{"doc":"","ref":"Demo.Repo.html#get_by!/3","title":"Demo.Repo.get_by!/3","type":"function"},{"doc":"","ref":"Demo.Repo.html#get_dynamic_repo/0","title":"Demo.Repo.get_dynamic_repo/0","type":"function"},{"doc":"","ref":"Demo.Repo.html#in_transaction?/0","title":"Demo.Repo.in_transaction?/0","type":"function"},{"doc":"","ref":"Demo.Repo.html#init/2","title":"Demo.Repo.init/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#insert/2","title":"Demo.Repo.insert/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#insert!/2","title":"Demo.Repo.insert!/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#insert_all/3","title":"Demo.Repo.insert_all/3","type":"function"},{"doc":"","ref":"Demo.Repo.html#insert_or_update/2","title":"Demo.Repo.insert_or_update/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#insert_or_update!/2","title":"Demo.Repo.insert_or_update!/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#installed_extensions/0","title":"Demo.Repo.installed_extensions/0","type":"function"},{"doc":"","ref":"Demo.Repo.html#load/2","title":"Demo.Repo.load/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#migrations_path/0","title":"Demo.Repo.migrations_path/0","type":"function"},{"doc":"","ref":"Demo.Repo.html#min_pg_version/0","title":"Demo.Repo.min_pg_version/0","type":"function"},{"doc":"","ref":"Demo.Repo.html#on_transaction_begin/1","title":"Demo.Repo.on_transaction_begin/1","type":"function"},{"doc":"","ref":"Demo.Repo.html#one/2","title":"Demo.Repo.one/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#one!/2","title":"Demo.Repo.one!/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#override_migration_type/1","title":"Demo.Repo.override_migration_type/1","type":"function"},{"doc":"","ref":"Demo.Repo.html#preload/3","title":"Demo.Repo.preload/3","type":"function"},{"doc":"","ref":"Demo.Repo.html#prepare_query/3","title":"Demo.Repo.prepare_query/3","type":"function"},{"doc":"","ref":"Demo.Repo.html#put_dynamic_repo/1","title":"Demo.Repo.put_dynamic_repo/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query/4` for more information.","ref":"Demo.Repo.html#query/3","title":"Demo.Repo.query/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query!/4` for more information.","ref":"Demo.Repo.html#query!/3","title":"Demo.Repo.query!/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many/4` for more information.","ref":"Demo.Repo.html#query_many/3","title":"Demo.Repo.query_many/3","type":"function"},{"doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many!/4` for more information.","ref":"Demo.Repo.html#query_many!/3","title":"Demo.Repo.query_many!/3","type":"function"},{"doc":"","ref":"Demo.Repo.html#reload/2","title":"Demo.Repo.reload/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#reload!/2","title":"Demo.Repo.reload!/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#rollback/1","title":"Demo.Repo.rollback/1","type":"function"},{"doc":"","ref":"Demo.Repo.html#start_link/1","title":"Demo.Repo.start_link/1","type":"function"},{"doc":"","ref":"Demo.Repo.html#stop/1","title":"Demo.Repo.stop/1","type":"function"},{"doc":"","ref":"Demo.Repo.html#stream/2","title":"Demo.Repo.stream/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#tenant_migrations_path/0","title":"Demo.Repo.tenant_migrations_path/0","type":"function"},{"doc":"","ref":"Demo.Repo.html#to_ecto/1","title":"Demo.Repo.to_ecto/1","type":"function"},{"doc":"A convenience function for SQL-based repositories that translates the given query to SQL.\n\nSee `Ecto.Adapters.SQL.to_sql/3` for more information.","ref":"Demo.Repo.html#to_sql/2","title":"Demo.Repo.to_sql/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#transaction/2","title":"Demo.Repo.transaction/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#transaction!/1","title":"Demo.Repo.transaction!/1","type":"function"},{"doc":"","ref":"Demo.Repo.html#update/2","title":"Demo.Repo.update/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#update!/2","title":"Demo.Repo.update!/2","type":"function"},{"doc":"","ref":"Demo.Repo.html#update_all/3","title":"Demo.Repo.update_all/3","type":"function"},{"doc":"","ref":"Demo.Tickets.Comment.html","title":"Demo.Tickets.Comment","type":"module"},{"doc":"","ref":"Demo.Tickets.Comment.html#default_short_name/0","title":"Demo.Tickets.Comment.default_short_name/0","type":"function"},{"doc":"Validates that the keys in the provided input are valid for at least one action on the resource.\n\nRaises a KeyError error at compile time if not. This exists because generally a struct should only ever\nbe created by Ash as a result of a successful action. You should not be creating records manually in code,\ne.g `%MyResource{value: 1, value: 2}`. Generally that is fine, but often with embedded resources it is nice\nto be able to validate the keys that are being provided, e.g\n\n```elixir\nResource\n|> Ash.Changeset.for_create(:create, %{embedded: EmbeddedResource.input(foo: 1, bar: 2)})\n|> Ash.create()\n```","ref":"Demo.Tickets.Comment.html#input/1","title":"Demo.Tickets.Comment.input/1","type":"function"},{"doc":"Same as `input/1`, except restricts the keys to values accepted by the action provided.","ref":"Demo.Tickets.Comment.html#input/2","title":"Demo.Tickets.Comment.input/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Comment.html#primary_key_matches?/2","title":"Demo.Tickets.Comment.primary_key_matches?/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Comment.html#t:t/0","title":"Demo.Tickets.Comment.t/0","type":"type"},{"doc":"","ref":"Demo.Tickets.Customer.html","title":"Demo.Tickets.Customer","type":"module"},{"doc":"","ref":"Demo.Tickets.Customer.html#default_short_name/0","title":"Demo.Tickets.Customer.default_short_name/0","type":"function"},{"doc":"Validates that the keys in the provided input are valid for at least one action on the resource.\n\nRaises a KeyError error at compile time if not. This exists because generally a struct should only ever\nbe created by Ash as a result of a successful action. You should not be creating records manually in code,\ne.g `%MyResource{value: 1, value: 2}`. Generally that is fine, but often with embedded resources it is nice\nto be able to validate the keys that are being provided, e.g\n\n```elixir\nResource\n|> Ash.Changeset.for_create(:create, %{embedded: EmbeddedResource.input(foo: 1, bar: 2)})\n|> Ash.create()\n```","ref":"Demo.Tickets.Customer.html#input/1","title":"Demo.Tickets.Customer.input/1","type":"function"},{"doc":"Same as `input/1`, except restricts the keys to values accepted by the action provided.","ref":"Demo.Tickets.Customer.html#input/2","title":"Demo.Tickets.Customer.input/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Customer.html#primary_key_matches?/2","title":"Demo.Tickets.Customer.primary_key_matches?/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Customer.html#t:t/0","title":"Demo.Tickets.Customer.t/0","type":"type"},{"doc":"","ref":"Demo.Tickets.Organization.html","title":"Demo.Tickets.Organization","type":"module"},{"doc":"","ref":"Demo.Tickets.Organization.html#default_short_name/0","title":"Demo.Tickets.Organization.default_short_name/0","type":"function"},{"doc":"Validates that the keys in the provided input are valid for at least one action on the resource.\n\nRaises a KeyError error at compile time if not. This exists because generally a struct should only ever\nbe created by Ash as a result of a successful action. You should not be creating records manually in code,\ne.g `%MyResource{value: 1, value: 2}`. Generally that is fine, but often with embedded resources it is nice\nto be able to validate the keys that are being provided, e.g\n\n```elixir\nResource\n|> Ash.Changeset.for_create(:create, %{embedded: EmbeddedResource.input(foo: 1, bar: 2)})\n|> Ash.create()\n```","ref":"Demo.Tickets.Organization.html#input/1","title":"Demo.Tickets.Organization.input/1","type":"function"},{"doc":"Same as `input/1`, except restricts the keys to values accepted by the action provided.","ref":"Demo.Tickets.Organization.html#input/2","title":"Demo.Tickets.Organization.input/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Organization.html#primary_key_matches?/2","title":"Demo.Tickets.Organization.primary_key_matches?/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Organization.html#t:t/0","title":"Demo.Tickets.Organization.t/0","type":"type"},{"doc":"","ref":"Demo.Tickets.Representative.html","title":"Demo.Tickets.Representative","type":"module"},{"doc":"","ref":"Demo.Tickets.Representative.html#default_short_name/0","title":"Demo.Tickets.Representative.default_short_name/0","type":"function"},{"doc":"Validates that the keys in the provided input are valid for at least one action on the resource.\n\nRaises a KeyError error at compile time if not. This exists because generally a struct should only ever\nbe created by Ash as a result of a successful action. You should not be creating records manually in code,\ne.g `%MyResource{value: 1, value: 2}`. Generally that is fine, but often with embedded resources it is nice\nto be able to validate the keys that are being provided, e.g\n\n```elixir\nResource\n|> Ash.Changeset.for_create(:create, %{embedded: EmbeddedResource.input(foo: 1, bar: 2)})\n|> Ash.create()\n```","ref":"Demo.Tickets.Representative.html#input/1","title":"Demo.Tickets.Representative.input/1","type":"function"},{"doc":"Same as `input/1`, except restricts the keys to values accepted by the action provided.","ref":"Demo.Tickets.Representative.html#input/2","title":"Demo.Tickets.Representative.input/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Representative.html#primary_key_matches?/2","title":"Demo.Tickets.Representative.primary_key_matches?/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Representative.html#t:t/0","title":"Demo.Tickets.Representative.t/0","type":"type"},{"doc":"","ref":"Demo.Tickets.Ticket.html","title":"Demo.Tickets.Ticket","type":"module"},{"doc":"","ref":"Demo.Tickets.Ticket.html#default_short_name/0","title":"Demo.Tickets.Ticket.default_short_name/0","type":"function"},{"doc":"Validates that the keys in the provided input are valid for at least one action on the resource.\n\nRaises a KeyError error at compile time if not. This exists because generally a struct should only ever\nbe created by Ash as a result of a successful action. You should not be creating records manually in code,\ne.g `%MyResource{value: 1, value: 2}`. Generally that is fine, but often with embedded resources it is nice\nto be able to validate the keys that are being provided, e.g\n\n```elixir\nResource\n|> Ash.Changeset.for_create(:create, %{embedded: EmbeddedResource.input(foo: 1, bar: 2)})\n|> Ash.create()\n```","ref":"Demo.Tickets.Ticket.html#input/1","title":"Demo.Tickets.Ticket.input/1","type":"function"},{"doc":"Same as `input/1`, except restricts the keys to values accepted by the action provided.","ref":"Demo.Tickets.Ticket.html#input/2","title":"Demo.Tickets.Ticket.input/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.html#primary_key_matches?/2","title":"Demo.Tickets.Ticket.primary_key_matches?/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.html#t:t/0","title":"Demo.Tickets.Ticket.t/0","type":"type"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html","title":"Demo.Tickets.Ticket.Types.BarMetadata","type":"module"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#apply_constraints_array/2","title":"Demo.Tickets.Ticket.Types.BarMetadata.apply_constraints_array/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#cast_input/2","title":"Demo.Tickets.Ticket.Types.BarMetadata.cast_input/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#cast_stored/2","title":"Demo.Tickets.Ticket.Types.BarMetadata.cast_stored/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#check_atomic/2","title":"Demo.Tickets.Ticket.Types.BarMetadata.check_atomic/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#default_short_name/0","title":"Demo.Tickets.Ticket.Types.BarMetadata.default_short_name/0","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#dump_to_native/2","title":"Demo.Tickets.Ticket.Types.BarMetadata.dump_to_native/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#fetch_key/2","title":"Demo.Tickets.Ticket.Types.BarMetadata.fetch_key/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#get_rewrites/4","title":"Demo.Tickets.Ticket.Types.BarMetadata.get_rewrites/4","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#handle_change_array/3","title":"Demo.Tickets.Ticket.Types.BarMetadata.handle_change_array/3","type":"function"},{"doc":"Validates that the keys in the provided input are valid for at least one action on the resource.\n\nRaises a KeyError error at compile time if not. This exists because generally a struct should only ever\nbe created by Ash as a result of a successful action. You should not be creating records manually in code,\ne.g `%MyResource{value: 1, value: 2}`. Generally that is fine, but often with embedded resources it is nice\nto be able to validate the keys that are being provided, e.g\n\n```elixir\nResource\n|> Ash.Changeset.for_create(:create, %{embedded: EmbeddedResource.input(foo: 1, bar: 2)})\n|> Ash.create()\n```","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#input/1","title":"Demo.Tickets.Ticket.Types.BarMetadata.input/1","type":"function"},{"doc":"Same as `input/1`, except restricts the keys to values accepted by the action provided.","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#input/2","title":"Demo.Tickets.Ticket.Types.BarMetadata.input/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#load/4","title":"Demo.Tickets.Ticket.Types.BarMetadata.load/4","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#prepare_change_array/3","title":"Demo.Tickets.Ticket.Types.BarMetadata.prepare_change_array/3","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#rewrite/3","title":"Demo.Tickets.Ticket.Types.BarMetadata.rewrite/3","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#storage_type/1","title":"Demo.Tickets.Ticket.Types.BarMetadata.storage_type/1","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.BarMetadata.html#t:t/0","title":"Demo.Tickets.Ticket.Types.BarMetadata.t/0","type":"type"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html","title":"Demo.Tickets.Ticket.Types.FooMetadata","type":"module"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#apply_constraints_array/2","title":"Demo.Tickets.Ticket.Types.FooMetadata.apply_constraints_array/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#cast_input/2","title":"Demo.Tickets.Ticket.Types.FooMetadata.cast_input/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#cast_stored/2","title":"Demo.Tickets.Ticket.Types.FooMetadata.cast_stored/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#check_atomic/2","title":"Demo.Tickets.Ticket.Types.FooMetadata.check_atomic/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#default_short_name/0","title":"Demo.Tickets.Ticket.Types.FooMetadata.default_short_name/0","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#dump_to_native/2","title":"Demo.Tickets.Ticket.Types.FooMetadata.dump_to_native/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#fetch_key/2","title":"Demo.Tickets.Ticket.Types.FooMetadata.fetch_key/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#get_rewrites/4","title":"Demo.Tickets.Ticket.Types.FooMetadata.get_rewrites/4","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#handle_change_array/3","title":"Demo.Tickets.Ticket.Types.FooMetadata.handle_change_array/3","type":"function"},{"doc":"Validates that the keys in the provided input are valid for at least one action on the resource.\n\nRaises a KeyError error at compile time if not. This exists because generally a struct should only ever\nbe created by Ash as a result of a successful action. You should not be creating records manually in code,\ne.g `%MyResource{value: 1, value: 2}`. Generally that is fine, but often with embedded resources it is nice\nto be able to validate the keys that are being provided, e.g\n\n```elixir\nResource\n|> Ash.Changeset.for_create(:create, %{embedded: EmbeddedResource.input(foo: 1, bar: 2)})\n|> Ash.create()\n```","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#input/1","title":"Demo.Tickets.Ticket.Types.FooMetadata.input/1","type":"function"},{"doc":"Same as `input/1`, except restricts the keys to values accepted by the action provided.","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#input/2","title":"Demo.Tickets.Ticket.Types.FooMetadata.input/2","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#load/4","title":"Demo.Tickets.Ticket.Types.FooMetadata.load/4","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#prepare_change_array/3","title":"Demo.Tickets.Ticket.Types.FooMetadata.prepare_change_array/3","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#rewrite/3","title":"Demo.Tickets.Ticket.Types.FooMetadata.rewrite/3","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#storage_type/1","title":"Demo.Tickets.Ticket.Types.FooMetadata.storage_type/1","type":"function"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.FooMetadata.html#t:t/0","title":"Demo.Tickets.Ticket.Types.FooMetadata.t/0","type":"type"},{"doc":"","ref":"Demo.Tickets.Ticket.Types.Metadata.html","title":"Demo.Tickets.Ticket.Types.Metadata","type":"module"},{"doc":"","ref":"Demo.Tickets.TicketLink.html","title":"Demo.Tickets.TicketLink","type":"module"},{"doc":"","ref":"Demo.Tickets.TicketLink.html#default_short_name/0","title":"Demo.Tickets.TicketLink.default_short_name/0","type":"function"},{"doc":"Validates that the keys in the provided input are valid for at least one action on the resource.\n\nRaises a KeyError error at compile time if not. This exists because generally a struct should only ever\nbe created by Ash as a result of a successful action. You should not be creating records manually in code,\ne.g `%MyResource{value: 1, value: 2}`. Generally that is fine, but often with embedded resources it is nice\nto be able to validate the keys that are being provided, e.g\n\n```elixir\nResource\n|> Ash.Changeset.for_create(:create, %{embedded: EmbeddedResource.input(foo: 1, bar: 2)})\n|> Ash.create()\n```","ref":"Demo.Tickets.TicketLink.html#input/1","title":"Demo.Tickets.TicketLink.input/1","type":"function"},{"doc":"Same as `input/1`, except restricts the keys to values accepted by the action provided.","ref":"Demo.Tickets.TicketLink.html#input/2","title":"Demo.Tickets.TicketLink.input/2","type":"function"},{"doc":"","ref":"Demo.Tickets.TicketLink.html#primary_key_matches?/2","title":"Demo.Tickets.TicketLink.primary_key_matches?/2","type":"function"},{"doc":"","ref":"Demo.Tickets.TicketLink.html#t:t/0","title":"Demo.Tickets.TicketLink.t/0","type":"type"},{"doc":"","ref":"AshAdmin.Errors.NotFound.html","title":"AshAdmin.Errors.NotFound","type":"exception"},{"doc":"","ref":"AshAdmin.Errors.NotFound.html#message/1","title":"AshAdmin.Errors.NotFound.message/1","type":"function"},{"doc":"![Logo](https://github.com/ash-project/ash/blob/main/logos/cropped-for-header-black-text.png?raw=true#gh-light-mode-only)\n![Logo](https://github.com/ash-project/ash/blob/main/logos/cropped-for-header-white-text.png?raw=true#gh-dark-mode-only)\n\n![Elixir CI](https://github.com/ash-project/ash_admin/workflows/CI/badge.svg)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Hex version badge](https://img.shields.io/hexpm/v/ash_admin.svg)](https://hex.pm/packages/ash_admin)\n[![Hexdocs badge](https://img.shields.io/badge/docs-hexdocs-purple)](https://hexdocs.pm/ash_admin)\n\n# AshAdmin\n\nWelcome! This is a super-admin UI dashboard for [Ash Framework](https://hexdocs.pm/ash) applications, built with Phoenix LiveView.","ref":"readme.html","title":"README","type":"extras"},{"doc":"- [Getting Started with AshAdmin](documentation/tutorials/getting-started-with-ash-admin.md)","ref":"readme.html#tutorials","title":"Tutorials - README","type":"extras"},{"doc":"- [AshAdmin.Domain DSL](documentation/dsls/DSL:-AshAdmin.Domain.md)\n- [AshAdmin.Resource DSL](documentation/dsls/DSL:-AshAdmin.Resource.md)","ref":"readme.html#reference","title":"Reference - README","type":"extras"},{"doc":"# Getting Started with AshAdmin","ref":"getting-started-with-ash-admin.html","title":"Getting Started with AshAdmin","type":"extras"},{"doc":"https://www.youtube.com/watch?v=aFMLz3cpQ8c","ref":"getting-started-with-ash-admin.html#demo","title":"Demo - Getting Started with AshAdmin","type":"extras"},{"doc":"Add the `ash_admin` dependency to your `mix.exs` file:\n\n```elixir\n{:ash_admin, \"~> 0.11.4\"}\n```","ref":"getting-started-with-ash-admin.html#installation","title":"Installation - Getting Started with AshAdmin","type":"extras"},{"doc":"Ensure your domains are configured in `config.exs`:\n\n```elixir\nconfig :my_app, ash_domains: [MyApp.Foo, MyApp.Bar]\n```\n\nAdd the `AshAdmin.Domain` extension to each domain you want to show in the AshAdmin dashboard, and configure it to show. See [DSL: AshAdmin.Domain](/documentation/dsls/DSL:-AshAdmin.Domain.md) for more configuration options.\n\n```elixir\n# In your Domain(s)\nuse Ash.Domain,\n  extensions: [AshAdmin.Domain]\n\nadmin do\n  show? true\nend\n```\n\nAll resources in each Domain will automatically be included in AshAdmin. To configure a resource, use the `AshAdmin.Resource` extension, and then use the [DSL: AshAdmin.Resource](/documentation/dsls/DSL:-AshAdmin.Resource.md) configuration options. Specifically, if your app has an actor you will want to configure that.\n\n```elixir\n# In your resource that acts as an actor (e.g. User)\nuse Ash.Resource,\n  domain: YourDomain,\n  extensions: [AshAdmin.Resource]\n\nadmin do\n  actor? true\nend\n```\n\nModify your router to add AshAdmin at whatever path you'd like to serve it at.\n\n```elixir\ndefmodule MyAppWeb.Router do\n  use Phoenix.Router\n\n  import AshAdmin.Router\n\n  # AshAdmin requires a Phoenix LiveView `:browser` pipeline\n  # If you DO NOT have a `:browser` pipeline already, then AshAdmin has a `:browser` pipeline\n  # Most applications will not need this:\n  admin_browser_pipeline :browser\n\n  scope \"/\" do\n    # Pipe it through your browser pipeline\n    pipe_through [:browser]\n\n    ash_admin \"/admin\"\n  end\nend\n```\n\n> #### Warning {: .warning}\n>\n> There is no builtin security for your AshAdmin (except your app's normal policies). In most cases you will want to secure your AshAdmin routes in some way to prevent them from being publicly accessible.\n\nStart your project (usually by running `mix phx.server` in a terminal) and visit `/admin` in your browser (or the path you configured `ash_admin` with in your router).","ref":"getting-started-with-ash-admin.html#setup","title":"Setup - Getting Started with AshAdmin","type":"extras"},{"doc":"If your app specifies a content security policy header, eg. via\n\n```elixir\nplug :put_secure_browser_headers, %{\"content-security-policy\" => \"default-src 'self'\"}\n```\n\nin your router, then the stylesheets and JavaScript used to power AshAdmin will be blocked by your browser.\n\nTo avoid this, you can add the default AshAdmin nonces to the `default-src` allowlist, ie.\n\n```elixir\nplug :put_secure_browser_headers, %{\"content-security-policy\" => \"default-src 'nonce-ash_admin-Ed55GFnX' 'self'\"}\n```\n\nAlternatively you can supply your own nonces to the `ash_admin` route, by setting a `:csp_nonce_assign_key` in the options list, ie.\n\n```elixir\nash_admin \"/admin\", csp_nonce_assign_key: :csp_nonce_value\n```\n\nThis will allow AshAdmin-generated inline CSS and JS blocks to execute normally.","ref":"getting-started-with-ash-admin.html#content-security-policy","title":"Content Security Policy - Getting Started with AshAdmin","type":"extras"},{"doc":"#### UI issues\nIf your admin UI is not responding as expected, check your browser's developer console for content-security-policy violations (see above).\n\n#### Router issues\nIf you are seeing the following error `(UndefinedFunctionError) function YourAppWeb.AshAdmin.PageLive.__live__/0 is undefined (module YourAppWeb.AshAdmin.PageLive is not available)` it likely means that you added the ash admin route macro under a scope with a prefix. Make sure that you add it under a scope without any prefixes.\n\n```elixir\n  # Incorrect (with YourAppWeb prefix)\n  scope \"/\", YourAppWeb do\n    pipe_through [:browser]\n\n    ash_admin \"/admin\"\n  end\n\n  # Correct (without prefix)\n  scope \"/\" do\n    pipe_through [:browser]\n\n    ash_admin \"/admin\"\n  end\n```","ref":"getting-started-with-ash-admin.html#troubleshooting","title":"Troubleshooting - Getting Started with AshAdmin","type":"extras"},{"doc":"# Contributing to AshAdmin\n\nAshAdmin includes a development app, located in the `dev` folder, so you don't need to have an external Phoenix app to plug AshAdmin into.\n\nYou'll need to have PostgreSQL set up locally. Then you can run:\n\n* `mix ash_postgres.create`\n* `mix migrate`\n* `mix migrate_tenants`\n* `mix setup`\n\nThen, you can start the app server with: `mix dev`\n\nIf you make changes to the dev resources, you can generate migrations with `mix generate_migrations`\n\nIf you make changes to any of the assets (CSS or JavaScript), including updating dependencies that include assets such as Phoenix LiveView, you will need to recompile the assets with `mix assets.deploy`.\n\nFor general Ash contribution details, check out [our contribution guide](`e:ash:contributing-to-ash.md`).","ref":"contributing-to-ash-admin.html","title":"Contributing to AshAdmin","type":"extras"},{"doc":"<!--\nThis file was generated by Spark. Do not edit it by hand.\n-->\n# DSL: AshAdmin.Domain\n\nA domain extension to alter the behavior of a domain in the admin UI.","ref":"dsl-ashadmin-domain.html","title":"DSL: AshAdmin.Domain","type":"extras"},{"doc":"Configure the admin dashboard for a given domain.","ref":"dsl-ashadmin-domain.html#admin","title":"admin - DSL: AshAdmin.Domain","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`name`](#admin-name){: #admin-name } | `String.t` |  | The name of the domain in the dashboard. Will be derived if not set. |\n| [`show?`](#admin-show?){: #admin-show? } | `boolean` | `false` | Whether or not this domain and its resources should be included in the admin dashboard. |\n| [`show_resources`](#admin-show_resources){: #admin-show_resources } | `atom \\| list(atom)` | `:*` | List of resources that should be included in the admin dashboard |\n| [`default_resource_page`](#admin-default_resource_page){: #admin-default_resource_page } | `:schema \\| :primary_read` | `:schema` | Set the default page for the resource to be the primary read action or the resource schema. Schema is the default for backwards compatibility, if a resource doesn't have a primary read action it will fallback to the schema view. |\n| [`resource_group_labels`](#admin-resource_group_labels){: #admin-resource_group_labels } | `keyword` | `[]` | Humanized names for each resource group to appear in the admin area. These will be used as labels in the top navigation dropdown. If a key for a group does not appear in this mapping, the label will not be rendered. |\n\n\n\n\n\n\n\n .spark-required::after { content: \"*\"; color: red !important; }","ref":"dsl-ashadmin-domain.html#options","title":"Options - DSL: AshAdmin.Domain","type":"extras"},{"doc":"<!--\nThis file was generated by Spark. Do not edit it by hand.\n-->\n# DSL: AshAdmin.Resource\n\nA resource extension to alter the behaviour of a resource in the admin UI.","ref":"dsl-ashadmin-resource.html","title":"DSL: AshAdmin.Resource","type":"extras"},{"doc":"Configure the admin dashboard for a given resource.","ref":"dsl-ashadmin-resource.html#admin","title":"admin - DSL: AshAdmin.Resource","type":"extras"},{"doc":"* [form](#admin-form)\n   * field","ref":"dsl-ashadmin-resource.html#nested-dsls","title":"Nested DSLs - DSL: AshAdmin.Resource","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`name`](#admin-name){: #admin-name } | `String.t` |  | The proper name to use when this resource appears in the admin interface. |\n| [`actor?`](#admin-actor?){: #admin-actor? } | `boolean` |  | Whether or not this resource can be used as the actor for requests. |\n| [`show_action`](#admin-show_action){: #admin-show_action } | `atom` |  | The action to use when linking to the resource/viewing a single record. Defaults to the primary read action. |\n| [`read_actions`](#admin-read_actions){: #admin-read_actions } | `list(atom)` |  | A list of read actions that can be used to show resource details. By default, all actions are included. |\n| [`create_actions`](#admin-create_actions){: #admin-create_actions } | `list(atom)` |  | A list of create actions that can create records. By default, all actions are included. |\n| [`update_actions`](#admin-update_actions){: #admin-update_actions } | `list(atom)` |  | A list of update actions that can be used to update records. By default, all actions are included. |\n| [`destroy_actions`](#admin-destroy_actions){: #admin-destroy_actions } | `list(atom)` |  | A list of destroy actions that can be used to destroy records. By default, all actions are included. |\n| [`polymorphic_tables`](#admin-polymorphic_tables){: #admin-polymorphic_tables } | `list(String.t)` |  | For resources that use ash_postgres' polymorphism capabilities, you can provide a list of tables that should be available to select. These will be added to the list of derivable tables based on scanning all domains and resources provided to ash_admin. |\n| [`polymorphic_actions`](#admin-polymorphic_actions){: #admin-polymorphic_actions } | `list(atom)` |  | For resources that use ash_postgres' polymorphism capabilities, you can provide a list of actions that should require a table to be set. If this is not set, then *all* actions will require tables. |\n| [`table_columns`](#admin-table_columns){: #admin-table_columns } | `list(atom)` |  | The list of attributes to render on the table view. |\n| [`format_fields`](#admin-format_fields){: #admin-format_fields } | `list(any)` |  | The list of fields and their formats. |\n| [`relationship_display_fields`](#admin-relationship_display_fields){: #admin-relationship_display_fields } | `list(atom)` |  | The list of attributes to render when this resource is shown as a relationship on another resource's datatable. |\n| [`resource_group`](#admin-resource_group){: #admin-resource_group } | `atom` |  | The group in the top resource dropdown that the resource appears in. |\n| [`show_sensitive_fields`](#admin-show_sensitive_fields){: #admin-show_sensitive_fields } | `list(atom)` |  | The list of fields that should not be redacted in the admin UI even if they are marked as sensitive. |","ref":"dsl-ashadmin-resource.html#options","title":"Options - DSL: AshAdmin.Resource","type":"extras"},{"doc":"Configure the appearance of fields in admin forms.","ref":"dsl-ashadmin-resource.html#admin-form","title":"admin.form - DSL: AshAdmin.Resource","type":"extras"},{"doc":"* [field](#admin-form-field)","ref":"dsl-ashadmin-resource.html#nested-dsls","title":"Nested DSLs - DSL: AshAdmin.Resource","type":"extras"},{"doc":"```elixir\nfield name\n```\n\n\nDeclare non-default behavior for a specific attribute.","ref":"dsl-ashadmin-resource.html#admin-form-field","title":"admin.form.field - DSL: AshAdmin.Resource","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`name`](#admin-form-field-name){: #admin-form-field-name .spark-required} | `atom` |  | The name of the field to be modified |","ref":"dsl-ashadmin-resource.html#arguments","title":"Arguments - DSL: AshAdmin.Resource","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`type`](#admin-form-field-type){: #admin-form-field-type .spark-required} | `:default \\| :long_text \\| :short_text \\| :markdown` |  | The type of the value in the form. Use `default` if you are just specifying field order |","ref":"dsl-ashadmin-resource.html#options","title":"Options - DSL: AshAdmin.Resource","type":"extras"},{"doc":"Target: `AshAdmin.Resource.Field`\n\n\n\n\n\n\n\n .spark-required::after { content: \"*\"; color: red !important; }","ref":"dsl-ashadmin-resource.html#introspection","title":"Introspection - DSL: AshAdmin.Resource","type":"extras"},{"doc":"# Change Log\n\nAll notable changes to this project will be documented in this file.\nSee [Conventional Commits](Https://conventionalcommits.org) for commit guidelines.\n\n<!-- changelog -->\n\n## [v0.11.5](https://github.com/ash-project/ash_admin/compare/v0.11.4...v0.11.5) (2024-08-26)","ref":"changelog.html","title":"Change Log","type":"extras"},{"doc":"* remove tails\n\n## [v0.11.4](https://github.com/ash-project/ash_admin/compare/v0.11.3...v0.11.4) (2024-08-01)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"* properly support adding embeds for nil values\n\n* upgrade `ash_phoenix` for fix on calculating values\n\n* use resource's configured domain before default domain\n\n* ensure `actor_tenant` is always set\n\n* ensure table columsn are loaded, bypassing (as yet) unknown bug","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"* don't log forbidden errors\n\n## [v0.11.3](https://github.com/ash-project/ash_admin/compare/v0.11.2...v0.11.3) (2024-06-25)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"* don't go to potentially non-existant create actions\n\n## [v0.11.2](https://github.com/ash-project/ash_admin/compare/v0.11.1...v0.11.2) (2024-06-25)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"* properly render errors data table forms\n\n* update to support 0.20 (#179)\n\n## [v0.11.1](https://github.com/ash-project/ash_admin/compare/v0.11.0...v0.11.1) (2024-06-13)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"* properly support lists of embeds\n\n* render relationship inputs even when type is not a map\n\n* properly render tenant form on mobile sidebar","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"* various fixes around unions\n\n* support for unions\n\n## [v0.11.0](https://github.com/ash-project/ash_admin/compare/v0.10.10-rc.1...v0.11.0) (2024-05-10)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"* TopNav when in mobile view (size < md) (#128)\n\n* properly accept private attributes in admin\n\n* clear actor_tenant cookie when clearing actor (#101)\n\n* small refactor in actor plug (#99)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"* track actor tenant, use it for fetching actor\n\n## [v0.10.10-rc.1](https://github.com/ash-project/ash_admin/compare/v0.10.10-rc.0...v0.10.10-rc.1) (2024-04-03)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"* get checks passing, fix various bugs\n\n* loading multiple relationships with the same destination resource that has sensitive fields (#98)\n\n## [v0.10.10-rc.0](https://github.com/ash-project/ash_admin/compare/v0.10.9...v0.10.10-rc.0) (2024-04-02)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"* properly add indexes to embedded list attribtues\n\n* ensure action selection is accurate/consistent\n\n* only consider top-level targets for input pruning\n\n* only show forms for map type inputs","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"* upgrade to 3.0\n\n## [v0.10.9](https://github.com/ash-project/ash_admin/compare/v0.10.8...v0.10.9) (2024-03-29)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"* only show forms for map type inputs","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"* upgrade to 3.0\n\n## [v0.10.8](https://github.com/ash-project/ash_admin/compare/v0.10.7...v0.10.8) (2024-03-19)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- missing handle event in read forms\n\n- Allow blank/nil default values in :atom inputs when allow_nil? is true (#93)\n\n- Allow blank/default default values in :atom inputs when allow_nil? is true","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Add :csp_nonce_assign_key to ash_admin options (fix for /issues/91) (#92)\n\n## [v0.10.7](https://github.com/ash-project/ash_admin/compare/v0.10.6...v0.10.7) (2024-02-26)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- properly prevent access to actions not configured to be in the UI\n\n## [v0.10.6](https://github.com/ash-project/ash_admin/compare/v0.10.5...v0.10.6) (2024-02-20)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- fix lists of values in deeply nested embeds\n\n## [v0.10.5](https://github.com/ash-project/ash_admin/compare/v0.10.4...v0.10.5) (2024-02-11)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- show internal errors in ash_admin form\n\n## [v0.10.4](https://github.com/ash-project/ash_admin/compare/v0.10.3...v0.10.4) (2024-02-04)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- fix large gap in header in safari\n\n## [v0.10.3](https://github.com/ash-project/ash_admin/compare/v0.10.2...v0.10.3) (2024-02-04)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- ensure starting state of dropdowns is honored","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- update to phoenix_html 4.0\n\n- support any sensitive value\n\n- support PhoenixHTML 4.0\n\n- Adds show_sensitive_fields option to Resource to allow unredacting seâ¦ (#86)\n\n## [v0.10.2](https://github.com/ash-project/ash_admin/compare/v0.10.1...v0.10.2) (2024-01-04)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- ensure tenant stays set after navigating from page\n\n## [v0.10.1](https://github.com/ash-project/ash_admin/compare/v0.10.0...v0.10.1) (2023-12-27)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- don't hide fields required for managing relationships\n\n- pass tenant to `Changeset.for_*` directly (#84)\n\n## [v0.10.0](https://github.com/ash-project/ash_admin/compare/v0.9.8...v0.10.0) (2023-11-30)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Hide sensitive attributes by default (#82)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- fix cases where data may not match expected patterns\n\n- allow nil values for all dropdowns to handle list behavior\n\n- Dropdown component has Surface hangover (#81)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- use prompt instead of adding a nil option for dropdowns\n\n- only ensure `nil` value is present on dropdowns when inside of lists\n\n- fix warnings on actor plug\n\n- use the first enum value as the default for dropdowns\n\n## [v0.9.8](https://github.com/ash-project/ash_admin/compare/v0.9.7...v0.9.8) (2023-11-17)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- default table_columns to all attributes for proper selecting\n\n## [v0.9.7](https://github.com/ash-project/ash_admin/compare/v0.9.6...v0.9.7) (2023-11-16)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- properly match on errored loads\n\n## [v0.9.6](https://github.com/ash-project/ash_admin/compare/v0.9.5...v0.9.6) (2023-11-15)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Fix JS syntax error and compile latest version of `app.js` (#77)\n\n- don't use nil as new {:array, type} value (#76)\n\n- load each to_one relationship independently and ignore it if it errors\n\n- allow showing false values for boolean selects (#74)\n\n- pass actor when fetching relationships attributes (#73)\n\n- properly provide `arguments` to read actions","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- support calculations & aggregates in table columns\n\n## [v0.9.5](https://github.com/ash-project/ash_admin/compare/v0.9.4...v0.9.5) (2023-10-11)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- force submit forms\n\n## [v0.9.4](https://github.com/ash-project/ash_admin/compare/v0.9.3...v0.9.4) (2023-08-04)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- properly reassign form on update\n\n## [v0.9.3](https://github.com/ash-project/ash_admin/compare/v0.9.2...v0.9.3) (2023-08-02)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- support cross-api relationships in show links\n\n- use `push_patch` instead of `push_redirect`","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Ui consistency (#62)\n\n## [v0.9.2](https://github.com/ash-project/ash_admin/compare/v0.9.1...v0.9.2) (2023-08-02)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- fix links to show related resources\n\n## [v0.9.1](https://github.com/ash-project/ash_admin/compare/v0.9.0...v0.9.1) (2023-08-02)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- use connect params for persisted state\n\n- properly persist cookies\n\n- create-form: errors from removal of surface (#60)\n\n- properly detect update and destroy actions\n\n- revalidate with params on submit\n\n- send set tenant to parent liveview\n\n- set phx-target\n\n- set phx-target on tenant form\n\n- fix editing_tenant in top_nav","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- loosen tails dependency\n\n## [v0.9.0](https://github.com/ash-project/ash_admin/compare/v0.8.2...v0.9.0) (2023-07-28)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Add seed with Admin, User, Customer, Organization and Ticket (#56)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- set assigns for show block\n\n- fix behaviour and support on_mount and session","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- style the metadata tables consistently (#54)\n\n- remove surface\n\n- support setting an actor\n\n## [v0.8.2](https://github.com/ash-project/ash_admin/compare/v0.8.1...v0.8.2) (2023-07-25)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- don't show create button if no create actions are configured\n\n- use `authorize?: false` when reading actor from session","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- show all errors on form submit\n\n- Improve frontend a little bit (#52)\n\n- Use overflow-auto instead of overflow-scroll on table\n\n## [v0.8.1](https://github.com/ash-project/ash_admin/compare/v0.8.0...v0.8.1) (2023-04-22)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- don't authorize actor read\n\n- Admin links are not aware of the scope where ash_admin is called (#49)\n\n- handle cases where actions of a given type don't exist","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Update Surface to 0.10.0 (#50)\n\n## [v0.8.0](https://github.com/ash-project/ash_admin/compare/v0.7.1...v0.8.0) (2023-03-01)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Inline style nonce (#42)\n\n- Specify nonces on inline styles/JavaScript so they can be allowed by CSPs","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- Add missing mix.lock changes (#43)\n\n- Add missing mix.lock changes\n\n## [v0.7.1](https://github.com/ash-project/ash_admin/compare/v0.7.0...v0.7.1) (2022-11-01)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- fix markdown editor and make things cleaner\n\n## [v0.7.0](https://github.com/ash-project/ash_admin/compare/v0.6.2...v0.7.0) (2022-10-31)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- add markdown attributes","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- add markdown editor\n\n## [v0.6.2](https://github.com/ash-project/ash_admin/compare/v0.6.1...v0.6.2) (2022-10-20)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- handle missing api/resource better\n\n- if pagination is available but not required, opt to use it\n\n## [v0.6.1](https://github.com/ash-project/ash_admin/compare/v0.6.0-rc.2...v0.6.1) (2022-10-20)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- update to latest ash\n\n## [v0.6.0-rc.2](https://github.com/ash-project/ash_admin/compare/v0.6.0-rc.1...v0.6.0-rc.2) (2022-09-28)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- update to latest ash\n\n- unlock unused deps\n\n- support latest ash_phoenix\n\n- update to latest ash\n\n## [v0.6.0-rc.1](https://github.com/ash-project/ash_admin/compare/v0.6.0-rc.0...v0.6.0-rc.1) (2022-09-15)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- don't call into ash_postgres for tables anymore\n\n- properly match on `Code.ensrue_compiled/1` output","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- update to the latest ash\n\n## [v0.5.2](https://github.com/ash-project/ash_admin/compare/v0.5.1-rc.0...v0.5.2) (2022-08-22)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- update to latest ash\n\n- support value-backed nested forms\n\n## [v0.5.1-rc.0](https://github.com/ash-project/ash_admin/compare/v0.5.0...v0.5.1-rc.0) (2022-08-15)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- remove unnecessary code\n\n- fix data loading, change tracking (handled by AshPhoenix.Form)\n\n- changelog URL in release tweet (#24)\n\n## [v0.5.0](https://github.com/ash-project/ash_admin/compare/v0.4.5-rc.0...v0.5.0) (2022-08-10)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- allow setting primary read action as default resource page (#19)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- failing error case for nested forms (#21)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- use new authorize? configuration\n\n## [v0.4.5-rc.0](https://github.com/ash-project/ash_admin/compare/v0.4.4...v0.4.5-rc.0) (2022-05-23)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- update to latest ash for bugfix\n\n- get the original value using `AshPhoenix.Form.value/2`","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Top nav resource grouping (#15)\n\n- update ash version and fix build\n\n- add DateInput for dates\n\n## [v0.4.4](https://github.com/ash-project/ash_admin/compare/v0.4.3...v0.4.4) (2022-03-17)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- don't depend on an rc version\n\n## [v0.4.3](https://github.com/ash-project/ash_admin/compare/v0.4.2...v0.4.3) (2022-03-17)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- a bunch of behavior fixes, getting the demo to snuff with new Ash\n\n- fix tenant/actor session w/ new phx version","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- update tons of dependencies\n\n## [v0.4.2](https://github.com/ash-project/ash_admin/compare/v0.4.1...v0.4.2) (2022-03-17)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- don't lock phoenix version\n\n## [v0.4.1](https://github.com/ash-project/ash_admin/compare/v0.4.0...v0.4.1) (2022-03-17)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- various other fixes for events and hooks\n\n- fix issues w/ admin UI not rendering\n\n## [v0.4.0](https://github.com/ash-project/ash_admin/compare/v0.3.0-rc.0...v0.4.0) (2021-11-14)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- handle new liveview arg pattern\n\n## [v0.3.0-rc.0](https://github.com/ash-project/ash_admin/compare/v0.2.22...v0.3.0-rc.0) (2021-09-01)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- support latest surface/phoenix","ref":"changelog.html#breaking-changes","title":"Breaking Changes: - Change Log","type":"extras"},{"doc":"- remove compile-time router, use params instead\n\n## [v0.2.22](https://github.com/ash-project/ash_admin/compare/v0.2.21...v0.2.22) (2021-07-24)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- render values properly when no format set\n\n## [v0.2.21](https://github.com/ash-project/ash_admin/compare/v0.2.20...v0.2.21) (2021-07-24)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- define custom formats for any field (#7)\n\n## [v0.2.20](https://github.com/ash-project/ash_admin/compare/v0.2.19...v0.2.20) (2021-07-23)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- relationships in datatable (#6)\n\n## [v0.2.19](https://github.com/ash-project/ash_admin/compare/v0.2.18...v0.2.19) (2021-07-23)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- update to latest ash\n\n## [v0.2.18](https://github.com/ash-project/ash_admin/compare/v0.2.17...v0.2.18) (2021-07-20)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- digest assets\n\n- show proper values in update forms on initial render\n\n## [v0.2.17](https://github.com/ash-project/ash_admin/compare/v0.2.16-rc.1...v0.2.17) (2021-07-20)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- add json editor\n\n## [v0.2.16-rc.1](https://github.com/ash-project/ash_admin/compare/v0.2.16-rc.0...v0.2.16-rc.1) (2021-07-18)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- update to latest ash\n\n## [v0.2.16-rc.0](https://github.com/ash-project/ash_admin/compare/v0.2.15...v0.2.16-rc.0) (2021-07-18)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- show boolean default values better","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- update to new form logic\n\n## [v0.2.15](https://github.com/ash-project/ash_admin/compare/v0.2.14...v0.2.15) (2021-05-18)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- retain `manage_relationship_source` context where possible\n\n## [v0.2.14](https://github.com/ash-project/ash_admin/compare/v0.2.13...v0.2.14) (2021-05-14)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- general manage relationship improvements\n\n## [v0.2.13](https://github.com/ash-project/ash_admin/compare/v0.2.12...v0.2.13) (2021-05-13)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- track pkey of embeds when adding\n\n## [v0.2.12](https://github.com/ash-project/ash_admin/compare/v0.2.11...v0.2.12) (2021-05-10)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- support explicit enum types\n\n## [v0.2.11](https://github.com/ash-project/ash_admin/compare/v0.2.10...v0.2.11) (2021-05-06)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- fix special text fields","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- always show action dropdown\n\n- log on failures in the UI\n\n## [v0.2.10](https://github.com/ash-project/ash_admin/compare/v0.2.9...v0.2.10) (2021-04-17)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- update to ash_phoenix, fix relationship embeds\n\n## [v0.2.9](https://github.com/ash-project/ash_admin/compare/v0.2.8...v0.2.9) (2021-04-16)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- support array attribute/arguments properly\n\n## [v0.2.8](https://github.com/ash-project/ash_admin/compare/v0.2.7...v0.2.8) (2021-04-15)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- properly track embedded attribute targets\n\n## [v0.2.7](https://github.com/ash-project/ash_admin/compare/v0.2.6...v0.2.7) (2021-04-09)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- set actor in datatable\n\n## [v0.2.6](https://github.com/ash-project/ash_admin/compare/v0.2.5...v0.2.6) (2021-04-09)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- support binary data (by not showing it)\n\n## [v0.2.5](https://github.com/ash-project/ash_admin/compare/v0.2.4...v0.2.5) (2021-03-30)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- don't send empty params on save","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- update to latest ash_phoenix\n\n## [v0.2.4](https://github.com/ash-project/ash_admin/compare/v0.2.3...v0.2.4) (2021-03-30)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- show add button on array input relationships\n\n## [v0.2.3](https://github.com/ash-project/ash_admin/compare/v0.2.2...v0.2.3) (2021-03-29)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- remove path dependency on ash\n\n## [v0.2.2](https://github.com/ash-project/ash_admin/compare/v0.2.1...v0.2.2) (2021-03-29)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- allow removing to_one relationships on creates","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- support lookup forms _or_ create forms\n\n## [v0.2.1](https://github.com/ash-project/ash_admin/compare/v0.2.0...v0.2.1) (2021-03-28)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- update ash_admin dependency\n\n## [v0.2.0](https://github.com/ash-project/ash_admin/compare/v0.1.6...v0.2.0) (2021-03-28)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- more testing resources + relationship argument forms!\n\n## [v0.1.6](https://github.com/ash-project/ash_admin/compare/v0.1.5...v0.1.6) (2021-03-25)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- use new relationship management logic\n\n## [v0.1.5](https://github.com/ash-project/ash_admin/compare/v0.1.4...v0.1.5) (2021-03-24)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- remove inspect\n\n- properly only provide changing fields to actions\n\n## [v0.1.4](https://github.com/ash-project/ash_admin/compare/v0.1.3...v0.1.4) (2021-03-24)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- support tenant on read actions\n\n- remove inspect","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- only send changing fields\n\n- don't show `destination_field` on related tables\n\n## [v0.1.3](https://github.com/ash-project/ash_admin/compare/v0.1.2...v0.1.3) (2021-03-23)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- use version properly\n\n## [v0.1.2](https://github.com/ash-project/ash_admin/compare/v0.1.1...v0.1.2) (2021-03-22)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- fix build\n\n## [v0.1.1](https://github.com/ash-project/ash_admin/compare/v0.1.0...v0.1.1) (2021-03-22)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- use static routes\n\n## [v0.1.0](https://github.com/ash-project/ash_admin/compare/v0.1.0...v0.1.0) (2021-03-22)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- draw the rest of the owl\n\n- support fully managed relationships\n\n- set actor from show page\n\n- support destroy actions\n\n- lots of new features, including related id updates","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- various fixes\n\n- various fixes/improvements\n\n- various bug fixes\n\n- update dep versions\n\n- fix action changing","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- general fixes, configurable action lists\n\n- add pagination support\n\n- support read actions with arguments\n\n- add \"log in\" button","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"}],"producer":{"name":"ex_doc","version":[48,46,51,52,46,50]}}