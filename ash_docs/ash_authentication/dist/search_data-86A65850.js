searchData={"content_type":"text/markdown","items":[{"doc":"The name of the belongs-to relationship between identities and users.","ref":"dsl-ashauthentication-useridentity.html#user_identity-user_relationship_name","title":"AshAuthentication.UserIdentity.user_identity.user_relationship_name","type":"DSL"},{"doc":"The name of the action used to query identities.","ref":"dsl-ashauthentication-useridentity.html#user_identity-read_action_name","title":"AshAuthentication.UserIdentity.user_identity.read_action_name","type":"DSL"},{"doc":"The name of the action used to destroy records.","ref":"dsl-ashauthentication-useridentity.html#user_identity-destroy_action_name","title":"AshAuthentication.UserIdentity.user_identity.destroy_action_name","type":"DSL"},{"doc":"The name of the action used to create and update records.","ref":"dsl-ashauthentication-useridentity.html#user_identity-upsert_action_name","title":"AshAuthentication.UserIdentity.user_identity.upsert_action_name","type":"DSL"},{"doc":"The name of the `refresh_token` attribute on this resource.","ref":"dsl-ashauthentication-useridentity.html#user_identity-refresh_token_attribute_name","title":"AshAuthentication.UserIdentity.user_identity.refresh_token_attribute_name","type":"DSL"},{"doc":"The name of the `access_token_expires_at` attribute on this resource.","ref":"dsl-ashauthentication-useridentity.html#user_identity-access_token_expires_at_attribute_name","title":"AshAuthentication.UserIdentity.user_identity.access_token_expires_at_attribute_name","type":"DSL"},{"doc":"The name of the `access_token` attribute on this resource.","ref":"dsl-ashauthentication-useridentity.html#user_identity-access_token_attribute_name","title":"AshAuthentication.UserIdentity.user_identity.access_token_attribute_name","type":"DSL"},{"doc":"The name of the `user_id` attribute on this resource.","ref":"dsl-ashauthentication-useridentity.html#user_identity-user_id_attribute_name","title":"AshAuthentication.UserIdentity.user_identity.user_id_attribute_name","type":"DSL"},{"doc":"The name of the `strategy` attribute on this resource.","ref":"dsl-ashauthentication-useridentity.html#user_identity-strategy_attribute_name","title":"AshAuthentication.UserIdentity.user_identity.strategy_attribute_name","type":"DSL"},{"doc":"The name of the `uid` attribute on this resource.","ref":"dsl-ashauthentication-useridentity.html#user_identity-uid_attribute_name","title":"AshAuthentication.UserIdentity.user_identity.uid_attribute_name","type":"DSL"},{"doc":"The user resource to which these identities belong.","ref":"dsl-ashauthentication-useridentity.html#user_identity-user_resource","title":"AshAuthentication.UserIdentity.user_identity.user_resource","type":"DSL"},{"doc":"The Ash domain to use to access this resource.","ref":"dsl-ashauthentication-useridentity.html#user_identity-domain","title":"AshAuthentication.UserIdentity.user_identity.domain","type":"DSL"},{"doc":"Configure identity options for this resource","ref":"dsl-ashauthentication-useridentity.html#user_identity","title":"AshAuthentication.UserIdentity.user_identity","type":"DSL"},{"doc":"The name of the action used to get confirmation changes.\n","ref":"dsl-ashauthentication-tokenresource.html#token-confirmation-get_changes_action_name","title":"AshAuthentication.TokenResource.token.confirmation.get_changes_action_name","type":"DSL"},{"doc":"The name of the action used to store confirmation changes.\n","ref":"dsl-ashauthentication-tokenresource.html#token-confirmation-store_changes_action_name","title":"AshAuthentication.TokenResource.token.confirmation.store_changes_action_name","type":"DSL"},{"doc":"Configuration options for confirmation tokens","ref":"dsl-ashauthentication-tokenresource.html#token-confirmation","title":"AshAuthentication.TokenResource.token.confirmation","type":"DSL"},{"doc":"The name of the action used to check if a token is revoked.\n","ref":"dsl-ashauthentication-tokenresource.html#token-revocation-is_revoked_action_name","title":"AshAuthentication.TokenResource.token.revocation.is_revoked_action_name","type":"DSL"},{"doc":"The name of the action used to revoke tokens.\n","ref":"dsl-ashauthentication-tokenresource.html#token-revocation-revoke_token_action_name","title":"AshAuthentication.TokenResource.token.revocation.revoke_token_action_name","type":"DSL"},{"doc":"Configuration options for token revocation","ref":"dsl-ashauthentication-tokenresource.html#token-revocation","title":"AshAuthentication.TokenResource.token.revocation","type":"DSL"},{"doc":"The name of the action used to retrieve tokens from the store, if `require_tokens_for_authentication?` is enabled in your authentication resource.","ref":"dsl-ashauthentication-tokenresource.html#token-get_token_action_name","title":"AshAuthentication.TokenResource.token.get_token_action_name","type":"DSL"},{"doc":"The name of the action to use to store a token, if `require_tokens_for_authentication?` is enabled in your authentication resource.","ref":"dsl-ashauthentication-tokenresource.html#token-store_token_action_name","title":"AshAuthentication.TokenResource.token.store_token_action_name","type":"DSL"},{"doc":"How often to scan this resource for records which have expired, and thus can be removed.","ref":"dsl-ashauthentication-tokenresource.html#token-expunge_interval","title":"AshAuthentication.TokenResource.token.expunge_interval","type":"DSL"},{"doc":"The name of the action use to find all expired tokens.","ref":"dsl-ashauthentication-tokenresource.html#token-read_expired_action_name","title":"AshAuthentication.TokenResource.token.read_expired_action_name","type":"DSL"},{"doc":"The name of the action used to remove expired tokens.\n","ref":"dsl-ashauthentication-tokenresource.html#token-expunge_expired_action_name","title":"AshAuthentication.TokenResource.token.expunge_expired_action_name","type":"DSL"},{"doc":"The Ash domain to use to access this resource.\n","ref":"dsl-ashauthentication-tokenresource.html#token-domain","title":"AshAuthentication.TokenResource.token.domain","type":"DSL"},{"doc":"Configuration options for this token resource","ref":"dsl-ashauthentication-tokenresource.html#token","title":"AshAuthentication.TokenResource.token","type":"DSL"},{"doc":"The sender to use when sending password reset instructions.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-resettable-sender","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.resettable.sender","type":"DSL"},{"doc":"The name to use for the action which actually resets the user's password. Defaults to `password_reset_with_<strategy_name>`.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-resettable-password_reset_action_name","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.resettable.password_reset_action_name","type":"DSL"},{"doc":"The name to use for the action which generates a password reset token. Defaults to `request_password_reset_with_<strategy_name>`.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-resettable-request_password_reset_action_name","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.resettable.request_password_reset_action_name","type":"DSL"},{"doc":"How long should the reset token be valid.  If no unit is provided `:hours` is assumed.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-resettable-token_lifetime","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.resettable.token_lifetime","type":"DSL"},{"doc":"Configure password reset options for the resource","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-resettable","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.resettable","type":"DSL"},{"doc":"A lifetime for which a generated sign in token will be valid, if `sign_in_tokens_enabled?`. Unit defaults to `:seconds`.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-sign_in_token_lifetime","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.sign_in_token_lifetime","type":"DSL"},{"doc":"Whether or not to support generating short lived sign in tokens. Requires the resource to have tokens enabled.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-sign_in_tokens_enabled?","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.sign_in_tokens_enabled?","type":"DSL"},{"doc":"If you do not want new users to be able to sign in using this strategy, set this to false.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-sign_in_enabled?","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.sign_in_enabled?","type":"DSL"},{"doc":"The name to use for the sign in action. Defaults to `sign_in_with_<strategy_name>`","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-sign_in_action_name","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.sign_in_action_name","type":"DSL"},{"doc":"If you do not want new users to be able to register using this strategy, set this to false.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-registration_enabled?","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.registration_enabled?","type":"DSL"},{"doc":"The name to use for the register action. Defaults to `register_with_<strategy_name>`","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-register_action_name","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.register_action_name","type":"DSL"},{"doc":"The name of the argument used to confirm the user's password in plaintext when registering or changing passwords.\n","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-password_confirmation_field","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.password_confirmation_field","type":"DSL"},{"doc":"The name of the argument used to collect the user's password in plaintext when registering, checking or changing passwords.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-password_field","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.password_field","type":"DSL"},{"doc":"A list of additional fields to be accepted in the register action.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-register_action_accept","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.register_action_accept","type":"DSL"},{"doc":"Whether a password confirmation field is required when registering or changing passwords.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-confirmation_required?","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.confirmation_required?","type":"DSL"},{"doc":"A module which implements the `AshAuthentication.HashProvider` behaviour, to provide cryptographic hashing of passwords.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-hash_provider","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.hash_provider","type":"DSL"},{"doc":"The name of the attribute within which to store the user's password once it has been hashed.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-hashed_password_field","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.hashed_password_field","type":"DSL"},{"doc":"The name of the attribute which uniquely identifies the user, usually something like `username` or `email_address`.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-identity_field","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.identity_field","type":"DSL"},{"doc":"Uniquely identifies the strategy.\n","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-name","title":"AshAuthentication.Strategy.Password.authentication.strategies.password.name","type":"DSL"},{"doc":"Strategy for authenticating using local resources as the source of truth.\n","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password","title":"AshAuthentication.Strategy.Password.authentication.strategies.password","type":"DSL"},{"doc":"A function for generating the session nonce, `true` to automatically generate it with `AshAuthetnication.Strategy.Oidc.NonceGenerator`, or `false` to disable.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-nonce","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.nonce","type":"DSL"},{"doc":"The number of seconds from `iat` that an ID Token will be considered valid.\n","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-id_token_ttl_seconds","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.id_token_ttl_seconds","type":"DSL"},{"doc":"The `id_token_signed_response_alg` parameter sent by the Client during Registration.\n","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-id_token_signed_response_alg","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.id_token_signed_response_alg","type":"DSL"},{"doc":"The OpenID configuration.  If not set, the configuration will be retrieved from `openid_configuration_uri`.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-openid_configuration","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.openid_configuration","type":"DSL"},{"doc":"The client authentication method to use.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-client_authentication_method","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.client_authentication_method","type":"DSL"},{"doc":"The URI for the OpenID provider","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-openid_configuration_uri","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.openid_configuration_uri","type":"DSL"},{"doc":" The name of an icon to use in any potential UI. This is a *hint* for UI generators to use, and not in any way canonical.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-icon","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.icon","type":"DSL"},{"doc":"The name of the destination (user_id) attribute on your provider identity resource. Only necessary if you've changed the `user_id_attribute_name` option of the provider identity.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-identity_relationship_user_id_attribute","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.identity_relationship_user_id_attribute","type":"DSL"},{"doc":"Name of the relationship to the provider identities resource","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-identity_relationship_name","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.identity_relationship_name","type":"DSL"},{"doc":"The resource used to store user identities, or `false` to disable. See the User Identities section of the strategy docs for more.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-identity_resource","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.identity_resource","type":"DSL"},{"doc":"The name of the action to use to sign in an existing user, if `sign_in_enabled?` is `true`. Defaults to `sign_in_with_<strategy>`, which is generated for you by default. See the \"Registration and Sign-in\" section of the strategy docs for more information.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-sign_in_action_name","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.sign_in_action_name","type":"DSL"},{"doc":"The name of the action to use to register a user, if `registration_enabled?` is `true`. Defaults to `register_with_<name>` See the \"Registration and Sign-in\" section of the strategy docs for more.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-register_action_name","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.register_action_name","type":"DSL"},{"doc":"If enabled, new users will be able to register for your site when authenticating and not already present. If not, only existing users will be able to authenticate.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-registration_enabled?","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.registration_enabled?","type":"DSL"},{"doc":"Any additional parameters to encode in the request phase. eg: `authorization_params scope: \"openid profile email\"`","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-authorization_params","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.authorization_params","type":"DSL"},{"doc":"The callback URI *base*. Not the whole URI back to the callback endpoint, but the URI to your `AuthPlug`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-redirect_uri","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.redirect_uri","type":"DSL"},{"doc":"The private key to use if `:auth_method` is `:private_key_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-private_key","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.private_key","type":"DSL"},{"doc":"A list of audiences which are trusted. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.\n","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-trusted_audiences","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.trusted_audiences","type":"DSL"},{"doc":"The OAuth2 client secret. Required if :auth_method is `:client_secret_basic`, `:client_secret_post` or `:client_secret_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-client_secret","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.client_secret","type":"DSL"},{"doc":"The authentication strategy used, optional. If not set, no authentication will be used during the access token request.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-auth_method","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.auth_method","type":"DSL"},{"doc":"Deprecated: Use `base_url` instead.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-site","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.site","type":"DSL"},{"doc":"The base URL of the OAuth2 server - including the leading protocol (ie `https://`).  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-base_url","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.base_url","type":"DSL"},{"doc":"The OAuth2 client ID.  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-client_id","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.client_id","type":"DSL"},{"doc":"Uniquely identifies the strategy.\n","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc-name","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc.name","type":"DSL"},{"doc":"Provides an OpenID Connect authentication strategy.\n\nThis strategy is built using the `:oauth2` strategy, and thus provides\nall the same configuration options should you need them.\n\n#### More documentation:\n- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)\n","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc","title":"AshAuthentication.Strategy.Oidc.authentication.strategies.oidc","type":"DSL"},{"doc":" The name of an icon to use in any potential UI. This is a *hint* for UI generators to use, and not in any way canonical.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-icon","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.icon","type":"DSL"},{"doc":"The name of the destination (user_id) attribute on your provider identity resource. Only necessary if you've changed the `user_id_attribute_name` option of the provider identity.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-identity_relationship_user_id_attribute","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.identity_relationship_user_id_attribute","type":"DSL"},{"doc":"Name of the relationship to the provider identities resource","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-identity_relationship_name","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.identity_relationship_name","type":"DSL"},{"doc":"The resource used to store user identities, or `false` to disable. See the User Identities section of the strategy docs for more.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-identity_resource","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.identity_resource","type":"DSL"},{"doc":"The name of the action to use to sign in an existing user, if `sign_in_enabled?` is `true`. Defaults to `sign_in_with_<strategy>`, which is generated for you by default. See the \"Registration and Sign-in\" section of the strategy docs for more information.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-sign_in_action_name","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.sign_in_action_name","type":"DSL"},{"doc":"The name of the action to use to register a user, if `registration_enabled?` is `true`. Defaults to `register_with_<name>` See the \"Registration and Sign-in\" section of the strategy docs for more.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-register_action_name","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.register_action_name","type":"DSL"},{"doc":"If enabled, new users will be able to register for your site when authenticating and not already present. If not, only existing users will be able to authenticate.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-registration_enabled?","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.registration_enabled?","type":"DSL"},{"doc":"Any additional parameters to encode in the request phase. eg: `authorization_params scope: \"openid profile email\"`","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-authorization_params","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.authorization_params","type":"DSL"},{"doc":"The callback URI *base*. Not the whole URI back to the callback endpoint, but the URI to your `AuthPlug`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-redirect_uri","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.redirect_uri","type":"DSL"},{"doc":"The private key to use if `:auth_method` is `:private_key_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-private_key","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.private_key","type":"DSL"},{"doc":"The API url to access the user endpoint, relative to `site`, e.g `user_url fn _, _ -> {:ok, \"https://example.com/userinfo\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-user_url","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.user_url","type":"DSL"},{"doc":"A list of audiences which are trusted. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.\n","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-trusted_audiences","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.trusted_audiences","type":"DSL"},{"doc":"The API url to access the token endpoint, relative to `site`, e.g `token_url fn _, _ -> {:ok, \"https://example.com/oauth_token\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-token_url","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.token_url","type":"DSL"},{"doc":"The API url to the OAuth2 authorize endpoint, relative to `site`, e.g `authorize_url fn _, _ -> {:ok, \"https://exampe.com/authorize\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-authorize_url","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.authorize_url","type":"DSL"},{"doc":"The OAuth2 client secret. Required if :auth_method is `:client_secret_basic`, `:client_secret_post` or `:client_secret_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-client_secret","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.client_secret","type":"DSL"},{"doc":"The authentication strategy used, optional. If not set, no authentication will be used during the access token request.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-auth_method","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.auth_method","type":"DSL"},{"doc":"Deprecated: Use `base_url` instead.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-site","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.site","type":"DSL"},{"doc":"The base URL of the OAuth2 server - including the leading protocol (ie `https://`).  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-base_url","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.base_url","type":"DSL"},{"doc":"The OAuth2 client ID.  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-client_id","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.client_id","type":"DSL"},{"doc":"Uniquely identifies the strategy.\n","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2-name","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2.name","type":"DSL"},{"doc":"OAuth2 authentication","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2","title":"AshAuthentication.Strategy.OAuth2.authentication.strategies.oauth2","type":"DSL"},{"doc":"How to send the magic link to the user.","ref":"dsl-ashauthentication-strategy-magiclink.html#authentication-strategies-magic_link-sender","title":"AshAuthentication.Strategy.MagicLink.authentication.strategies.magic_link.sender","type":"DSL"},{"doc":"The name of the token parameter in the incoming sign-in request.\n","ref":"dsl-ashauthentication-strategy-magiclink.html#authentication-strategies-magic_link-token_param_name","title":"AshAuthentication.Strategy.MagicLink.authentication.strategies.magic_link.token_param_name","type":"DSL"},{"doc":"The name to use for the sign in action. Defaults to `sign_in_with_<strategy_name>`","ref":"dsl-ashauthentication-strategy-magiclink.html#authentication-strategies-magic_link-sign_in_action_name","title":"AshAuthentication.Strategy.MagicLink.authentication.strategies.magic_link.sign_in_action_name","type":"DSL"},{"doc":"Automatically revoke the token once it's been used for sign in.\n","ref":"dsl-ashauthentication-strategy-magiclink.html#authentication-strategies-magic_link-single_use_token?","title":"AshAuthentication.Strategy.MagicLink.authentication.strategies.magic_link.single_use_token?","type":"DSL"},{"doc":"The name to use for the request action. Defaults to `request_<strategy_name>`","ref":"dsl-ashauthentication-strategy-magiclink.html#authentication-strategies-magic_link-request_action_name","title":"AshAuthentication.Strategy.MagicLink.authentication.strategies.magic_link.request_action_name","type":"DSL"},{"doc":"How long the sign in token is valid.  If no unit is provided, then `minutes` is assumed.","ref":"dsl-ashauthentication-strategy-magiclink.html#authentication-strategies-magic_link-token_lifetime","title":"AshAuthentication.Strategy.MagicLink.authentication.strategies.magic_link.token_lifetime","type":"DSL"},{"doc":"The name of the attribute which uniquely identifies the user, usually something like `username` or `email_address`.","ref":"dsl-ashauthentication-strategy-magiclink.html#authentication-strategies-magic_link-identity_field","title":"AshAuthentication.Strategy.MagicLink.authentication.strategies.magic_link.identity_field","type":"DSL"},{"doc":"Uniquely identifies the strategy.","ref":"dsl-ashauthentication-strategy-magiclink.html#authentication-strategies-magic_link-name","title":"AshAuthentication.Strategy.MagicLink.authentication.strategies.magic_link.name","type":"DSL"},{"doc":"Strategy for authenticating using local users with a magic link","ref":"dsl-ashauthentication-strategy-magiclink.html#authentication-strategies-magic_link","title":"AshAuthentication.Strategy.MagicLink.authentication.strategies.magic_link","type":"DSL"},{"doc":" The name of an icon to use in any potential UI. This is a *hint* for UI generators to use, and not in any way canonical.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-icon","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.icon","type":"DSL"},{"doc":"The name of the destination (user_id) attribute on your provider identity resource. Only necessary if you've changed the `user_id_attribute_name` option of the provider identity.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-identity_relationship_user_id_attribute","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.identity_relationship_user_id_attribute","type":"DSL"},{"doc":"Name of the relationship to the provider identities resource","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-identity_relationship_name","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.identity_relationship_name","type":"DSL"},{"doc":"The resource used to store user identities, or `false` to disable. See the User Identities section of the strategy docs for more.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-identity_resource","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.identity_resource","type":"DSL"},{"doc":"The name of the action to use to sign in an existing user, if `sign_in_enabled?` is `true`. Defaults to `sign_in_with_<strategy>`, which is generated for you by default. See the \"Registration and Sign-in\" section of the strategy docs for more information.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-sign_in_action_name","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.sign_in_action_name","type":"DSL"},{"doc":"The name of the action to use to register a user, if `registration_enabled?` is `true`. Defaults to `register_with_<name>` See the \"Registration and Sign-in\" section of the strategy docs for more.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-register_action_name","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.register_action_name","type":"DSL"},{"doc":"If enabled, new users will be able to register for your site when authenticating and not already present. If not, only existing users will be able to authenticate.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-registration_enabled?","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.registration_enabled?","type":"DSL"},{"doc":"Any additional parameters to encode in the request phase. eg: `authorization_params scope: \"openid profile email\"`","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-authorization_params","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.authorization_params","type":"DSL"},{"doc":"The callback URI *base*. Not the whole URI back to the callback endpoint, but the URI to your `AuthPlug`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-redirect_uri","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.redirect_uri","type":"DSL"},{"doc":"The private key to use if `:auth_method` is `:private_key_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-private_key","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.private_key","type":"DSL"},{"doc":"The API url to access the user endpoint, relative to `site`, e.g `user_url fn _, _ -> {:ok, \"https://example.com/userinfo\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-user_url","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.user_url","type":"DSL"},{"doc":"A list of audiences which are trusted. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.\n","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-trusted_audiences","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.trusted_audiences","type":"DSL"},{"doc":"The API url to access the token endpoint, relative to `site`, e.g `token_url fn _, _ -> {:ok, \"https://example.com/oauth_token\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-token_url","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.token_url","type":"DSL"},{"doc":"The API url to the OAuth2 authorize endpoint, relative to `site`, e.g `authorize_url fn _, _ -> {:ok, \"https://exampe.com/authorize\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-authorize_url","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.authorize_url","type":"DSL"},{"doc":"The OAuth2 client secret. Required if :auth_method is `:client_secret_basic`, `:client_secret_post` or `:client_secret_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-client_secret","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.client_secret","type":"DSL"},{"doc":"The authentication strategy used, optional. If not set, no authentication will be used during the access token request.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-auth_method","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.auth_method","type":"DSL"},{"doc":"Deprecated: Use `base_url` instead.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-site","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.site","type":"DSL"},{"doc":"The base URL of the OAuth2 server - including the leading protocol (ie `https://`).  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-base_url","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.base_url","type":"DSL"},{"doc":"The OAuth2 client ID.  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-client_id","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.client_id","type":"DSL"},{"doc":"Uniquely identifies the strategy.\n","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google-name","title":"AshAuthentication.Strategy.Google.authentication.strategies.google.name","type":"DSL"},{"doc":"Provides a pre-configured authentication strategy for [Google](https://google.com/).\n\nThis strategy is built using the `:oauth2` strategy, and thus provides all the same\nconfiguration options should you need them.\n\n## More documentation:\n- The [Google OAuth 2.0 Overview](https://developers.google.com/identity/protocols/oauth2).\n- The [Google Tutorial](/documentation/tutorial/google.md)\n- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)\n\n#### Strategy defaults:\n\nThe following defaults are applied:\n\n  * `:base_url` is set to `\"https://www.googleapis.com\"`.\n  * `:authorize_url` is set to `\"https://accounts.google.com/o/oauth2/v2/auth\"`.\n  * `:token_url` is set to `\"/oauth2/v4/token\"`.\n  * `:user_url` is set to `\"/oauth2/v3/userinfo\"`.\n  * `:authorization_params` is set to `[scope: \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile\"]`.\n  * `:auth_method` is set to `:client_secret_post`.\n\n","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google","title":"AshAuthentication.Strategy.Google.authentication.strategies.google","type":"DSL"},{"doc":" The name of an icon to use in any potential UI. This is a *hint* for UI generators to use, and not in any way canonical.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-icon","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.icon","type":"DSL"},{"doc":"The name of the destination (user_id) attribute on your provider identity resource. Only necessary if you've changed the `user_id_attribute_name` option of the provider identity.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-identity_relationship_user_id_attribute","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.identity_relationship_user_id_attribute","type":"DSL"},{"doc":"Name of the relationship to the provider identities resource","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-identity_relationship_name","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.identity_relationship_name","type":"DSL"},{"doc":"The resource used to store user identities, or `false` to disable. See the User Identities section of the strategy docs for more.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-identity_resource","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.identity_resource","type":"DSL"},{"doc":"The name of the action to use to sign in an existing user, if `sign_in_enabled?` is `true`. Defaults to `sign_in_with_<strategy>`, which is generated for you by default. See the \"Registration and Sign-in\" section of the strategy docs for more information.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-sign_in_action_name","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.sign_in_action_name","type":"DSL"},{"doc":"The name of the action to use to register a user, if `registration_enabled?` is `true`. Defaults to `register_with_<name>` See the \"Registration and Sign-in\" section of the strategy docs for more.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-register_action_name","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.register_action_name","type":"DSL"},{"doc":"If enabled, new users will be able to register for your site when authenticating and not already present. If not, only existing users will be able to authenticate.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-registration_enabled?","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.registration_enabled?","type":"DSL"},{"doc":"Any additional parameters to encode in the request phase. eg: `authorization_params scope: \"openid profile email\"`","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-authorization_params","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.authorization_params","type":"DSL"},{"doc":"The callback URI *base*. Not the whole URI back to the callback endpoint, but the URI to your `AuthPlug`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-redirect_uri","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.redirect_uri","type":"DSL"},{"doc":"The private key to use if `:auth_method` is `:private_key_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-private_key","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.private_key","type":"DSL"},{"doc":"The API url to access the user endpoint, relative to `site`, e.g `user_url fn _, _ -> {:ok, \"https://example.com/userinfo\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-user_url","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.user_url","type":"DSL"},{"doc":"A list of audiences which are trusted. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.\n","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-trusted_audiences","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.trusted_audiences","type":"DSL"},{"doc":"The API url to access the token endpoint, relative to `site`, e.g `token_url fn _, _ -> {:ok, \"https://example.com/oauth_token\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-token_url","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.token_url","type":"DSL"},{"doc":"The API url to the OAuth2 authorize endpoint, relative to `site`, e.g `authorize_url fn _, _ -> {:ok, \"https://exampe.com/authorize\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-authorize_url","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.authorize_url","type":"DSL"},{"doc":"The OAuth2 client secret. Required if :auth_method is `:client_secret_basic`, `:client_secret_post` or `:client_secret_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-client_secret","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.client_secret","type":"DSL"},{"doc":"The authentication strategy used, optional. If not set, no authentication will be used during the access token request.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-auth_method","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.auth_method","type":"DSL"},{"doc":"Deprecated: Use `base_url` instead.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-site","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.site","type":"DSL"},{"doc":"The base URL of the OAuth2 server - including the leading protocol (ie `https://`).  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-base_url","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.base_url","type":"DSL"},{"doc":"The OAuth2 client ID.  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-client_id","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.client_id","type":"DSL"},{"doc":"Uniquely identifies the strategy.\n","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github-name","title":"AshAuthentication.Strategy.Github.authentication.strategies.github.name","type":"DSL"},{"doc":"Provides a pre-configured authentication strategy for [GitHub](https://github.com/).\n\nThis strategy is built using the `:oauth2` strategy, and thus provides all the same\nconfiguration options should you need them.\n\n#### More documentation:\n- The [GitHub Tutorial](/documentation/tutorial/github.md).\n- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)\n\n#### Strategy defaults:\n\nThe following defaults are applied:\n\n  * `:base_url` is set to `\"https://api.github.com\"`.\n  * `:authorize_url` is set to `\"https://github.com/login/oauth/authorize\"`.\n  * `:token_url` is set to `\"https://github.com/login/oauth/access_token\"`.\n  * `:user_url` is set to `\"/user\"`.\n  * `:user_emails_url` is set to `\"/user/emails\"`.\n  * `:authorization_params` is set to `[scope: \"read:user,user:email\"]`.\n  * `:auth_method` is set to `:client_secret_post`.\n\n","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github","title":"AshAuthentication.Strategy.Github.authentication.strategies.github","type":"DSL"},{"doc":" The name of an icon to use in any potential UI. This is a *hint* for UI generators to use, and not in any way canonical.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-icon","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.icon","type":"DSL"},{"doc":"The name of the destination (user_id) attribute on your provider identity resource. Only necessary if you've changed the `user_id_attribute_name` option of the provider identity.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-identity_relationship_user_id_attribute","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.identity_relationship_user_id_attribute","type":"DSL"},{"doc":"Name of the relationship to the provider identities resource","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-identity_relationship_name","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.identity_relationship_name","type":"DSL"},{"doc":"The resource used to store user identities, or `false` to disable. See the User Identities section of the strategy docs for more.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-identity_resource","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.identity_resource","type":"DSL"},{"doc":"The name of the action to use to sign in an existing user, if `sign_in_enabled?` is `true`. Defaults to `sign_in_with_<strategy>`, which is generated for you by default. See the \"Registration and Sign-in\" section of the strategy docs for more information.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-sign_in_action_name","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.sign_in_action_name","type":"DSL"},{"doc":"The name of the action to use to register a user, if `registration_enabled?` is `true`. Defaults to `register_with_<name>` See the \"Registration and Sign-in\" section of the strategy docs for more.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-register_action_name","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.register_action_name","type":"DSL"},{"doc":"If enabled, new users will be able to register for your site when authenticating and not already present. If not, only existing users will be able to authenticate.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-registration_enabled?","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.registration_enabled?","type":"DSL"},{"doc":"Any additional parameters to encode in the request phase. eg: `authorization_params scope: \"openid profile email\"`","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-authorization_params","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.authorization_params","type":"DSL"},{"doc":"The callback URI *base*. Not the whole URI back to the callback endpoint, but the URI to your `AuthPlug`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-redirect_uri","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.redirect_uri","type":"DSL"},{"doc":"The private key to use if `:auth_method` is `:private_key_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-private_key","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.private_key","type":"DSL"},{"doc":"The API url to access the user endpoint, relative to `site`, e.g `user_url fn _, _ -> {:ok, \"https://example.com/userinfo\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-user_url","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.user_url","type":"DSL"},{"doc":"A list of audiences which are trusted. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.\n","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-trusted_audiences","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.trusted_audiences","type":"DSL"},{"doc":"The API url to access the token endpoint, relative to `site`, e.g `token_url fn _, _ -> {:ok, \"https://example.com/oauth_token\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-token_url","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.token_url","type":"DSL"},{"doc":"The API url to the OAuth2 authorize endpoint, relative to `site`, e.g `authorize_url fn _, _ -> {:ok, \"https://exampe.com/authorize\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-authorize_url","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.authorize_url","type":"DSL"},{"doc":"The OAuth2 client secret. Required if :auth_method is `:client_secret_basic`, `:client_secret_post` or `:client_secret_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-client_secret","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.client_secret","type":"DSL"},{"doc":"The authentication strategy used, optional. If not set, no authentication will be used during the access token request.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-auth_method","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.auth_method","type":"DSL"},{"doc":"Deprecated: Use `base_url` instead.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-site","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.site","type":"DSL"},{"doc":"The base URL of the OAuth2 server - including the leading protocol (ie `https://`).  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-base_url","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.base_url","type":"DSL"},{"doc":"The OAuth2 client ID.  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-client_id","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.client_id","type":"DSL"},{"doc":"Uniquely identifies the strategy.\n","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0-name","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0.name","type":"DSL"},{"doc":"Provides a pre-configured authentication strategy for [Auth0](https://auth0.com/).\n\nThis strategy is built using the `:oauth2` strategy, and thus provides all the same\nconfiguration options should you need them.\n\n#### More documentation:\n- The [Auth0 Tutorial](/documentation/tutorial/auth0.md).\n- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)\n\n#### Strategy defaults:\n\nThe following defaults are applied:\n\n  * `:authorize_url` is set to `\"/authorize\"`.\n  * `:token_url` is set to `\"/oauth/token\"`.\n  * `:user_url` is set to `\"/userinfo\"`.\n  * `:authorization_params` is set to `[scope: \"openid profile email\"]`.\n  * `:auth_method` is set to `:client_secret_post`.\n\n","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0","title":"AshAuthentication.Strategy.Auth0.authentication.strategies.auth0","type":"DSL"},{"doc":"The name of the action to use when performing confirmation. Will be created if it does not already exist.","ref":"dsl-ashauthentication-addon-confirmation.html#authentication-add_ons-confirmation-confirm_action_name","title":"AshAuthentication.AddOn.Confirmation.authentication.add_ons.confirmation.confirm_action_name","type":"DSL"},{"doc":"How to send the confirmation instructions to the user.","ref":"dsl-ashauthentication-addon-confirmation.html#authentication-add_ons-confirmation-sender","title":"AshAuthentication.AddOn.Confirmation.authentication.add_ons.confirmation.sender","type":"DSL"},{"doc":"Whether or not to wait until confirmation is received before actually changing a monitored field. See [the confirmation guide](/documentation/topics/confirmation.md) for more.","ref":"dsl-ashauthentication-addon-confirmation.html#authentication-add_ons-confirmation-inhibit_updates?","title":"AshAuthentication.AddOn.Confirmation.authentication.add_ons.confirmation.inhibit_updates?","type":"DSL"},{"doc":"Generate and send a confirmation token when a resource is changed.  Triggers when an update action is executed _and_ one of the monitored fields is being set.","ref":"dsl-ashauthentication-addon-confirmation.html#authentication-add_ons-confirmation-confirm_on_update?","title":"AshAuthentication.AddOn.Confirmation.authentication.add_ons.confirmation.confirm_on_update?","type":"DSL"},{"doc":"Generate and send a confirmation token when a new resource is created. Triggers when a create action is executed _and_ one of the monitored fields is being set.","ref":"dsl-ashauthentication-addon-confirmation.html#authentication-add_ons-confirmation-confirm_on_create?","title":"AshAuthentication.AddOn.Confirmation.authentication.add_ons.confirmation.confirm_on_create?","type":"DSL"},{"doc":"The name of the field to store the time that the last confirmation took place. Created if it does not exist.","ref":"dsl-ashauthentication-addon-confirmation.html#authentication-add_ons-confirmation-confirmed_at_field","title":"AshAuthentication.AddOn.Confirmation.authentication.add_ons.confirmation.confirmed_at_field","type":"DSL"},{"doc":"A list of fields to monitor for changes. Confirmation will be sent when one of these fields are changed.","ref":"dsl-ashauthentication-addon-confirmation.html#authentication-add_ons-confirmation-monitor_fields","title":"AshAuthentication.AddOn.Confirmation.authentication.add_ons.confirmation.monitor_fields","type":"DSL"},{"doc":"How long should the confirmation token be valid.  If no unit is provided, then hours is assumed.","ref":"dsl-ashauthentication-addon-confirmation.html#authentication-add_ons-confirmation-token_lifetime","title":"AshAuthentication.AddOn.Confirmation.authentication.add_ons.confirmation.token_lifetime","type":"DSL"},{"doc":"Uniquely identifies the add-on.\n","ref":"dsl-ashauthentication-addon-confirmation.html#authentication-add_ons-confirmation-name","title":"AshAuthentication.AddOn.Confirmation.authentication.add_ons.confirmation.name","type":"DSL"},{"doc":"User confirmation flow","ref":"dsl-ashauthentication-addon-confirmation.html#authentication-add_ons-confirmation","title":"AshAuthentication.AddOn.Confirmation.authentication.add_ons.confirmation","type":"DSL"},{"doc":"Additional add-ons related to, but not providing authentication","ref":"dsl-ashauthentication.html#authentication-add_ons","title":"AshAuthentication.authentication.add_ons","type":"DSL"},{"doc":"Configure authentication strategies on this resource","ref":"dsl-ashauthentication.html#authentication-strategies","title":"AshAuthentication.authentication.strategies","type":"DSL"},{"doc":"The secret used to sign tokens.  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"dsl-ashauthentication.html#authentication-tokens-signing_secret","title":"AshAuthentication.authentication.tokens.signing_secret","type":"DSL"},{"doc":"The resource used to store token information, such as in-flight confirmations, revocations, and if `store_all_tokens?` is enabled, authentication tokens themselves.","ref":"dsl-ashauthentication.html#authentication-tokens-token_resource","title":"AshAuthentication.authentication.tokens.token_resource","type":"DSL"},{"doc":"How long a token should be valid. See [the tokens guide](/documentation/topics/tokens.md) for more.","ref":"dsl-ashauthentication.html#authentication-tokens-token_lifetime","title":"AshAuthentication.authentication.tokens.token_lifetime","type":"DSL"},{"doc":"The algorithm to use for token signing. Available signing algorithms are; EdDSA, Ed448ph, Ed448, Ed25519ph, Ed25519, PS512, PS384, PS256, ES512, ES384, ES256, RS512, RS384, RS256, HS512, HS384 and HS256.","ref":"dsl-ashauthentication.html#authentication-tokens-signing_algorithm","title":"AshAuthentication.authentication.tokens.signing_algorithm","type":"DSL"},{"doc":"Require a locally-stored token for authentication. See the [tokens guide](/documentation/topics/tokens.md) for more.","ref":"dsl-ashauthentication.html#authentication-tokens-require_token_presence_for_authentication?","title":"AshAuthentication.authentication.tokens.require_token_presence_for_authentication?","type":"DSL"},{"doc":"Store all tokens in the `token_resource`. See the [tokens guide](/documentation/topics/tokens.md) for more.","ref":"dsl-ashauthentication.html#authentication-tokens-store_all_tokens?","title":"AshAuthentication.authentication.tokens.store_all_tokens?","type":"DSL"},{"doc":"Should JWTs be generated by this resource?\n","ref":"dsl-ashauthentication.html#authentication-tokens-enabled?","title":"AshAuthentication.authentication.tokens.enabled?","type":"DSL"},{"doc":"Configure JWT settings for this resource","ref":"dsl-ashauthentication.html#authentication-tokens","title":"AshAuthentication.authentication.tokens","type":"DSL"},{"doc":"A list of fields that we will ensure are selected whenever a sender will be invoked.  Defaults to `[:email]` if there is an `:email` attribute on the resource, and `[]` otherwise.","ref":"dsl-ashauthentication.html#authentication-select_for_senders","title":"AshAuthentication.authentication.select_for_senders","type":"DSL"},{"doc":"The name of the read action used to retrieve records. If the action doesn't exist, one will be generated for you.","ref":"dsl-ashauthentication.html#authentication-get_by_subject_action_name","title":"AshAuthentication.authentication.get_by_subject_action_name","type":"DSL"},{"doc":"The name of the Ash domain to use to access this resource when doing anything authentication related.","ref":"dsl-ashauthentication.html#authentication-domain","title":"AshAuthentication.authentication.domain","type":"DSL"},{"doc":"The subject name is used anywhere that a short version of your resource name is needed.  Must be unique system-wide and will be inferred from the resource name by default (ie `MyApp.Accounts.User` -> `user`).","ref":"dsl-ashauthentication.html#authentication-subject_name","title":"AshAuthentication.authentication.subject_name","type":"DSL"},{"doc":"Configure authentication for this resource","ref":"dsl-ashauthentication.html#authentication","title":"AshAuthentication.authentication","type":"DSL"},{"doc":"AshAuthentication provides a turn-key authentication solution for folks using\n[Ash](https://www.ash-hq.org/).","ref":"AshAuthentication.html","title":"AshAuthentication","type":"module"},{"doc":"This package assumes that you have [Ash](https://ash-hq.org/) installed and\nconfigured.  See the Ash documentation for details.\n\nOnce installed you can easily add support for authentication by configuring\nthe `AshAuthentication` extension on your resource:\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false\n    attribute :hashed_password, :string, allow_nil?: false, sensitive?: true\n  end\n\n  authentication do\n    strategies do\n      password :password do\n        identity_field :email\n        hashed_password_field :hashed_password\n      end\n    end\n  end\n\n  identities do\n    identity :unique_email, [:email]\n  end\nend\n```\n\nIf you plan on providing authentication via the web, then you will need to\ndefine a plug using `AshAuthentication.Plug` which builds a `Plug.Router` that\nroutes incoming authentication requests to the correct provider and provides\ncallbacks for you to manipulate the conn after success or failure.\n\nIf you're using AshAuthentication with Phoenix, then check out\n[`ash_authentication_phoenix`](https://github.com/team-alembic/ash_authentication_phoenix)\nwhich provides route helpers, a controller abstraction and LiveView components\nfor easy set up.","ref":"AshAuthentication.html#module-usage","title":"Usage - AshAuthentication","type":"module"},{"doc":"Currently supported strategies:\n\n1. `AshAuthentication.Strategy.Password`\n   - authenticate users against your local database using a unique identity\n   (such as username or email address) and a password.\n2. `AshAuthentication.Strategy.OAuth2`\n   - authenticate using local or remote [OAuth 2.0](https://oauth.net/2/) compatible services.\n   - also includes:\n     - `AshAuthentication.Strategy.Auth0`\n     - `AshAuthentication.Strategy.Github`\n     - `AshAuthentication.Strategy.Google`\n     - `AshAuthentication.Strategy.Oidc`\n3. `AshAuthentication.Strategy.MagicLink`\n   - authenticate by sending a single-use link to the user.","ref":"AshAuthentication.html#module-authentication-strategies","title":"Authentication Strategies - AshAuthentication","type":"module"},{"doc":"Most of the authentication strategies based on `OAuth2` wrap the [`assent`](https://hex.pm/packages/assent) package.\n\nIf you needs to customize the behavior of the http client used by `assent`, define a custom `http_adapter` in the \napplication settings:\n\n`config :ash_authentication, :http_adapter, {Assent.HTTPAdapter.Finch, supervisor: MyApp.CustomFinch}`\n\nSee [`assent's documentation`](https://hexdocs.pm/assent/README.html#http-client) for more details on the supported \nhttp clients and their configuration.","ref":"AshAuthentication.html#module-http-client-settings","title":"HTTP client settings - AshAuthentication","type":"module"},{"doc":"Add-ons are like strategies, except that they don't actually provide\nauthentication - they just provide features adjacent to authentication.\nCurrent add-ons:\n\n1. `AshAuthentication.AddOn.Confirmation`\n   - allows you to force the user to confirm changes using a confirmation\n     token (eg. sending a confirmation email when a new user registers).","ref":"AshAuthentication.html#module-add-ons","title":"Add-ons - AshAuthentication","type":"module"},{"doc":"Some add-ons or strategies may require processes to be started which manage\ntheir state over the lifetime of the application (eg periodically deleting\nexpired token revocations).  Because of this you should add\n`{AshAuthentication.Supervisor, otp_app: :my_app}` to your application's\nsupervision tree.  See [the Elixir\ndocs](https://hexdocs.pm/elixir/Application.html#module-the-application-callback-module)\nfor more information.","ref":"AshAuthentication.html#module-supervisor","title":"Supervisor - AshAuthentication","type":"module"},{"doc":"Find all resources which support authentication for a given OTP application.\n\nReturns a list of resource modules.","ref":"AshAuthentication.html#authenticated_resources/1","title":"AshAuthentication.authenticated_resources/1","type":"function"},{"doc":"iex> authenticated_resources(:ash_authentication)\n    [Example.User, Example.UserWithTokenRequired]","ref":"AshAuthentication.html#authenticated_resources/1-example","title":"Example - AshAuthentication.authenticated_resources/1","type":"function"},{"doc":"Hello!","ref":"AshAuthentication.html#authentication/1","title":"AshAuthentication.authentication/1","type":"macro"},{"doc":"Given a subject string, attempt to retrieve a user record.\n\n    iex> %{id: user_id} = build_user()\n    ...> {:ok, %{id: ^user_id}} = subject_to_user(\"user?id=#{user_id}\", Example.User)\n\nAny options passed will be passed to the underlying `Domain.read/2` callback.","ref":"AshAuthentication.html#subject_to_user/3","title":"AshAuthentication.subject_to_user/3","type":"function"},{"doc":"Return a subject string for user.\n\nThis is done by concatenating the resource's subject name with the resource's\nprimary key field(s) to generate a uri-like string.\n\nExample:\n\n    iex> build_user(id: \"ce7969f9-afa5-474c-bc52-ac23a103cef6\") |> user_to_subject()\n    \"user?id=ce7969f9-afa5-474c-bc52-ac23a103cef6\"","ref":"AshAuthentication.html#user_to_subject/1","title":"AshAuthentication.user_to_subject/1","type":"function"},{"doc":"","ref":"AshAuthentication.html#t:resource_config/0","title":"AshAuthentication.resource_config/0","type":"type"},{"doc":"","ref":"AshAuthentication.html#t:subject/0","title":"AshAuthentication.subject/0","type":"type"},{"doc":"This is an Ash resource extension which generates the default token resource.\n\nThe token resource is used to store information about tokens that should not\nbe shared with the end user.  It does not actually contain any tokens.\n\nFor example:\n\n  * When an authentication token has been revoked\n  * When a confirmation token has changes to apply","ref":"AshAuthentication.TokenResource.html","title":"AshAuthentication.TokenResource","type":"module"},{"doc":"The information stored in this resource is essentially ephemeral - all tokens\nhave an expiry date, so it doesn't make sense to keep them after that time has\npassed.  However, if you have any tokens with very long expiry times then we\nsuggest you store this resource in a resilient data-layer such as Postgres.","ref":"AshAuthentication.TokenResource.html#module-storage","title":"Storage - AshAuthentication.TokenResource","type":"module"},{"doc":"There is no need to define any attributes or actions (although you can if you\nwant).  The extension will wire up everything that's needed for the token\nsystem to function.\n\n```\ndefmodule MyApp.Accounts.Token do\n  use Ash.Resource,\n    data_layer: AshPostgres.DataLayer,\n    extensions: [AshAuthentication.TokenResource],\n    domain: MyApp.Accounts\n\n  postgres do\n    table \"tokens\"\n    repo MyApp.Repo\n  end\nend\n```\n\nWhilst it is possible to have multiple token resources, there is no need to do\nso.","ref":"AshAuthentication.TokenResource.html#module-usage","title":"Usage - AshAuthentication.TokenResource","type":"module"},{"doc":"Once a token has expired there's no point in keeping the information it refers\nto, so expired tokens can be automatically removed by adding the\n`AshAuthentication.Supervisor` to your application supervision tree.  This\nwill start the `AshAuthentication.TokenResource.Expunger` `GenServer` which\nperiodically scans and removes any expired records.","ref":"AshAuthentication.TokenResource.html#module-removing-expired-records","title":"Removing expired records - AshAuthentication.TokenResource","type":"module"},{"doc":"Remove all expired records.","ref":"AshAuthentication.TokenResource.html#expunge_expired/2","title":"AshAuthentication.TokenResource.expunge_expired/2","type":"function"},{"doc":"Has the token been revoked?\n\nSimilar to `token-revoked?/2..3` except that rather than extracting the JTI\nfrom the token, assumes that it's being passed in directly.","ref":"AshAuthentication.TokenResource.html#jti_revoked?/3","title":"AshAuthentication.TokenResource.jti_revoked?/3","type":"function"},{"doc":"Revoke a token.\n\nExtracts the JTI from the provided token and uses it to generate a revocation\nrecord.","ref":"AshAuthentication.TokenResource.html#revoke/3","title":"AshAuthentication.TokenResource.revoke/3","type":"function"},{"doc":"Hello!","ref":"AshAuthentication.TokenResource.html#token/1","title":"AshAuthentication.TokenResource.token/1","type":"macro"},{"doc":"Has the token been revoked?\n\nSimilar to `jti_revoked?/2..3` except that it extracts the JTI from the token,\nrather than relying on it to be passed in.","ref":"AshAuthentication.TokenResource.html#token_revoked?/3","title":"AshAuthentication.TokenResource.token_revoked?/3","type":"function"},{"doc":"An Ash extension which generates the default user identities resource.\n\nThe user identities resource is used to store information returned by remote\nauthentication strategies (such as those provided by OAuth2) and maps them to\nyour user resource(s).  This provides the following benefits:\n\n  1. A user can be signed in to multiple authentication strategies at once.\n  2. For those provides which support it AshAuthentication can handle\n     automatic refreshing of tokens.","ref":"AshAuthentication.UserIdentity.html","title":"AshAuthentication.UserIdentity","type":"module"},{"doc":"User identities are expected to be relatively long-lived (although they're\ndeleted on log out), so should probably be stored using a permanent data layer\nsush as `ash_postgres`.","ref":"AshAuthentication.UserIdentity.html#module-storage","title":"Storage - AshAuthentication.UserIdentity","type":"module"},{"doc":"There is no need to define any attributes, etc.  The extension will generate\nthem all for you.  As there is no other use-case for this resource it's\nunlikely that you will need to customise it.\n\n```elixir\ndefmodule MyApp.Accounts.UserIdentity do\n  use Ash.Resource,\n    data_layer: AshPostgres.DataLayer,\n    extensions: [AshAuthentication.UserIdentity],\n    domain: MyApp.Accounts\n\n  user_identity do\n    user_resource MyApp.Accounts.User\n  end\n\n  postgres do\n    table \"user_identities\"\n    repo MyApp.Repo\n  end\nend\n```\n\nIf you intend to operate with multiple user resources, you will need to define\nmultiple user identity resources.","ref":"AshAuthentication.UserIdentity.html#module-usage","title":"Usage - AshAuthentication.UserIdentity","type":"module"},{"doc":"Hello!","ref":"AshAuthentication.UserIdentity.html#user_identity/1","title":"AshAuthentication.UserIdentity.user_identity/1","type":"macro"},{"doc":"Confirmation support.\n\nSometimes when creating a new user, or changing a sensitive attribute (such as\ntheir email address) you may want to wait for the user to confirm by way of\nsending them a confirmation token to prove that it was really them that took\nthe action.\n\nIn order to add confirmation to your resource, it must been the following\nminimum requirements:\n\n1. Have a primary key\n2. Have at least one attribute you wish to confirm\n3. Tokens must be enabled","ref":"AshAuthentication.AddOn.Confirmation.html","title":"AshAuthentication.AddOn.Confirmation","type":"module"},{"doc":"```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false\n  end\n\n  authentication do\n    add_ons do\n      confirmation :confirm do\n        monitor_fields [:email]\n        sender MyApp.ConfirmationSender\n      end\n    end\n\n    strategies do\n      # ...\n    end\n  end\n\n  identities do\n    identity :email, [:email] do\n      eager_check_with MyApp.Accounts\n    end\n  end\nend\n```","ref":"AshAuthentication.AddOn.Confirmation.html#module-example","title":"Example - AshAuthentication.AddOn.Confirmation","type":"module"},{"doc":"A `confirmed_at` attribute will be added to your resource if it's not already\npresent (see `confirmed_at_field` in the DSL documentation).","ref":"AshAuthentication.AddOn.Confirmation.html#module-attributes","title":"Attributes - AshAuthentication.AddOn.Confirmation","type":"module"},{"doc":"By default confirmation will add an action which updates the `confirmed_at`\nattribute as well as retrieving previously stored changes and applying them to\nthe resource.\n\nIf you wish to perform the confirm action directly from your code you can do\nso via the `AshAuthentication.Strategy` protocol.","ref":"AshAuthentication.AddOn.Confirmation.html#module-actions","title":"Actions - AshAuthentication.AddOn.Confirmation","type":"module"},{"doc":"iex> strategy = Info.strategy!(Example.User, :confirm)\n    ...> {:ok, user} = Strategy.action(strategy, :confirm, %{\"confirm\" => confirmation_token()})\n    ...> user.confirmed_at >= one_second_ago()\n    true","ref":"AshAuthentication.AddOn.Confirmation.html#module-example","title":"Example - AshAuthentication.AddOn.Confirmation","type":"module"},{"doc":"Confirmation provides a single endpoint for the `:confirm` phase.  If you wish\nto interact with the plugs directly, you can do so via the\n`AshAuthentication.Strategy` protocol.","ref":"AshAuthentication.AddOn.Confirmation.html#module-plugs","title":"Plugs - AshAuthentication.AddOn.Confirmation","type":"module"},{"doc":"iex> strategy = Info.strategy!(Example.User, :confirm)\n    ...> conn = conn(:get, \"/user/confirm\", %{\"confirm\" => confirmation_token()})\n    ...> conn = Strategy.plug(strategy, :confirm, conn)\n    ...> {_conn, {:ok, user}} = Plug.Helpers.get_authentication_result(conn)\n    ...> user.confirmed_at >= one_second_ago()\n    true","ref":"AshAuthentication.AddOn.Confirmation.html#module-example","title":"Example - AshAuthentication.AddOn.Confirmation","type":"module"},{"doc":"Generate a confirmation token for a changeset.\n\nThis will generate a token with the `\"act\"` claim set to the confirmation\naction for the strategy, and the `\"chg\"` claim will contain any changes.","ref":"AshAuthentication.AddOn.Confirmation.html#confirmation_token/3","title":"AshAuthentication.AddOn.Confirmation.confirmation_token/3","type":"function"},{"doc":"","ref":"AshAuthentication.AddOn.Confirmation.html#transform/2","title":"AshAuthentication.AddOn.Confirmation.transform/2","type":"function"},{"doc":"","ref":"AshAuthentication.AddOn.Confirmation.html#verify/2","title":"AshAuthentication.AddOn.Confirmation.verify/2","type":"function"},{"doc":"","ref":"AshAuthentication.AddOn.Confirmation.html#t:t/0","title":"AshAuthentication.AddOn.Confirmation.t/0","type":"type"},{"doc":"The protocol used for interacting with authentication strategies.\n\nAny new Authentication strategy must implement this protocol.","ref":"AshAuthentication.Strategy.html","title":"AshAuthentication.Strategy","type":"protocol"},{"doc":"Perform an named action.\n\nDifferent strategies are likely to implement a number of different actions\ndepending on their configuration.  Calling them via this function will ensure\nthat the context is correctly set, etc.\n\nSee `actions/1` for a list of actions provided by the strategy.\n\nAny options passed to the action will be passed to the underlying `Ash.Domain` function.","ref":"AshAuthentication.Strategy.html#action/4","title":"AshAuthentication.Strategy.action/4","type":"function"},{"doc":"Return a list of actions supported by the strategy.","ref":"AshAuthentication.Strategy.html#actions/1","title":"AshAuthentication.Strategy.actions/1","type":"function"},{"doc":"iex> strategy = Info.strategy!(Example.User, :password)\n    ...> actions(strategy)\n    [:sign_in_with_token, :register, :sign_in, :reset_request, :reset]","ref":"AshAuthentication.Strategy.html#actions/1-example","title":"Example - AshAuthentication.Strategy.actions/1","type":"function"},{"doc":"Return the HTTP method for a phase.","ref":"AshAuthentication.Strategy.html#method_for_phase/2","title":"AshAuthentication.Strategy.method_for_phase/2","type":"function"},{"doc":"iex> strategy = Info.strategy!(Example.User, :oauth2)\n    ...> method_for_phase(strategy, :request)\n    :get","ref":"AshAuthentication.Strategy.html#method_for_phase/2-example","title":"Example - AshAuthentication.Strategy.method_for_phase/2","type":"function"},{"doc":"The \"short name\" of the strategy, used for genererating routes, etc.\n\nThis is most likely the same value that you use for the entity's `name`\nargument.","ref":"AshAuthentication.Strategy.html#name/1","title":"AshAuthentication.Strategy.name/1","type":"function"},{"doc":"Return a list of phases supported by the strategy.","ref":"AshAuthentication.Strategy.html#phases/1","title":"AshAuthentication.Strategy.phases/1","type":"function"},{"doc":"iex> strategy = Info.strategy!(Example.User, :password)\n    ...> phases(strategy)\n    [:sign_in_with_token, :register, :sign_in, :reset_request, :reset]","ref":"AshAuthentication.Strategy.html#phases/1-example","title":"Example - AshAuthentication.Strategy.phases/1","type":"function"},{"doc":"Handle requests routed to the strategy.\n\nEach phase will be an atom (ie the second element in the route tuple).\n\nSee `phases/1` for a list of phases supported by the strategy.","ref":"AshAuthentication.Strategy.html#plug/3","title":"AshAuthentication.Strategy.plug/3","type":"function"},{"doc":"Used to build the routing table to route web requests to request phases for\neach strategy.","ref":"AshAuthentication.Strategy.html#routes/1","title":"AshAuthentication.Strategy.routes/1","type":"function"},{"doc":"iex> strategy = Info.strategy!(Example.User, :password)\n    ...> routes(strategy)\n    [\n      {\"/user/password/sign_in_with_token\", :sign_in_with_token},\n      {\"/user/password/register\", :register},\n      {\"/user/password/sign_in\", :sign_in},\n      {\"/user/password/reset_request\", :reset_request},\n      {\"/user/password/reset\", :reset}\n    ]","ref":"AshAuthentication.Strategy.html#routes/1-example","title":"Example - AshAuthentication.Strategy.routes/1","type":"function"},{"doc":"Indicates that the strategy creates or consumes tokens.","ref":"AshAuthentication.Strategy.html#tokens_required?/1","title":"AshAuthentication.Strategy.tokens_required?/1","type":"function"},{"doc":"The name of an individual action supported by the strategy.\n\nThis maybe not be the action name on the underlying resource, which may be\ngenerated, but the name that the strategy itself calls the action.","ref":"AshAuthentication.Strategy.html#t:action/0","title":"AshAuthentication.Strategy.action/0","type":"type"},{"doc":"","ref":"AshAuthentication.Strategy.html#t:http_method/0","title":"AshAuthentication.Strategy.http_method/0","type":"type"},{"doc":"A path to match in web requests","ref":"AshAuthentication.Strategy.html#t:path/0","title":"AshAuthentication.Strategy.path/0","type":"type"},{"doc":"The \"phase\" of the request.\n\nUsually `:request` or `:callback` but can be any atom.","ref":"AshAuthentication.Strategy.html#t:phase/0","title":"AshAuthentication.Strategy.phase/0","type":"type"},{"doc":"An individual route.\n\nEg: `{\"/user/password/sign_in\", :sign_in}`","ref":"AshAuthentication.Strategy.html#t:route/0","title":"AshAuthentication.Strategy.route/0","type":"type"},{"doc":"All the types that implement this protocol.","ref":"AshAuthentication.Strategy.html#t:t/0","title":"AshAuthentication.Strategy.t/0","type":"type"},{"doc":"Strategy for authenticating using [Auth0](https://auth0.com).\n\nThis strategy builds on-top of `AshAuthentication.Strategy.OAuth2` and\n[`assent`](https://hex.pm/packages/assent).\n\nIn order to use Auth0 you need to provide the following minimum configuration:\n\n  - `client_id`\n  - `redirect_uri`\n  - `client_secret`\n  - `site`","ref":"AshAuthentication.Strategy.Auth0.html","title":"AshAuthentication.Strategy.Auth0","type":"module"},{"doc":"- The [Auth0 Tutorial](/documentation/tutorial/auth0.md).\n- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)","ref":"AshAuthentication.Strategy.Auth0.html#module-more-documentation","title":"More documentation: - AshAuthentication.Strategy.Auth0","type":"module"},{"doc":"","ref":"AshAuthentication.Strategy.Auth0.html#transform/2","title":"AshAuthentication.Strategy.Auth0.transform/2","type":"function"},{"doc":"","ref":"AshAuthentication.Strategy.Auth0.html#verify/2","title":"AshAuthentication.Strategy.Auth0.verify/2","type":"function"},{"doc":"Define your own custom authentication strategy.\n\nSee [the Custom Strategies guide](/documentation/topics/custom-strategy.md)\nfor more information.","ref":"AshAuthentication.Strategy.Custom.html","title":"AshAuthentication.Strategy.Custom","type":"behaviour"},{"doc":"Sets default values for a DSL schema based on a set of defaults.\n\nIf a given default is in the schema, it can be overriden, so we just set the default\nand mark it not required.\n\nIf not, then we add it to `auto_set_fields`, and the user cannot override it.","ref":"AshAuthentication.Strategy.Custom.html#set_defaults/2","title":"AshAuthentication.Strategy.Custom.set_defaults/2","type":"function"},{"doc":"If your strategy needs to modify either the entity or the parent resource then\nyou can implement this callback.\n\nThis callback can return one of three results:\n\n  - `{:ok, Entity.t}` - an updated DSL entity - useful if you're just changing\n    the entity itself and not changing the wider DSL state of the resource.\n    If this is the response then the transformer will take care of updating\n    the entity in the DSL state.\n  - `{:ok, Dsl.t}` - an updated DSL state for the entire resource.\n  - `{:error, Exception.t}` - a compilation-stopping problem was found. Any\n    exception can be returned, but we strongly advise you to return a\n    `Spark.Error.DslError`.","ref":"AshAuthentication.Strategy.Custom.html#c:transform/2","title":"AshAuthentication.Strategy.Custom.transform/2","type":"callback"},{"doc":"If your strategy needs to verify either the entity or the parent resource then\nyou can implement this callback.\n\nThis is called post-compilation in the `@after_verify` hook - see `Module` for\nmore information.\n\nThis callback can return one of the following results:\n\n  - `:ok` - everything is A-Okay.\n  - `{:error, Exception.t}` - a compilation-stopping problem was found. Any\n    exception can be returned, but we strongly advise you to return a\n    `Spark.Error.DslError`.","ref":"AshAuthentication.Strategy.Custom.html#c:verify/2","title":"AshAuthentication.Strategy.Custom.verify/2","type":"callback"},{"doc":"A Strategy DSL Entity.\n\nSee `Spark.Dsl.Entity` for more information.","ref":"AshAuthentication.Strategy.Custom.html#t:entity/0","title":"AshAuthentication.Strategy.Custom.entity/0","type":"type"},{"doc":"This is the DSL target for your entity and the struct for which you will\nimplement the `AshAuthentication.Strategy` protocol.\n\nThe only required field is `strategy_module` which is used to keep track of\nwhich custom strategy created which strategy.","ref":"AshAuthentication.Strategy.Custom.html#t:strategy/0","title":"AshAuthentication.Strategy.Custom.strategy/0","type":"type"},{"doc":"Strategy for authenticating using [GitHub](https://github.com)\n\nThis strategy builds on-top of `AshAuthentication.Strategy.OAuth2` and\n[`assent`](https://hex.pm/packages/assent).\n\nIn order to use GitHub you need to provide the following minimum configuration:\n\n  - `client_id`\n  - `redirect_uri`\n  - `client_secret`","ref":"AshAuthentication.Strategy.Github.html","title":"AshAuthentication.Strategy.Github","type":"module"},{"doc":"- The [GitHub Tutorial](/documentation/tutorial/github.md).\n- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)","ref":"AshAuthentication.Strategy.Github.html#module-more-documentation","title":"More documentation: - AshAuthentication.Strategy.Github","type":"module"},{"doc":"","ref":"AshAuthentication.Strategy.Github.html#transform/2","title":"AshAuthentication.Strategy.Github.transform/2","type":"function"},{"doc":"","ref":"AshAuthentication.Strategy.Github.html#verify/2","title":"AshAuthentication.Strategy.Github.verify/2","type":"function"},{"doc":"Strategy for authenticating using [Google](https://google.com)\n\nThis strategy builds on-top of `AshAuthentication.Strategy.OAuth2` and\n[`assent`](https://hex.pm/packages/assent).\n\nIn order to use Google you need to provide the following minimum configuration:\n\n  - `client_id`\n  - `redirect_uri`\n  - `client_secret`\n  - `site`","ref":"AshAuthentication.Strategy.Google.html","title":"AshAuthentication.Strategy.Google","type":"module"},{"doc":"- The [Google OAuth 2.0 Overview](https://developers.google.com/identity/protocols/oauth2).\n- The [Google Tutorial](/documentation/tutorial/google.md)\n- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)","ref":"AshAuthentication.Strategy.Google.html#module-more-documentation","title":"More documentation: - AshAuthentication.Strategy.Google","type":"module"},{"doc":"","ref":"AshAuthentication.Strategy.Google.html#transform/2","title":"AshAuthentication.Strategy.Google.transform/2","type":"function"},{"doc":"","ref":"AshAuthentication.Strategy.Google.html#verify/2","title":"AshAuthentication.Strategy.Google.verify/2","type":"function"},{"doc":"Strategy for authentication using a magic link.\n\nIn order to use magic link authentication your resource needs to meet the\nfollowing minimum requirements:\n\n1. Have a primary key.\n2. A uniquely constrained identity field (eg `username` or `email`)\n3. Have tokens enabled.\n\nThere are other options documented in the DSL.","ref":"AshAuthentication.Strategy.MagicLink.html","title":"AshAuthentication.Strategy.MagicLink","type":"module"},{"doc":"```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false\n  end\n\n  authentication do\n    strategies do\n      magic_link do\n        identity_field :email\n        sender fn user, token, _opts ->\n          MyApp.Emails.deliver_magic_link(user, token)\n        end\n      end\n    end\n  end\n\n  identities do\n    identity :unique_email, [:email]\n  end\nend\n```","ref":"AshAuthentication.Strategy.MagicLink.html#module-example","title":"Example - AshAuthentication.Strategy.MagicLink","type":"module"},{"doc":"By default the magic link strategy will automatically generate the request and\nsign-in actions for you, however you're free to define them yourself.  If you\ndo, then the action will be validated to ensure that all the needed\nconfiguration is present.\n\nIf you wish to work with the actions directly from your code you can do so via\nthe `AshAuthentication.Strategy` protocol.","ref":"AshAuthentication.Strategy.MagicLink.html#module-actions","title":"Actions - AshAuthentication.Strategy.MagicLink","type":"module"},{"doc":"Requesting that a magic link token is sent for a user:\n\n    iex> strategy = Info.strategy!(Example.User, :magic_link)\n    ...> user = build_user()\n    ...> Strategy.action(strategy, :request, %{\"username\" => user.username})\n    :ok\n\nSigning in using a magic link token:\n\n    ...> {:ok, token} = MagicLink.request_token_for(strategy, user)\n    ...> {:ok, signed_in_user} = Strategy.action(strategy, :sign_in, %{\"token\" => token})\n    ...> signed_in_user.id == user\n    true","ref":"AshAuthentication.Strategy.MagicLink.html#module-examples","title":"Examples - AshAuthentication.Strategy.MagicLink","type":"module"},{"doc":"The magic link strategy provides plug endpoints for both request and sign-in\nactions.\n\nIf you wish to work with the plugs directly, you can do so via the\n`AshAuthentication.Strategy` protocol.","ref":"AshAuthentication.Strategy.MagicLink.html#module-plugs","title":"Plugs - AshAuthentication.Strategy.MagicLink","type":"module"},{"doc":"Dispatching to plugs directly:\n\n    iex> strategy = Info.strategy!(Example.User, :magic_link)\n    ...> user = build_user()\n    ...> conn = conn(:post, \"/user/magic_link/request\", %{\"user\" => %{\"username\" => user.username}})\n    ...> conn = Strategy.plug(strategy, :request, conn)\n    ...> {_conn, {:ok, nil}} = Plug.Helpers.get_authentication_result(conn)\n\n    ...> {:ok, token} = MagicLink.request_token_for(strategy, user)\n    ...> conn = conn(:get, \"/user/magic_link\", %{\"token\" => token})\n    ...> conn = Strategy.plug(strategy, :sign_in, conn)\n    ...> {_conn, {:ok, signed_in_user}} = Plug.Helpers.get_authentication_result(conn)\n    ...> signed_in_user.id == user.id\n    true\n\nSee the [Magic Link Tutorial](/documentation/tutorial/magic-links.md) for more information.","ref":"AshAuthentication.Strategy.MagicLink.html#module-examples","title":"Examples: - AshAuthentication.Strategy.MagicLink","type":"module"},{"doc":"Generate a magic link token for a user.\n\nUsed by `AshAuthentication.Strategy.MagicLink.RequestPreparation`.","ref":"AshAuthentication.Strategy.MagicLink.html#request_token_for/2","title":"AshAuthentication.Strategy.MagicLink.request_token_for/2","type":"function"},{"doc":"","ref":"AshAuthentication.Strategy.MagicLink.html#transform/2","title":"AshAuthentication.Strategy.MagicLink.transform/2","type":"function"},{"doc":"","ref":"AshAuthentication.Strategy.MagicLink.html#verify/2","title":"AshAuthentication.Strategy.MagicLink.verify/2","type":"function"},{"doc":"","ref":"AshAuthentication.Strategy.MagicLink.html#t:t/0","title":"AshAuthentication.Strategy.MagicLink.t/0","type":"type"},{"doc":"Strategy for authenticating using an OAuth 2.0 server as the source of truth.\n\nThis strategy wraps the excellent [`assent`](https://hex.pm/packages/assent)\npackage, which provides OAuth 2.0 capabilities.\n\nIn order to use OAuth 2.0 authentication on your resource, it needs to meet\nthe following minimum criteria:\n\n1. Have a primary key.\n2. Provide a strategy-specific action, either register or sign-in.\n3. Provide configuration for OAuth2 destinations, secrets, etc.","ref":"AshAuthentication.Strategy.OAuth2.html","title":"AshAuthentication.Strategy.OAuth2","type":"module"},{"doc":"```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false\n  end\n\n  authentication do\n    strategies do\n      oauth2 :example do\n        client_id \"OAuth Client ID\"\n        redirect_uri \"https://my.app/\"\n        client_secret \"My Super Secret Secret\"\n        site \"https://auth.example.com/\"\n      end\n    end\n  end\nend\n```","ref":"AshAuthentication.Strategy.OAuth2.html#module-example","title":"Example: - AshAuthentication.Strategy.OAuth2","type":"module"},{"doc":"In order to use OAuth 2.0 you need to provide a varying number of secrets and\nother configuration which may change based on runtime environment.  The\n`AshAuthentication.Secret` behaviour is provided to accommodate this.  This\nallows you to provide configuration either directly on the resource (ie as a\nstring), as an anonymous function, or as a module.\n\n>","ref":"AshAuthentication.Strategy.OAuth2.html#module-secrets-and-runtime-configuration","title":"Secrets and runtime configuration - AshAuthentication.Strategy.OAuth2","type":"module"},{"doc":">\n> We **strongly** urge you not to share actual secrets in your code or\n> repository.","ref":"AshAuthentication.Strategy.OAuth2.html#module-warning-warning","title":"Warning {: .warning} - AshAuthentication.Strategy.OAuth2","type":"module"},{"doc":"Providing configuration as an anonymous function:\n\n```elixir\noauth2 do\n  client_secret fn _path, resource ->\n    Application.fetch_env(:my_app, resource, :oauth2_client_secret)\n  end\nend\n```\n\nProviding configuration as a module:\n\n```elixir\ndefmodule MyApp.Secrets do\n  use AshAuthentication.Secret\n\n  def secret_for([:authentication, :strategies, :example, :client_secret], MyApp.User, _opts), do: Application.fetch_env(:my_app, :oauth2_client_secret)\nend\n\n# and in your strategies:\n\noauth2 :example do\n  client_secret MyApp.Secrets\nend\n```","ref":"AshAuthentication.Strategy.OAuth2.html#module-examples","title":"Examples: - AshAuthentication.Strategy.OAuth2","type":"module"},{"doc":"Because your users can be signed in via multiple providers at once, you can\nspecify an `identity_resource` in the DSL configuration which points to a\nseperate Ash resource which has the `AshAuthentication.UserIdentity` extension\npresent. This resource will be used to store details of the providers in use\nby each user and a relationship will be added to the user resource.\n\nSetting the `identity_resource` will cause extra validations to be applied to\nyour resource so that changes are tracked correctly on sign-in or\nregistration.","ref":"AshAuthentication.Strategy.OAuth2.html#module-user-identities","title":"User identities - AshAuthentication.Strategy.OAuth2","type":"module"},{"doc":"When using an OAuth 2.0 provider you need to declare either a \"register\" or\n\"sign-in\" action.  The reason for this is that it's not possible for us to\nknow ahead of time how you want to manage the link between your user resources\nand the \"user info\" provided by the OAuth server.\n\nBoth actions receive the following two arguments:\n\n1. `user_info` - a map with string keys containing the [OpenID Successful\n   UserInfo\n   response](https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse).\n   Usually this will be used to populate your email, nickname or other\n   identifying field.\n2. `oauth_tokens` a map with string keys containing the [OpenID Successful\n   Token\n   response](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse)\n   (or similar).\n\nThe actions themselves can be interacted with directly via the\n`AshAuthentication.Strategy` protocol, but you are more likely to interact\nwith them via the web/plugs.","ref":"AshAuthentication.Strategy.OAuth2.html#module-actions","title":"Actions - AshAuthentication.Strategy.OAuth2","type":"module"},{"doc":"The sign-in action is called when a successful OAuth2 callback is received.\nYou should use it to constrain the query to the correct user based on the\narguments provided.\n\nThis action is only needed when the `registration_enabled?` DSL settings is\nset to `false`.","ref":"AshAuthentication.Strategy.OAuth2.html#module-sign-in","title":"Sign-in - AshAuthentication.Strategy.OAuth2","type":"module"},{"doc":"The register action is a little more complicated than the sign-in action,\nbecause we cannot tell the difference between a new user and a returning user\n(they all use the same OAuth flow).  In order to handle this your register\naction must be defined as an upsert with a configured `upsert_identity` (see\nexample below).","ref":"AshAuthentication.Strategy.OAuth2.html#module-registration","title":"Registration - AshAuthentication.Strategy.OAuth2","type":"module"},{"doc":"Providing sign-in to users who already exist in the database (and by extension\nrejecting new users):\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false\n  end\n\n  actions do\n    read :sign_in_with_example do\n      argument :user_info, :map, allow_nil?: false\n      argument :oauth_tokens, :map, allow_nil?: false\n      prepare AshAuthentication.Strategy.OAuth2.SignInPreparation\n\n      filter expr(email == get_path(^arg(:user_info), [:email]))\n    end\n  end\n\n  authentication do\n    strategies do\n      oauth2 :example do\n        registration_enabled? false\n      end\n    end\n  end\nend\n```\n\nProviding registration or sign-in to all comers:\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false\n  end\n\n  actions do\n    create :register_with_oauth2 do\n      argument :user_info, :map, allow_nil?: false\n      argument :oauth_tokens, :map, allow_nil?: false\n      upsert? true\n      upsert_identity :email\n\n      change AshAuthentication.GenerateTokenChange\n      change fn changeset, _ctx ->\n        user_info = Ash.Changeset.get_argument(changeset, :user_info)\n\n        changeset\n        |> Ash.Changeset.change_attribute(:email, user_info[\"email\"])\n      end\n    end\n  end\n\n  authentication do\n    strategies do\n      oauth2 :example do\n      end\n    end\n  end\nend\n```","ref":"AshAuthentication.Strategy.OAuth2.html#module-examples","title":"Examples: - AshAuthentication.Strategy.OAuth2","type":"module"},{"doc":"OAuth 2.0 is (usually) a browser-based flow. This means that you're most\nlikely to interact with this strategy via it's plugs.  There are two phases to\nauthentication with OAuth 2.0:\n\n1. The request phase, where the user's browser is redirected to the remote\n   authentication provider for authentication.\n2. The callback phase, where the provider redirects the user back to your app\n   to create a local database record, session, etc.","ref":"AshAuthentication.Strategy.OAuth2.html#module-plugs","title":"Plugs - AshAuthentication.Strategy.OAuth2","type":"module"},{"doc":"","ref":"AshAuthentication.Strategy.OAuth2.html#transform/2","title":"AshAuthentication.Strategy.OAuth2.transform/2","type":"function"},{"doc":"","ref":"AshAuthentication.Strategy.OAuth2.html#verify/2","title":"AshAuthentication.Strategy.OAuth2.verify/2","type":"function"},{"doc":"","ref":"AshAuthentication.Strategy.OAuth2.html#t:secret/0","title":"AshAuthentication.Strategy.OAuth2.secret/0","type":"type"},{"doc":"","ref":"AshAuthentication.Strategy.OAuth2.html#t:secret_list/0","title":"AshAuthentication.Strategy.OAuth2.secret_list/0","type":"type"},{"doc":"","ref":"AshAuthentication.Strategy.OAuth2.html#t:t/0","title":"AshAuthentication.Strategy.OAuth2.t/0","type":"type"},{"doc":"Strategy for authentication using an [OpenID\nConnect](https://openid.net/connect/) compatible server as the source of\ntruth.\n\nThis strategy builds on-top of `AshAuthentication.Strategy.OAuth2` and\n[`assent`](https://hex.pm/packages/assent).\n\nIn order to use OIDC you need to provide the following minimum configuration:\n\n- `client_id` - The client id, required\n- `site` - The OIDC issuer, required\n- `openid_configuration_uri` - The URI for OpenID Provider, optional, defaults\n  to `/.well-known/openid-configuration`\n- `client_authentication_method` - The Client Authentication method to use,\n  optional, defaults to `client_secret_basic`\n- `client_secret` - The client secret, required if\n  `:client_authentication_method` is `:client_secret_basic`,\n  `:client_secret_post`, or `:client_secret_jwt`\n- `openid_configuration` - The OpenID configuration, optional, the\n  configuration will be fetched from `:openid_configuration_uri` if this is\n  not defined\n- `id_token_signed_response_alg` - The `id_token_signed_response_alg`\n  parameter sent by the Client during Registration, defaults to `RS256`\n- `id_token_ttl_seconds` - The number of seconds from `iat` that an ID Token\n  will be considered valid, optional, defaults to nil\n- `nonce` - The nonce to use for authorization request, optional, MUST be\n  session based and unguessable.","ref":"AshAuthentication.Strategy.Oidc.html","title":"AshAuthentication.Strategy.Oidc","type":"module"},{"doc":"`nonce` can be set in the provider config. The `nonce` will be returned in the\n`session_params` along with `state`. You can use this to store the value in\nthe current session e.g. a httpOnly session cookie.\n\nA random value generator can look like this:\n\n```elixir\n16\n|> :crypto.strong_rand_bytes()\n|> Base.encode64(padding: false)\n```\n\nAshAuthentication will dynamically generate one for the session if `nonce` is\nset to `true`.","ref":"AshAuthentication.Strategy.Oidc.html#module-nonce","title":"Nonce - AshAuthentication.Strategy.Oidc","type":"module"},{"doc":"- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)","ref":"AshAuthentication.Strategy.Oidc.html#module-more-documentation","title":"More documentation: - AshAuthentication.Strategy.Oidc","type":"module"},{"doc":"","ref":"AshAuthentication.Strategy.Oidc.html#transform/2","title":"AshAuthentication.Strategy.Oidc.transform/2","type":"function"},{"doc":"","ref":"AshAuthentication.Strategy.Oidc.html#verify/2","title":"AshAuthentication.Strategy.Oidc.verify/2","type":"function"},{"doc":"Strategy for authenticating using local resources as the source of truth.\n\nIn order to use password authentication your resource needs to meet the\nfollowing minimum requirements:\n\n1. Have a primary key.\n2. A uniquely constrained identity field (eg `username` or `email`).\n3. A sensitive string field within which to store the hashed password.\n\nThere are other options documented in the DSL.","ref":"AshAuthentication.Strategy.Password.html","title":"AshAuthentication.Strategy.Password","type":"module"},{"doc":"```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false\n    attribute :hashed_password, :string, allow_nil?: false, sensitive?: true\n  end\n\n  authentication do\n    strategies do\n      password :password do\n        identity_field :email\n        hashed_password_field :hashed_password\n      end\n    end\n  end\n\n  identities do\n    identity :unique_email, [:email]\n  end\nend\n```","ref":"AshAuthentication.Strategy.Password.html#module-example","title":"Example: - AshAuthentication.Strategy.Password","type":"module"},{"doc":"By default the password strategy will automatically generate the register,\nsign-in, reset-request and reset actions for you, however you're free to\ndefine them yourself.  If you do, then the action will be validated to ensure\nthat all the needed configuration is present.\n\nIf you wish to work with the actions directly from your code you can do so via\nthe `AshAuthentication.Strategy` protocol.","ref":"AshAuthentication.Strategy.Password.html#module-actions","title":"Actions - AshAuthentication.Strategy.Password","type":"module"},{"doc":"Interacting with the actions directly:\n\n    iex> strategy = Info.strategy!(Example.User, :password)\n    ...> {:ok, marty} = Strategy.action(strategy, :register, %{\"username\" => \"marty\", \"password\" => \"outatime1985\", \"password_confirmation\" => \"outatime1985\"})\n    ...> marty.username |> to_string()\n    \"marty\"\n\n    ...> {:ok, user} = Strategy.action(strategy, :sign_in, %{\"username\" => \"marty\", \"password\" => \"outatime1985\"})\n    ...> user.username |> to_string()\n    \"marty\"","ref":"AshAuthentication.Strategy.Password.html#module-examples","title":"Examples: - AshAuthentication.Strategy.Password","type":"module"},{"doc":"The password strategy provides plug endpoints for all four actions, although\nonly sign-in and register will be reported by `Strategy.routes/1` if the\nstrategy is not configured as resettable.\n\nIf you wish to work with the plugs directly, you can do so via the\n`AshAuthentication.Strategy` protocol.","ref":"AshAuthentication.Strategy.Password.html#module-plugs","title":"Plugs - AshAuthentication.Strategy.Password","type":"module"},{"doc":"Dispatching to plugs directly:\n\n    iex> strategy = Info.strategy!(Example.User, :password)\n    ...> conn = conn(:post, \"/user/password/register\", %{\"user\" => %{\"username\" => \"marty\", \"password\" => \"outatime1985\", \"password_confirmation\" => \"outatime1985\"}})\n    ...> conn = Strategy.plug(strategy, :register, conn)\n    ...> {_conn, {:ok, marty}} = Plug.Helpers.get_authentication_result(conn)\n    ...> marty.username |> to_string()\n    \"marty\"\n\n    ...> conn = conn(:post, \"/user/password/reset_request\", %{\"user\" => %{\"username\" => \"marty\"}})\n    ...> conn = Strategy.plug(strategy, :reset_request, conn)\n    ...> {_conn, :ok} = Plug.Helpers.get_authentication_result(conn)","ref":"AshAuthentication.Strategy.Password.html#module-examples","title":"Examples: - AshAuthentication.Strategy.Password","type":"module"},{"doc":"See the [Testing guide](/documentation/topics/testing.md) for tips on testing resources using this strategy.","ref":"AshAuthentication.Strategy.Password.html#module-testing","title":"Testing - AshAuthentication.Strategy.Password","type":"module"},{"doc":"Generate a reset token for a user.\n\nUsed by `AshAuthentication.Strategy.Password.RequestPasswordResetPreparation`.","ref":"AshAuthentication.Strategy.Password.html#reset_token_for/2","title":"AshAuthentication.Strategy.Password.reset_token_for/2","type":"function"},{"doc":"","ref":"AshAuthentication.Strategy.Password.html#transform/2","title":"AshAuthentication.Strategy.Password.transform/2","type":"function"},{"doc":"","ref":"AshAuthentication.Strategy.Password.html#verify/2","title":"AshAuthentication.Strategy.Password.verify/2","type":"function"},{"doc":"","ref":"AshAuthentication.Strategy.Password.html#t:t/0","title":"AshAuthentication.Strategy.Password.t/0","type":"type"},{"doc":"Provides the default implementation of `AshAuthentication.HashProvider` using `Bcrypt`.","ref":"AshAuthentication.BcryptProvider.html","title":"AshAuthentication.BcryptProvider","type":"module"},{"doc":"Given some user input as a string, convert it into it's hashed form using `Bcrypt`.","ref":"AshAuthentication.BcryptProvider.html#hash/1","title":"AshAuthentication.BcryptProvider.hash/1","type":"function"},{"doc":"iex> {:ok, hashed} = hash(\"Marty McFly\")\n    ...> String.starts_with?(hashed, \"$2b$04$\")\n    true","ref":"AshAuthentication.BcryptProvider.html#hash/1-example","title":"Example - AshAuthentication.BcryptProvider.hash/1","type":"function"},{"doc":"Simulate a password check to help avoid timing attacks.","ref":"AshAuthentication.BcryptProvider.html#simulate/0","title":"AshAuthentication.BcryptProvider.simulate/0","type":"function"},{"doc":"iex> simulate()\n    false","ref":"AshAuthentication.BcryptProvider.html#simulate/0-example","title":"Example - AshAuthentication.BcryptProvider.simulate/0","type":"function"},{"doc":"Check if the user input matches the hash.","ref":"AshAuthentication.BcryptProvider.html#valid?/2","title":"AshAuthentication.BcryptProvider.valid?/2","type":"function"},{"doc":"iex> valid?(\"Marty McFly\", \"$2b$04$qgacrnrAJz8aPwaVQiGJn.PvryldV.NfOSYYvF/CZAGgMvvzhIE7S\")\n    true","ref":"AshAuthentication.BcryptProvider.html#valid?/2-example","title":"Example - AshAuthentication.BcryptProvider.valid?/2","type":"function"},{"doc":"A behaviour providing password hashing.","ref":"AshAuthentication.HashProvider.html","title":"AshAuthentication.HashProvider","type":"behaviour"},{"doc":"Given some user input as a string, convert it into it's hashed form.","ref":"AshAuthentication.HashProvider.html#c:hash/1","title":"AshAuthentication.HashProvider.hash/1","type":"callback"},{"doc":"Attempt to defeat timing attacks by simulating a password hash check.\n\nSee [Bcrypt.no_user_verify/1](https://hexdocs.pm/bcrypt_elixir/Bcrypt.html#no_user_verify/1) for more information.","ref":"AshAuthentication.HashProvider.html#c:simulate/0","title":"AshAuthentication.HashProvider.simulate/0","type":"callback"},{"doc":"Check if the user input matches the hash.","ref":"AshAuthentication.HashProvider.html#c:valid?/2","title":"AshAuthentication.HashProvider.valid?/2","type":"callback"},{"doc":"Uses the excellent `joken` hex package to generate and sign Json Web Tokens.","ref":"AshAuthentication.Jwt.html","title":"AshAuthentication.Jwt","type":"module"},{"doc":"There are a few things we need to know in order to generate and sign a JWT:\n\n  * `signing_algorithm` - the crypographic algorithm used to to sign tokens.\n  * `token_lifetime` - how long the token is valid for (in hours).\n  * `signing_secret` - the secret key used to sign the tokens.\n\nThese can be configured in your resource's token DSL:\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  # ...\n\n  authentication do\n    tokens do\n      token_lifetime 32\n      signing_secret fn _, _ ->\n        System.fetch_env(\"TOKEN_SIGNING_SECRET\")\n      end\n    end\n  end\n\n  # ...\nend\n```\n\nThe signing secret is retrieved using the `AshAuthentication.Secret`\nbehaviour, which means that it can be retrieved one of three ways:\n\n1. As a string directly in your resource DSL (please don't do this unless you\n   know why this is a bad idea!), or\n2. a two-arity anonymous function which returns `{:ok, secret}`, or\n3. the name of a module which implements the `AshAuthentication.Secret`\n   behaviour.\n\nAvailable signing algorithms are EdDSA, Ed448ph, Ed448, Ed25519ph, Ed25519, PS512, PS384, PS256, ES512, ES384, ES256, RS512, RS384, RS256, HS512, HS384 or HS256.  Defaults to HS256.\n\nWe strongly advise against storing the signing secret in your mix config or\ndirectly in your resource configuration.  We instead suggest you make use of\n[`runtime.exs`](https://elixir-lang.org/getting-started/mix-otp/config-and-releases.html#configuration)\nand read it from the system environment or other secret store.\n\nThe default token lifetime is 168 and should be\nspecified in integer positive hours.","ref":"AshAuthentication.Jwt.html#module-configuration","title":"Configuration - AshAuthentication.Jwt","type":"module"},{"doc":"The default signing algorithm","ref":"AshAuthentication.Jwt.html#default_algorithm/0","title":"AshAuthentication.Jwt.default_algorithm/0","type":"function"},{"doc":"The default token lifetime","ref":"AshAuthentication.Jwt.html#default_lifetime_hrs/0","title":"AshAuthentication.Jwt.default_lifetime_hrs/0","type":"function"},{"doc":"Given a token, read it's claims without validating.","ref":"AshAuthentication.Jwt.html#peek/1","title":"AshAuthentication.Jwt.peek/1","type":"function"},{"doc":"Supported signing algorithms","ref":"AshAuthentication.Jwt.html#supported_algorithms/0","title":"AshAuthentication.Jwt.supported_algorithms/0","type":"function"},{"doc":"Given a user, generate a signed JWT for use while authenticating.","ref":"AshAuthentication.Jwt.html#token_for_user/3","title":"AshAuthentication.Jwt.token_for_user/3","type":"function"},{"doc":"Given a token, find a matching resource configuration.","ref":"AshAuthentication.Jwt.html#token_to_resource/2","title":"AshAuthentication.Jwt.token_to_resource/2","type":"function"},{"doc":"This function *does not* validate the token, so don't rely on it for\nauthentication or authorisation.","ref":"AshAuthentication.Jwt.html#token_to_resource/2-warning","title":"Warning - AshAuthentication.Jwt.token_to_resource/2","type":"function"},{"doc":"Given a token, verify it's signature and validate it's claims.","ref":"AshAuthentication.Jwt.html#verify/2","title":"AshAuthentication.Jwt.verify/2","type":"function"},{"doc":"\"claims\" are the decoded contents of a JWT.  A map of (short) string keys to\nstring values.","ref":"AshAuthentication.Jwt.html#t:claims/0","title":"AshAuthentication.Jwt.claims/0","type":"type"},{"doc":"A string likely to contain a valid JWT.","ref":"AshAuthentication.Jwt.html#t:token/0","title":"AshAuthentication.Jwt.token/0","type":"type"},{"doc":"Generated configuration functions based on a resource's DSL configuration.","ref":"AshAuthentication.Info.html","title":"AshAuthentication.Info","type":"module"},{"doc":"authentication.add_ons DSL entities","ref":"AshAuthentication.Info.html#authentication_add_ons/1","title":"AshAuthentication.Info.authentication_add_ons/1","type":"function"},{"doc":"The name of the Ash domain to use to access this resource when doing anything authentication related.","ref":"AshAuthentication.Info.html#authentication_domain/1","title":"AshAuthentication.Info.authentication_domain/1","type":"function"},{"doc":"The name of the Ash domain to use to access this resource when doing anything authentication related.","ref":"AshAuthentication.Info.html#authentication_domain!/1","title":"AshAuthentication.Info.authentication_domain!/1","type":"function"},{"doc":"The name of the read action used to retrieve records. If the action doesn't exist, one will be generated for you.","ref":"AshAuthentication.Info.html#authentication_get_by_subject_action_name/1","title":"AshAuthentication.Info.authentication_get_by_subject_action_name/1","type":"function"},{"doc":"The name of the read action used to retrieve records. If the action doesn't exist, one will be generated for you.","ref":"AshAuthentication.Info.html#authentication_get_by_subject_action_name!/1","title":"AshAuthentication.Info.authentication_get_by_subject_action_name!/1","type":"function"},{"doc":"authentication DSL options\n\nReturns a map containing the and any configured or default values.","ref":"AshAuthentication.Info.html#authentication_options/1","title":"AshAuthentication.Info.authentication_options/1","type":"function"},{"doc":"A list of fields that we will ensure are selected whenever a sender will be invoked.  Defaults to `[:email]` if there is an `:email` attribute on the resource, and `[]` otherwise.","ref":"AshAuthentication.Info.html#authentication_select_for_senders/1","title":"AshAuthentication.Info.authentication_select_for_senders/1","type":"function"},{"doc":"A list of fields that we will ensure are selected whenever a sender will be invoked.  Defaults to `[:email]` if there is an `:email` attribute on the resource, and `[]` otherwise.","ref":"AshAuthentication.Info.html#authentication_select_for_senders!/1","title":"AshAuthentication.Info.authentication_select_for_senders!/1","type":"function"},{"doc":"authentication.strategies DSL entities","ref":"AshAuthentication.Info.html#authentication_strategies/1","title":"AshAuthentication.Info.authentication_strategies/1","type":"function"},{"doc":"The subject name is used anywhere that a short version of your resource name is needed.  Must be unique system-wide and will be inferred from the resource name by default (ie `MyApp.Accounts.User` -> `user`).","ref":"AshAuthentication.Info.html#authentication_subject_name/1","title":"AshAuthentication.Info.authentication_subject_name/1","type":"function"},{"doc":"The subject name is used anywhere that a short version of your resource name is needed.  Must be unique system-wide and will be inferred from the resource name by default (ie `MyApp.Accounts.User` -> `user`).","ref":"AshAuthentication.Info.html#authentication_subject_name!/1","title":"AshAuthentication.Info.authentication_subject_name!/1","type":"function"},{"doc":"Should JWTs be generated by this resource?","ref":"AshAuthentication.Info.html#authentication_tokens_enabled?/1","title":"AshAuthentication.Info.authentication_tokens_enabled?/1","type":"function"},{"doc":"authentication.tokens DSL options\n\nReturns a map containing the and any configured or default values.","ref":"AshAuthentication.Info.html#authentication_tokens_options/1","title":"AshAuthentication.Info.authentication_tokens_options/1","type":"function"},{"doc":"Require a locally-stored token for authentication. See the [tokens guide](/documentation/topics/tokens.md) for more.","ref":"AshAuthentication.Info.html#authentication_tokens_require_token_presence_for_authentication?/1","title":"AshAuthentication.Info.authentication_tokens_require_token_presence_for_authentication?/1","type":"function"},{"doc":"The algorithm to use for token signing. Available signing algorithms are; EdDSA, Ed448ph, Ed448, Ed25519ph, Ed25519, PS512, PS384, PS256, ES512, ES384, ES256, RS512, RS384, RS256, HS512, HS384 and HS256.","ref":"AshAuthentication.Info.html#authentication_tokens_signing_algorithm/1","title":"AshAuthentication.Info.authentication_tokens_signing_algorithm/1","type":"function"},{"doc":"The algorithm to use for token signing. Available signing algorithms are; EdDSA, Ed448ph, Ed448, Ed25519ph, Ed25519, PS512, PS384, PS256, ES512, ES384, ES256, RS512, RS384, RS256, HS512, HS384 and HS256.","ref":"AshAuthentication.Info.html#authentication_tokens_signing_algorithm!/1","title":"AshAuthentication.Info.authentication_tokens_signing_algorithm!/1","type":"function"},{"doc":"The secret used to sign tokens.  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"AshAuthentication.Info.html#authentication_tokens_signing_secret/1","title":"AshAuthentication.Info.authentication_tokens_signing_secret/1","type":"function"},{"doc":"The secret used to sign tokens.  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string.","ref":"AshAuthentication.Info.html#authentication_tokens_signing_secret!/1","title":"AshAuthentication.Info.authentication_tokens_signing_secret!/1","type":"function"},{"doc":"Store all tokens in the `token_resource`. See the [tokens guide](/documentation/topics/tokens.md) for more.","ref":"AshAuthentication.Info.html#authentication_tokens_store_all_tokens?/1","title":"AshAuthentication.Info.authentication_tokens_store_all_tokens?/1","type":"function"},{"doc":"How long a token should be valid. See [the tokens guide](/documentation/topics/tokens.md) for more.","ref":"AshAuthentication.Info.html#authentication_tokens_token_lifetime/1","title":"AshAuthentication.Info.authentication_tokens_token_lifetime/1","type":"function"},{"doc":"How long a token should be valid. See [the tokens guide](/documentation/topics/tokens.md) for more.","ref":"AshAuthentication.Info.html#authentication_tokens_token_lifetime!/1","title":"AshAuthentication.Info.authentication_tokens_token_lifetime!/1","type":"function"},{"doc":"The resource used to store token information, such as in-flight confirmations, revocations, and if `store_all_tokens?` is enabled, authentication tokens themselves.","ref":"AshAuthentication.Info.html#authentication_tokens_token_resource/1","title":"AshAuthentication.Info.authentication_tokens_token_resource/1","type":"function"},{"doc":"The resource used to store token information, such as in-flight confirmations, revocations, and if `store_all_tokens?` is enabled, authentication tokens themselves.","ref":"AshAuthentication.Info.html#authentication_tokens_token_resource!/1","title":"AshAuthentication.Info.authentication_tokens_token_resource!/1","type":"function"},{"doc":"Retrieve the domain to use for authentication.\n\nIf the `authentication.domain` DSL option is set, it will be used, otherwise\nit will default to that configured on the resource.","ref":"AshAuthentication.Info.html#domain/1","title":"AshAuthentication.Info.domain/1","type":"function"},{"doc":"Raising version of `domain/1`","ref":"AshAuthentication.Info.html#domain!/1","title":"AshAuthentication.Info.domain!/1","type":"function"},{"doc":"Find the underlying strategy that required a change/preparation to be used.\n\nThis is because the `strategy_name` can be passed on the change options, eg:\n\n```elixir\nchange {AshAuthentication.Strategy.Password.HashPasswordChange, strategy_name: :banana_custard}\n```\n\nOr via the action context, eg:\n\n```elixir\nprepare set_context(%{strategy_name: :banana_custard})\nprepare AshAuthentication.Strategy.Password.SignInPreparation\n```\n\nOr via the passed-in context on calling the action.","ref":"AshAuthentication.Info.html#find_strategy/3","title":"AshAuthentication.Info.find_strategy/3","type":"function"},{"doc":"Retrieve a named strategy from a resource.","ref":"AshAuthentication.Info.html#strategy/2","title":"AshAuthentication.Info.strategy/2","type":"function"},{"doc":"Retrieve a named strategy from a resource (raising version).","ref":"AshAuthentication.Info.html#strategy!/2","title":"AshAuthentication.Info.strategy!/2","type":"function"},{"doc":"Given an action name, retrieve the strategy it is for from the DSL\nconfiguration.","ref":"AshAuthentication.Info.html#strategy_for_action/2","title":"AshAuthentication.Info.strategy_for_action/2","type":"function"},{"doc":"Given an action name, retrieve the strategy it is for from the DSL\nconfiguration.","ref":"AshAuthentication.Info.html#strategy_for_action!/2","title":"AshAuthentication.Info.strategy_for_action!/2","type":"function"},{"doc":"","ref":"AshAuthentication.Info.html#t:dsl_or_resource/0","title":"AshAuthentication.Info.dsl_or_resource/0","type":"type"},{"doc":"Introspection functions for the `AshAuthentication.TokenResource` Ash\nextension.","ref":"AshAuthentication.TokenResource.Info.html","title":"AshAuthentication.TokenResource.Info","type":"module"},{"doc":"The name of the action used to get confirmation changes.","ref":"AshAuthentication.TokenResource.Info.html#token_confirmation_get_changes_action_name/1","title":"AshAuthentication.TokenResource.Info.token_confirmation_get_changes_action_name/1","type":"function"},{"doc":"The name of the action used to get confirmation changes.","ref":"AshAuthentication.TokenResource.Info.html#token_confirmation_get_changes_action_name!/1","title":"AshAuthentication.TokenResource.Info.token_confirmation_get_changes_action_name!/1","type":"function"},{"doc":"token.confirmation DSL options\n\nReturns a map containing the and any configured or default values.","ref":"AshAuthentication.TokenResource.Info.html#token_confirmation_options/1","title":"AshAuthentication.TokenResource.Info.token_confirmation_options/1","type":"function"},{"doc":"The name of the action used to store confirmation changes.","ref":"AshAuthentication.TokenResource.Info.html#token_confirmation_store_changes_action_name/1","title":"AshAuthentication.TokenResource.Info.token_confirmation_store_changes_action_name/1","type":"function"},{"doc":"The name of the action used to store confirmation changes.","ref":"AshAuthentication.TokenResource.Info.html#token_confirmation_store_changes_action_name!/1","title":"AshAuthentication.TokenResource.Info.token_confirmation_store_changes_action_name!/1","type":"function"},{"doc":"The Ash domain to use to access this resource.","ref":"AshAuthentication.TokenResource.Info.html#token_domain/1","title":"AshAuthentication.TokenResource.Info.token_domain/1","type":"function"},{"doc":"The Ash domain to use to access this resource.","ref":"AshAuthentication.TokenResource.Info.html#token_domain!/1","title":"AshAuthentication.TokenResource.Info.token_domain!/1","type":"function"},{"doc":"The name of the action used to remove expired tokens.","ref":"AshAuthentication.TokenResource.Info.html#token_expunge_expired_action_name/1","title":"AshAuthentication.TokenResource.Info.token_expunge_expired_action_name/1","type":"function"},{"doc":"The name of the action used to remove expired tokens.","ref":"AshAuthentication.TokenResource.Info.html#token_expunge_expired_action_name!/1","title":"AshAuthentication.TokenResource.Info.token_expunge_expired_action_name!/1","type":"function"},{"doc":"How often to scan this resource for records which have expired, and thus can be removed.","ref":"AshAuthentication.TokenResource.Info.html#token_expunge_interval/1","title":"AshAuthentication.TokenResource.Info.token_expunge_interval/1","type":"function"},{"doc":"How often to scan this resource for records which have expired, and thus can be removed.","ref":"AshAuthentication.TokenResource.Info.html#token_expunge_interval!/1","title":"AshAuthentication.TokenResource.Info.token_expunge_interval!/1","type":"function"},{"doc":"The name of the action used to retrieve tokens from the store, if `require_tokens_for_authentication?` is enabled in your authentication resource.","ref":"AshAuthentication.TokenResource.Info.html#token_get_token_action_name/1","title":"AshAuthentication.TokenResource.Info.token_get_token_action_name/1","type":"function"},{"doc":"The name of the action used to retrieve tokens from the store, if `require_tokens_for_authentication?` is enabled in your authentication resource.","ref":"AshAuthentication.TokenResource.Info.html#token_get_token_action_name!/1","title":"AshAuthentication.TokenResource.Info.token_get_token_action_name!/1","type":"function"},{"doc":"token DSL options\n\nReturns a map containing the and any configured or default values.","ref":"AshAuthentication.TokenResource.Info.html#token_options/1","title":"AshAuthentication.TokenResource.Info.token_options/1","type":"function"},{"doc":"The name of the action use to find all expired tokens.","ref":"AshAuthentication.TokenResource.Info.html#token_read_expired_action_name/1","title":"AshAuthentication.TokenResource.Info.token_read_expired_action_name/1","type":"function"},{"doc":"The name of the action use to find all expired tokens.","ref":"AshAuthentication.TokenResource.Info.html#token_read_expired_action_name!/1","title":"AshAuthentication.TokenResource.Info.token_read_expired_action_name!/1","type":"function"},{"doc":"The name of the action used to check if a token is revoked.","ref":"AshAuthentication.TokenResource.Info.html#token_revocation_is_revoked_action_name/1","title":"AshAuthentication.TokenResource.Info.token_revocation_is_revoked_action_name/1","type":"function"},{"doc":"The name of the action used to check if a token is revoked.","ref":"AshAuthentication.TokenResource.Info.html#token_revocation_is_revoked_action_name!/1","title":"AshAuthentication.TokenResource.Info.token_revocation_is_revoked_action_name!/1","type":"function"},{"doc":"token.revocation DSL options\n\nReturns a map containing the and any configured or default values.","ref":"AshAuthentication.TokenResource.Info.html#token_revocation_options/1","title":"AshAuthentication.TokenResource.Info.token_revocation_options/1","type":"function"},{"doc":"The name of the action used to revoke tokens.","ref":"AshAuthentication.TokenResource.Info.html#token_revocation_revoke_token_action_name/1","title":"AshAuthentication.TokenResource.Info.token_revocation_revoke_token_action_name/1","type":"function"},{"doc":"The name of the action used to revoke tokens.","ref":"AshAuthentication.TokenResource.Info.html#token_revocation_revoke_token_action_name!/1","title":"AshAuthentication.TokenResource.Info.token_revocation_revoke_token_action_name!/1","type":"function"},{"doc":"The name of the action to use to store a token, if `require_tokens_for_authentication?` is enabled in your authentication resource.","ref":"AshAuthentication.TokenResource.Info.html#token_store_token_action_name/1","title":"AshAuthentication.TokenResource.Info.token_store_token_action_name/1","type":"function"},{"doc":"The name of the action to use to store a token, if `require_tokens_for_authentication?` is enabled in your authentication resource.","ref":"AshAuthentication.TokenResource.Info.html#token_store_token_action_name!/1","title":"AshAuthentication.TokenResource.Info.token_store_token_action_name!/1","type":"function"},{"doc":"Introspection functions for the `AshAuthentication.UserIdentity` Ash\nextension.","ref":"AshAuthentication.UserIdentity.Info.html","title":"AshAuthentication.UserIdentity.Info","type":"module"},{"doc":"The name of the `access_token` attribute on this resource.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_access_token_attribute_name/1","title":"AshAuthentication.UserIdentity.Info.user_identity_access_token_attribute_name/1","type":"function"},{"doc":"The name of the `access_token` attribute on this resource.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_access_token_attribute_name!/1","title":"AshAuthentication.UserIdentity.Info.user_identity_access_token_attribute_name!/1","type":"function"},{"doc":"The name of the `access_token_expires_at` attribute on this resource.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_access_token_expires_at_attribute_name/1","title":"AshAuthentication.UserIdentity.Info.user_identity_access_token_expires_at_attribute_name/1","type":"function"},{"doc":"The name of the `access_token_expires_at` attribute on this resource.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_access_token_expires_at_attribute_name!/1","title":"AshAuthentication.UserIdentity.Info.user_identity_access_token_expires_at_attribute_name!/1","type":"function"},{"doc":"The name of the action used to destroy records.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_destroy_action_name/1","title":"AshAuthentication.UserIdentity.Info.user_identity_destroy_action_name/1","type":"function"},{"doc":"The name of the action used to destroy records.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_destroy_action_name!/1","title":"AshAuthentication.UserIdentity.Info.user_identity_destroy_action_name!/1","type":"function"},{"doc":"The Ash domain to use to access this resource.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_domain/1","title":"AshAuthentication.UserIdentity.Info.user_identity_domain/1","type":"function"},{"doc":"The Ash domain to use to access this resource.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_domain!/1","title":"AshAuthentication.UserIdentity.Info.user_identity_domain!/1","type":"function"},{"doc":"user_identity DSL options\n\nReturns a map containing the and any configured or default values.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_options/1","title":"AshAuthentication.UserIdentity.Info.user_identity_options/1","type":"function"},{"doc":"The name of the action used to query identities.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_read_action_name/1","title":"AshAuthentication.UserIdentity.Info.user_identity_read_action_name/1","type":"function"},{"doc":"The name of the action used to query identities.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_read_action_name!/1","title":"AshAuthentication.UserIdentity.Info.user_identity_read_action_name!/1","type":"function"},{"doc":"The name of the `refresh_token` attribute on this resource.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_refresh_token_attribute_name/1","title":"AshAuthentication.UserIdentity.Info.user_identity_refresh_token_attribute_name/1","type":"function"},{"doc":"The name of the `refresh_token` attribute on this resource.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_refresh_token_attribute_name!/1","title":"AshAuthentication.UserIdentity.Info.user_identity_refresh_token_attribute_name!/1","type":"function"},{"doc":"The name of the `strategy` attribute on this resource.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_strategy_attribute_name/1","title":"AshAuthentication.UserIdentity.Info.user_identity_strategy_attribute_name/1","type":"function"},{"doc":"The name of the `strategy` attribute on this resource.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_strategy_attribute_name!/1","title":"AshAuthentication.UserIdentity.Info.user_identity_strategy_attribute_name!/1","type":"function"},{"doc":"The name of the `uid` attribute on this resource.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_uid_attribute_name/1","title":"AshAuthentication.UserIdentity.Info.user_identity_uid_attribute_name/1","type":"function"},{"doc":"The name of the `uid` attribute on this resource.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_uid_attribute_name!/1","title":"AshAuthentication.UserIdentity.Info.user_identity_uid_attribute_name!/1","type":"function"},{"doc":"The name of the action used to create and update records.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_upsert_action_name/1","title":"AshAuthentication.UserIdentity.Info.user_identity_upsert_action_name/1","type":"function"},{"doc":"The name of the action used to create and update records.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_upsert_action_name!/1","title":"AshAuthentication.UserIdentity.Info.user_identity_upsert_action_name!/1","type":"function"},{"doc":"The name of the `user_id` attribute on this resource.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_user_id_attribute_name/1","title":"AshAuthentication.UserIdentity.Info.user_identity_user_id_attribute_name/1","type":"function"},{"doc":"The name of the `user_id` attribute on this resource.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_user_id_attribute_name!/1","title":"AshAuthentication.UserIdentity.Info.user_identity_user_id_attribute_name!/1","type":"function"},{"doc":"The name of the belongs-to relationship between identities and users.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_user_relationship_name/1","title":"AshAuthentication.UserIdentity.Info.user_identity_user_relationship_name/1","type":"function"},{"doc":"The name of the belongs-to relationship between identities and users.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_user_relationship_name!/1","title":"AshAuthentication.UserIdentity.Info.user_identity_user_relationship_name!/1","type":"function"},{"doc":"The user resource to which these identities belong.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_user_resource/1","title":"AshAuthentication.UserIdentity.Info.user_identity_user_resource/1","type":"function"},{"doc":"The user resource to which these identities belong.","ref":"AshAuthentication.UserIdentity.Info.html#user_identity_user_resource!/1","title":"AshAuthentication.UserIdentity.Info.user_identity_user_resource!/1","type":"function"},{"doc":"Allows you to debug authentication failures in development.\n\nSimply add `config :ash_authentication, debug_authentication_failures?: true`\nto your `dev.exs` and get fancy log messages when authentication fails.","ref":"AshAuthentication.Debug.html","title":"AshAuthentication.Debug","type":"module"},{"doc":"Has authentication debug logging been enabled?","ref":"AshAuthentication.Debug.html#enabled?/0","title":"AshAuthentication.Debug.enabled?/0","type":"function"},{"doc":"A module to implement retrieving of secrets.\n\nAllows you to implement secrets access via your method or choice at runtime.","ref":"AshAuthentication.Secret.html","title":"AshAuthentication.Secret","type":"behaviour"},{"doc":"```elixir\ndefmodule MyApp.GetSecret do\n  use AshAuthentication.Secret\n\n  def secret_for([:authentication, :strategies, :oauth2, :client_id], MyApp.User, _opts), do: Application.fetch_env(:my_app, :oauth_client_id)\n  def secret_for([:authentication, :strategies, :oauth2, :client_secret], MyApp.User, _opts), do: Application.fetch_env(:my_app, :oauth_client_secret)\nend\n\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  authentication do\n    strategies do\n      oauth2 do\n        client_id MyApp.GetSecret\n        client_secret MyApp.GetSecret\n      end\n    end\n  end\nend\n```\n\nYou can also implement it directly as a function:\n\n```elixir\ndefmodule MyApp.User do\n   use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  authentication do\n    strategies do\n      oauth2 do\n        client_id fn _secret, _resource ->\n          Application.fetch_env(:my_app, :oauth_client_id)\n        end\n      end\n    end\n  end\nend\n```","ref":"AshAuthentication.Secret.html#module-example","title":"Example - AshAuthentication.Secret","type":"behaviour"},{"doc":"Because you may wish to reuse this module for a number of different providers\nand resources, the first argument passed to the callback is the \"secret name\",\nit contains the \"path\" to the option being set.  The path is made up of a list\ncontaining the DSL path to the secret.","ref":"AshAuthentication.Secret.html#module-secret-name","title":"Secret name - AshAuthentication.Secret","type":"behaviour"},{"doc":"Secret retrieval callback.\n\nThis function will be called with the \"secret name\", see the module\ndocumentation for more info.","ref":"AshAuthentication.Secret.html#c:secret_for/3","title":"AshAuthentication.Secret.secret_for/3","type":"callback"},{"doc":"A module to implement sending of a token to a user.\n\nAllows you to glue sending of instructions to\n[swoosh](https://hex.pm/packages/swoosh),\n[ex_twilio](https://hex.pm/packages/ex_twilio) or whatever notification system\nis appropriate for your application.\n\nNote that the return value and any failures are ignored.  If you need retry\nlogic, etc, then you should implement it in your sending system.","ref":"AshAuthentication.Sender.html","title":"AshAuthentication.Sender","type":"behaviour"},{"doc":"Implementing as a module:\n\n```elixir\ndefmodule MyApp.PasswordResetSender do\n  use AshAuthentication.Sender\n  import Swoosh.Email\n\n  def send(user, reset_token, _opts) do\n    new()\n    |> to({user.name, user.email})\n    |> from({\"Doc Brown\", \"emmet@brown.inc\"})\n    |> subject(\"Password reset instructions\")\n    |> html_body(\"\"\"\n       Password reset instructions \n       \n        Hi #{user.name}, \n\n        Someone (maybe you) has requested a password reset for your account.\n        If you did not initiate this request then please ignore this email.\n       \n       \n        Click here to reset\n       \n    \"\"\")\n    |> MyApp.Mailer.deliver()\n  end\nend\n\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  authentication do\n    strategies do\n      password :password do\n        resettable do\n          sender MyApp.PasswordResetSender\n        end\n      end\n    end\n  end\nend\n```\n\nYou can also implement it directly as a function:\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  authentication do\n    strategies do\n      password :password do\n        resettable do\n          sender fn user, token ->\n            MyApp.Mailer.send_password_reset_email(user, token)\n          end\n        end\n      end\n    end\n  end\nend\n```","ref":"AshAuthentication.Sender.html#module-example","title":"Example - AshAuthentication.Sender","type":"behaviour"},{"doc":"Sending callback.\n\nThis function will be called with the user, the token and any options passed\nto the module in the DSL.","ref":"AshAuthentication.Sender.html#c:send/3","title":"AshAuthentication.Sender.send/3","type":"callback"},{"doc":"Starts and manages any processes required by AshAuthentication.\n\nAdd to your application supervisor:","ref":"AshAuthentication.Supervisor.html","title":"AshAuthentication.Supervisor","type":"module"},{"doc":"```elixir\ndefmodule MyApp.Application do\n  use Application\n\n  def start(_type, _args) do\n    children = [\n      {AshAuthentication.Supervisor, otp_app: :my_app}\n    ]\n\n    Supervisor.start_link(children, strategy: :one_for_one, name: MyApp.Supervisor)\n  end\nend\n```","ref":"AshAuthentication.Supervisor.html#module-example","title":"Example - AshAuthentication.Supervisor","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"AshAuthentication.Supervisor.html#child_spec/1","title":"AshAuthentication.Supervisor.child_spec/1","type":"function"},{"doc":"Generate an authentication plug.\n\nUse in your app by creating a new module called `AuthPlug` or similar:\n\n```elixir\ndefmodule MyAppWeb.AuthPlug do\n  use AshAuthentication.Plug, otp_app: :my_app\n\n  def handle_success(conn, _activity, user, _token) do\n    conn\n    |> store_in_session(user)\n    |> send_resp(200, \"Welcome back #{user.name}\")\n  end\n\n  def handle_failure(conn, _activity, reason) do\n    conn\n    |> send_resp(401, \"Better luck next time\")\n  end\nend\n```","ref":"AshAuthentication.Plug.html","title":"AshAuthentication.Plug","type":"behaviour"},{"doc":"In your Phoenix router you can add it:\n\n```elixir\nscope \"/auth\" do\n  pipe_through :browser\n  forward \"/\", MyAppWeb.AuthPlug\nend\n```\n\nIn order to load any authenticated users for either web or API users you can add the following to your router:\n\n```elixir\nimport MyAppWeb.AuthPlug\n\npipeline :session_users do\n  plug :load_from_session\nend\n\npipeline :bearer_users do\n  plug :load_from_bearer\nend\n\nscope \"/\", MyAppWeb do\n  pipe_through [:browser, :session_users]\n\n  live \"/\", PageLive, :home\nend\n\nscope \"/api\", MyAppWeb do\n  pipe_through [:api, :bearer_users]\n\n  get \"/\" ApiController, :index\nend\n```","ref":"AshAuthentication.Plug.html#module-using-in-phoenix","title":"Using in Phoenix - AshAuthentication.Plug","type":"behaviour"},{"doc":"```elixir\nuse Plug.Router\n\nforward \"/auth\", to: MyAppWeb.AuthPlug\n```\n\nNote that you will need to include a bunch of other plugs in the pipeline to\ndo useful things like session and query param fetching.","ref":"AshAuthentication.Plug.html#module-using-in-a-plug-application","title":"Using in a Plug application - AshAuthentication.Plug","type":"behaviour"},{"doc":"When there is any failure during authentication this callback is called.\n\nNote that this includes not just authentication failures but potentially\nroute-not-found errors also.\n\nThe default implementation simply returns a 401 status with the message\n\"Access denied\".  You almost definitely want to override this.","ref":"AshAuthentication.Plug.html#c:handle_failure/3","title":"AshAuthentication.Plug.handle_failure/3","type":"callback"},{"doc":"When authentication has been succesful, this callback will be called with the\nconn, the successful activity, the authenticated resource and a token.\n\nThis allows you to choose what action to take as appropriate for your\napplication.\n\nThe default implementation calls `store_in_session/2` and returns a simple\n\"Access granted\" message to the user.  You almost definitely want to override\nthis behaviour.","ref":"AshAuthentication.Plug.html#c:handle_success/4","title":"AshAuthentication.Plug.handle_success/4","type":"callback"},{"doc":"","ref":"AshAuthentication.Plug.html#t:activity/0","title":"AshAuthentication.Plug.activity/0","type":"type"},{"doc":"","ref":"AshAuthentication.Plug.html#t:token/0","title":"AshAuthentication.Plug.token/0","type":"type"},{"doc":"Authentication helpers for use in your router, etc.","ref":"AshAuthentication.Plug.Helpers.html","title":"AshAuthentication.Plug.Helpers","type":"module"},{"doc":"","ref":"AshAuthentication.Plug.Helpers.html#get_authentication_result/1","title":"AshAuthentication.Plug.Helpers.get_authentication_result/1","type":"function"},{"doc":"Given a list of subjects, turn as many as possible into users.\n\nOpts are forwarded to `AshAuthentication.subject_to_user/2`","ref":"AshAuthentication.Plug.Helpers.html#load_subjects/3","title":"AshAuthentication.Plug.Helpers.load_subjects/3","type":"function"},{"doc":"Validate authorization header(s).\n\nAssumes that your clients are sending a bearer-style authorization header with\nyour request.  If a valid bearer token is present then the subject is loaded\ninto the assigns under their subject name (with the prefix `current_`).\n\nIf the authentication token is required to be present in the database, it is\nloaded into the assigns using `current_#{subject_name}_token_record`\n\nIf there is no user present for a resource then the assign is set to `nil`.","ref":"AshAuthentication.Plug.Helpers.html#retrieve_from_bearer/2","title":"AshAuthentication.Plug.Helpers.retrieve_from_bearer/2","type":"function"},{"doc":"Attempt to retrieve all users from the connections' session.\n\nIterates through all configured authentication resources for `otp_app` and\nretrieves any users stored in the session, loads them and stores them in the\nassigns under their subject name (with the prefix `current_`).\n\nIf there is no user present for a resource then the assign is set to `nil`.","ref":"AshAuthentication.Plug.Helpers.html#retrieve_from_session/2","title":"AshAuthentication.Plug.Helpers.retrieve_from_session/2","type":"function"},{"doc":"Revoke all authorization header(s).\n\nAny bearer-style authorization headers will have their tokens revoked.","ref":"AshAuthentication.Plug.Helpers.html#revoke_bearer_tokens/2","title":"AshAuthentication.Plug.Helpers.revoke_bearer_tokens/2","type":"function"},{"doc":"Set a subject as the request actor.\n\nPresumes that you have already loaded your user resource(s) into the\nconnection's assigns.\n\nUses `Ash.PlugHelpers` to streamline integration with `AshGraphql` and\n`AshJsonApi`.","ref":"AshAuthentication.Plug.Helpers.html#set_actor/2","title":"AshAuthentication.Plug.Helpers.set_actor/2","type":"function"},{"doc":"Setting the actor for a AshGraphql API using `Plug.Router`.\n\n```elixir\ndefmodule MyApp.ApiRouter do\n  use Plug.Router\n  import MyApp.AuthPlug\n\n  plug :match\n\n  plug :retrieve_from_bearer\n  plug :set_actor, :user\n\n  plug :dispatch\n\n  forward \"/gql\",\n    to: Absinthe.Plug,\n    init_opts: [schema: MyApp.Schema]\nend\n```","ref":"AshAuthentication.Plug.Helpers.html#set_actor/2-examples","title":"Examples - AshAuthentication.Plug.Helpers.set_actor/2","type":"function"},{"doc":"Store result in private.\n\nThis is used by authentication plug handlers to store their result for passing\nback to the dispatcher.","ref":"AshAuthentication.Plug.Helpers.html#store_authentication_result/2","title":"AshAuthentication.Plug.Helpers.store_authentication_result/2","type":"function"},{"doc":"Store the user in the connections' session.","ref":"AshAuthentication.Plug.Helpers.html#store_in_session/2","title":"AshAuthentication.Plug.Helpers.store_in_session/2","type":"function"},{"doc":"This check is true if the context `private.ash_authentication?` is set to true.\n\nThis context will only ever be set in code that is called internally by\n`ash_authentication`, allowing you to create a bypass in your policies on your\nuser/user_token resources.\n\n```elixir\npolicies do\n  bypass AshAuthenticationInteraction do\n    authorize_if always()\n  end\nend\n```","ref":"AshAuthentication.Checks.AshAuthenticationInteraction.html","title":"AshAuthentication.Checks.AshAuthenticationInteraction","type":"module"},{"doc":"","ref":"AshAuthentication.Checks.AshAuthenticationInteraction.html#requires_original_data?/2","title":"AshAuthentication.Checks.AshAuthenticationInteraction.requires_original_data?/2","type":"function"},{"doc":"","ref":"AshAuthentication.Checks.AshAuthenticationInteraction.html#strict_check/3","title":"AshAuthentication.Checks.AshAuthenticationInteraction.strict_check/3","type":"function"},{"doc":"","ref":"AshAuthentication.Checks.AshAuthenticationInteraction.html#type/0","title":"AshAuthentication.Checks.AshAuthenticationInteraction.type/0","type":"function"},{"doc":"Given a successful registration or sign-in, generate a token.","ref":"AshAuthentication.GenerateTokenChange.html","title":"AshAuthentication.GenerateTokenChange","type":"module"},{"doc":"Set the hash based on the password input.\n\nUses the configured `AshAuthentication.HashProvider` to generate a hash of the\nuser's password input and store it in the changeset.\n\nYou can use this change in your actions where you want to change the user's\npassword.  If you're not using one of the actions generated by the password\nstrategy then you'll need to manually pass the strategy name in the changeset\ncontext.  Eg:\n\n```elixir\nChangeset.new(user, %{})\n|> Changeset.set_context(%{strategy_name: :password})\n|> Changeset.for_update(:update, params)\n|> Accounts.update()\n```\n\nor by adding it statically to your action definition:\n\n```elixir\nupdate :change_password do\n  change set_context(%{strategy_name: :password})\n  change AshAuthentication.Strategy.Password.HashPasswordChange\nend\n```\n\nor by adding it as an option to the change definition:\n\n```elixir\nupdate :change_password do\n  change {AshAuthentication.Strategy.Password.HashPasswordChange, strategy_name: :password}\nend\n```","ref":"AshAuthentication.Strategy.Password.HashPasswordChange.html","title":"AshAuthentication.Strategy.Password.HashPasswordChange","type":"module"},{"doc":"Validate that the password and password confirmation match.\n\nThis check is only performed when the `confirmation_required?` DSL option is\nset to `true`.\n\nYou can use this validation in your own actions where you want to validate\nthat the password and the password confirmation arguments match.  If you're\nnot using one of the actions generated by the password strategy then you'll\nneed to manually pass the strategy name in the changeset context.  Eg:\n\n```elixir\nChangeset.new(user, %{})\n|> Changeset.set_context(%{strategy_name: :password})\n|> Changeset.for_update(:change_password, params)\n|> Accounts.update()\n```\n\nor by adding it statically in your action definition:\n\n```elixir\nupdate :change_password do\n  change set_context(%{strategy_name: :password})\n  change AshAuthentication.Strategy.Password.HashPasswordChange\nend\n```","ref":"AshAuthentication.Strategy.Password.PasswordConfirmationValidation.html","title":"AshAuthentication.Strategy.Password.PasswordConfirmationValidation","type":"module"},{"doc":"Validates that the password and password confirmation fields contain\nequivalent values - if confirmation is required.","ref":"AshAuthentication.Strategy.Password.PasswordConfirmationValidation.html#validate/3","title":"AshAuthentication.Strategy.Password.PasswordConfirmationValidation.validate/3","type":"function"},{"doc":"A convenience validation that checks that the password argument against the\nhashed password stored in the record.\n\nYou can use this validation in your changes where you want the user to enter\ntheir current password before being allowed to make a change (eg in a password\nchange flow).","ref":"AshAuthentication.Strategy.Password.PasswordValidation.html","title":"AshAuthentication.Strategy.Password.PasswordValidation","type":"module"},{"doc":"You can provide these options either in the DSL options, or in the changeset\ncontext.\n\n  - `strategy_name` - the name of the authentication strategy to use.  Required.\n  - `password_argument` - the name of the argument to check for the current\n    password.  If missing this will default to the `password_field` value\n    configured on the strategy.","ref":"AshAuthentication.Strategy.Password.PasswordValidation.html#module-options","title":"Options: - AshAuthentication.Strategy.Password.PasswordValidation","type":"module"},{"doc":"```elixir\ndefmodule MyApp.Accounts.User do\n  # ...\n\n  actions do\n    update :change_password do\n      accept []\n      argument :current_password, :string, sensitive?: true, allow_nil?: false\n      argument :password, :string, sensitive?: true, allow_nil?: false\n      argument :password_confirmation, :string, sensitive?: true, allow_nil?: false\n\n      validate confirm(:password, :password_confirmation)\n      validate {AshAuthentication.Strategy.Password.PasswordValidation, strategy_name: :password, password_argument: :current_password}\n\n      change {AshAuthentication.Strategy.Password.HashPasswordChange, strategy_name: :password}\n    end\n  end\n\n  # ...\nend\n```","ref":"AshAuthentication.Strategy.Password.PasswordValidation.html#module-examples","title":"Examples - AshAuthentication.Strategy.Password.PasswordValidation","type":"module"},{"doc":"Common validations shared by several transformers.","ref":"AshAuthentication.Validations.html","title":"AshAuthentication.Validations","type":"module"},{"doc":"Find and return a named attribute in the DSL state.","ref":"AshAuthentication.Validations.html#find_attribute/2","title":"AshAuthentication.Validations.find_attribute/2","type":"function"},{"doc":"Build an attribute if not present.","ref":"AshAuthentication.Validations.html#maybe_build_attribute/3","title":"AshAuthentication.Validations.maybe_build_attribute/3","type":"function"},{"doc":"Find and return a persisted option in the DSL state.","ref":"AshAuthentication.Validations.html#persisted_option/2","title":"AshAuthentication.Validations.persisted_option/2","type":"function"},{"doc":"Ensure that the named module implements a specific behaviour.","ref":"AshAuthentication.Validations.html#validate_behaviour/2","title":"AshAuthentication.Validations.validate_behaviour/2","type":"function"},{"doc":"Validates that `extension` is present on the resource.","ref":"AshAuthentication.Validations.html#validate_extension/2","title":"AshAuthentication.Validations.validate_extension/2","type":"function"},{"doc":"Given a map validate that the provided field is one of the values provided.","ref":"AshAuthentication.Validations.html#validate_field_in_values/3","title":"AshAuthentication.Validations.validate_field_in_values/3","type":"function"},{"doc":"Given a map, validate that the provided field predicate returns true for the value.","ref":"AshAuthentication.Validations.html#validate_field_with/4","title":"AshAuthentication.Validations.validate_field_with/4","type":"function"},{"doc":"Validate that a \"secret\" field is configured correctly.","ref":"AshAuthentication.Validations.html#validate_secret/3","title":"AshAuthentication.Validations.validate_secret/3","type":"function"},{"doc":"Ensure that token generation is enabled for the resource.","ref":"AshAuthentication.Validations.html#validate_token_generation_enabled/2","title":"AshAuthentication.Validations.validate_token_generation_enabled/2","type":"function"},{"doc":"Validation helpers for Resource actions.","ref":"AshAuthentication.Validations.Action.html","title":"AshAuthentication.Validations.Action","type":"module"},{"doc":"Validate an action's argument has an option set to one of the provided values.","ref":"AshAuthentication.Validations.Action.html#validate_action_argument_option/4","title":"AshAuthentication.Validations.Action.validate_action_argument_option/4","type":"function"},{"doc":"Validate that a named action actually exists.","ref":"AshAuthentication.Validations.Action.html#validate_action_exists/2","title":"AshAuthentication.Validations.Action.validate_action_exists/2","type":"function"},{"doc":"Validate the presence of an argument on an action.","ref":"AshAuthentication.Validations.Action.html#validate_action_has_argument/2","title":"AshAuthentication.Validations.Action.validate_action_has_argument/2","type":"function"},{"doc":"Validate the presence of the named change module on an action.","ref":"AshAuthentication.Validations.Action.html#validate_action_has_change/2","title":"AshAuthentication.Validations.Action.validate_action_has_change/2","type":"function"},{"doc":"Validate the presence of the named manual module on an action.","ref":"AshAuthentication.Validations.Action.html#validate_action_has_manual/2","title":"AshAuthentication.Validations.Action.validate_action_has_manual/2","type":"function"},{"doc":"Validate the presence of the named preparation module on an action.","ref":"AshAuthentication.Validations.Action.html#validate_action_has_preparation/2","title":"AshAuthentication.Validations.Action.validate_action_has_preparation/2","type":"function"},{"doc":"Validate the presence of the named validation module on an action.","ref":"AshAuthentication.Validations.Action.html#validate_action_has_validation/2","title":"AshAuthentication.Validations.Action.validate_action_has_validation/2","type":"function"},{"doc":"Validate the action has the provided option.","ref":"AshAuthentication.Validations.Action.html#validate_action_option/3","title":"AshAuthentication.Validations.Action.validate_action_option/3","type":"function"},{"doc":"Validation helpers for Resource attributes.","ref":"AshAuthentication.Validations.Attribute.html","title":"AshAuthentication.Validations.Attribute","type":"module"},{"doc":"Validate that an option is set correctly on an attribute","ref":"AshAuthentication.Validations.Attribute.html#validate_attribute_option/4","title":"AshAuthentication.Validations.Attribute.validate_attribute_option/4","type":"function"},{"doc":"Validate than an attribute has a unique identity applied.","ref":"AshAuthentication.Validations.Attribute.html#validate_attribute_unique_constraint/3","title":"AshAuthentication.Validations.Attribute.validate_attribute_unique_constraint/3","type":"function"},{"doc":"A generic, authentication failed error.","ref":"AshAuthentication.Errors.AuthenticationFailed.html","title":"AshAuthentication.Errors.AuthenticationFailed","type":"exception"},{"doc":"","ref":"AshAuthentication.Errors.AuthenticationFailed.html#exception/0","title":"AshAuthentication.Errors.AuthenticationFailed.exception/0","type":"function"},{"doc":"","ref":"AshAuthentication.Errors.AuthenticationFailed.html#t:t/0","title":"AshAuthentication.Errors.AuthenticationFailed.t/0","type":"type"},{"doc":"An invalid token was presented.","ref":"AshAuthentication.Errors.InvalidToken.html","title":"AshAuthentication.Errors.InvalidToken","type":"exception"},{"doc":"","ref":"AshAuthentication.Errors.InvalidToken.html#exception/0","title":"AshAuthentication.Errors.InvalidToken.exception/0","type":"function"},{"doc":"A secret is now missing.","ref":"AshAuthentication.Errors.MissingSecret.html","title":"AshAuthentication.Errors.MissingSecret","type":"exception"},{"doc":"","ref":"AshAuthentication.Errors.MissingSecret.html#exception/0","title":"AshAuthentication.Errors.MissingSecret.exception/0","type":"function"},{"doc":"Actions for the confirmation add-on.\n\nProvides the code interface for working with resources via confirmation.","ref":"AshAuthentication.AddOn.Confirmation.Actions.html","title":"AshAuthentication.AddOn.Confirmation.Actions","type":"module"},{"doc":"Attempt to confirm a user.","ref":"AshAuthentication.AddOn.Confirmation.Actions.html#confirm/3","title":"AshAuthentication.AddOn.Confirmation.Actions.confirm/3","type":"function"},{"doc":"Get changes from the tokens resource for application.","ref":"AshAuthentication.AddOn.Confirmation.Actions.html#get_changes/3","title":"AshAuthentication.AddOn.Confirmation.Actions.get_changes/3","type":"function"},{"doc":"Store changes in the tokens resource for later re-use.","ref":"AshAuthentication.AddOn.Confirmation.Actions.html#store_changes/4","title":"AshAuthentication.AddOn.Confirmation.Actions.store_changes/4","type":"function"},{"doc":"Mod docs","ref":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.html","title":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation","type":"module"},{"doc":"Hello 4","ref":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.html#confirmation/2","title":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.confirmation/2","type":"macro"},{"doc":"Mod Docs","ref":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.html","title":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options","type":"module"},{"doc":"Hello 2","ref":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.html#confirm_action_name/1","title":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.confirm_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.html#confirm_on_create?/1","title":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.confirm_on_create?/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.html#confirm_on_update?/1","title":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.confirm_on_update?/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.html#confirmed_at_field/1","title":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.confirmed_at_field/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.html#inhibit_updates?/1","title":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.inhibit_updates?/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.html#monitor_fields/1","title":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.monitor_fields/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.html#name/1","title":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.html#sender/1","title":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.sender/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.html#token_lifetime/1","title":"AshAuthentication.AddOn.Confirmation.Authentication.AddOns.Confirmation.Options.token_lifetime/1","type":"macro"},{"doc":"Performs a change based on the contents of a confirmation token.","ref":"AshAuthentication.AddOn.Confirmation.ConfirmChange.html","title":"AshAuthentication.AddOn.Confirmation.ConfirmChange","type":"module"},{"doc":"Triggers a confirmation flow when one of the monitored fields is changed.\n\nOptionally inhibits changes to monitored fields on update.\n\nYou can use this change in your actions where you want to send the user a\nconfirmation (or inhibit changes after confirmation).  If you're not using one\nof the actions generated by the confirmation add-on then you'll need to\nmanually pass the strategy name in the changeset context. Eg:\n\n```elixir\nChangeset.new(user, %{})\n|> Changeset.set_context(%{strategy_name: :confirm})\n|> Changeset.for_update(:update, params)\n|> Accounts.update()\n```\n\nor by adding it statically to your action definition:\n\n```elixir\nupdate :change_email do\n  change set_context(%{strategy_name: :confirm})\n  change AshAuthentication.AddOn.Confirmation.ConfirmationHookChange\nend\n```\n\nor by adding it as an option to the change definition:\n\n```elixir\nupdate :change_email do\n  change {AshAuthentication.AddOn.Confirmation.ConfirmationHookChange, strategy_name: :confirm}\nend\n```","ref":"AshAuthentication.AddOn.Confirmation.ConfirmationHookChange.html","title":"AshAuthentication.AddOn.Confirmation.ConfirmationHookChange","type":"module"},{"doc":"Defines the Spark DSL entity for this add on.","ref":"AshAuthentication.AddOn.Confirmation.Dsl.html","title":"AshAuthentication.AddOn.Confirmation.Dsl","type":"module"},{"doc":"Handlers for incoming OAuth2 HTTP requests.","ref":"AshAuthentication.AddOn.Confirmation.Plug.html","title":"AshAuthentication.AddOn.Confirmation.Plug","type":"module"},{"doc":"Attempt to perform a confirmation.","ref":"AshAuthentication.AddOn.Confirmation.Plug.html#confirm/2","title":"AshAuthentication.AddOn.Confirmation.Plug.confirm/2","type":"function"},{"doc":"DSL transformer for confirmation add-on.\n\nEnsures that there is only ever one present and that it is correctly\nconfigured.","ref":"AshAuthentication.AddOn.Confirmation.Transformer.html","title":"AshAuthentication.AddOn.Confirmation.Transformer","type":"module"},{"doc":"DSL verifier for confirmation add-on.","ref":"AshAuthentication.AddOn.Confirmation.Verifier.html","title":"AshAuthentication.AddOn.Confirmation.Verifier","type":"module"},{"doc":"MOD DOCS","ref":"AshAuthentication.AddOns.html","title":"AshAuthentication.AddOns","type":"module"},{"doc":"Hello!","ref":"AshAuthentication.AddOns.html#add_ons/1","title":"AshAuthentication.AddOns.add_ons/1","type":"macro"},{"doc":"Mod Docs","ref":"AshAuthentication.Authentication.Options.html","title":"AshAuthentication.Authentication.Options","type":"module"},{"doc":"Hello 3","ref":"AshAuthentication.Authentication.Options.html#domain/1","title":"AshAuthentication.Authentication.Options.domain/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.Authentication.Options.html#get_by_subject_action_name/1","title":"AshAuthentication.Authentication.Options.get_by_subject_action_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.Authentication.Options.html#select_for_senders/1","title":"AshAuthentication.Authentication.Options.select_for_senders/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.Authentication.Options.html#subject_name/1","title":"AshAuthentication.Authentication.Options.subject_name/1","type":"macro"},{"doc":"Implementation details JWT generation and validation.\n\nProvides functions to generate token configuration at runtime, based on the\nresource being signed for and for verifying claims and checking for token\nrevocation.","ref":"AshAuthentication.Jwt.Config.html","title":"AshAuthentication.Jwt.Config","type":"module"},{"doc":"Generate the default claims for a specified resource.","ref":"AshAuthentication.Jwt.Config.html#default_claims/2","title":"AshAuthentication.Jwt.Config.default_claims/2","type":"function"},{"doc":"The generator function used to generate the \"aud\" claim.\n\nIt generates an Elixir-style `~>` version requirement against the current\nmajor and minor version numbers of AshAuthentication.","ref":"AshAuthentication.Jwt.Config.html#generate_audience/1","title":"AshAuthentication.Jwt.Config.generate_audience/1","type":"function"},{"doc":"The generator function used to generate the \"iss\" claim.","ref":"AshAuthentication.Jwt.Config.html#generate_issuer/1","title":"AshAuthentication.Jwt.Config.generate_issuer/1","type":"function"},{"doc":"The signer used to sign the token on a per-resource basis.","ref":"AshAuthentication.Jwt.Config.html#token_signer/2","title":"AshAuthentication.Jwt.Config.token_signer/2","type":"function"},{"doc":"The validation function used to validate the \"aud\" claim.\n\nUses `Version.match?/2` to validate the provided claim against the current\nversion.  The use of `~>` means that tokens generated by versions of\nAshAuthentication with the the same major version and at least the same minor\nversion should be compatible.","ref":"AshAuthentication.Jwt.Config.html#validate_audience/4","title":"AshAuthentication.Jwt.Config.validate_audience/4","type":"function"},{"doc":"The validation function used to validate the \"iss\" claim.\n\nIt simply verifies that the claim starts with `\"AshAuthentication\"`","ref":"AshAuthentication.Jwt.Config.html#validate_issuer/3","title":"AshAuthentication.Jwt.Config.validate_issuer/3","type":"function"},{"doc":"The validation function used to the validate the \"jti\" claim.\n\nThis is done by checking that the token is valid with the token revocation\nresource.  Requires that the subject's resource configuration be passed as the\nvalidation context.  This is automatically done by calling `Jwt.verify/2`.","ref":"AshAuthentication.Jwt.Config.html#validate_jti/4","title":"AshAuthentication.Jwt.Config.validate_jti/4","type":"function"},{"doc":"Provides the default implementations of `handle_success/3` and\n`handle_failure/2` used in generated authentication plugs.","ref":"AshAuthentication.Plug.Defaults.html","title":"AshAuthentication.Plug.Defaults","type":"module"},{"doc":"The default implementation of `handle_failure/1`.\n\nSends a very basic 401 response.","ref":"AshAuthentication.Plug.Defaults.html#handle_failure/3","title":"AshAuthentication.Plug.Defaults.handle_failure/3","type":"function"},{"doc":"The default implementation of `handle_success/3`.\n\nCalls `AshAuthentication.Plug.Helpers.store_in_session/2` then sends a\nbasic 200 response.","ref":"AshAuthentication.Plug.Defaults.html#handle_success/4","title":"AshAuthentication.Plug.Defaults.handle_success/4","type":"function"},{"doc":"Route requests and callbacks to the correct provider plugs.","ref":"AshAuthentication.Plug.Dispatcher.html","title":"AshAuthentication.Plug.Dispatcher","type":"module"},{"doc":"Send the request to the correct strategy and then return the result.","ref":"AshAuthentication.Plug.Dispatcher.html#call/2","title":"AshAuthentication.Plug.Dispatcher.call/2","type":"function"},{"doc":"","ref":"AshAuthentication.Plug.Dispatcher.html#t:config/0","title":"AshAuthentication.Plug.Dispatcher.config/0","type":"type"},{"doc":"Generators used within `use AshAuthentication.Plug`.","ref":"AshAuthentication.Plug.Macros.html","title":"AshAuthentication.Plug.Macros","type":"module"},{"doc":"Generates the `load_from_bearer/2` plug with the `otp_app` prefilled.","ref":"AshAuthentication.Plug.Macros.html#define_load_from_bearer/1","title":"AshAuthentication.Plug.Macros.define_load_from_bearer/1","type":"macro"},{"doc":"Generates the `load_from_session/2` plug with the `otp_app` prefilled.","ref":"AshAuthentication.Plug.Macros.html#define_load_from_session/1","title":"AshAuthentication.Plug.Macros.define_load_from_session/1","type":"macro"},{"doc":"Generates the `revoke_bearer_tokens/2` plug with the `otp_app` prefilled.","ref":"AshAuthentication.Plug.Macros.html#define_revoke_bearer_tokens/1","title":"AshAuthentication.Plug.Macros.define_revoke_bearer_tokens/1","type":"macro"},{"doc":"Generates the subject name validation code for the auth plug.","ref":"AshAuthentication.Plug.Macros.html#validate_subject_name_uniqueness/1","title":"AshAuthentication.Plug.Macros.validate_subject_name_uniqueness/1","type":"macro"},{"doc":"Dynamically generates the authentication router for the authentication\nrequests and callbacks.\n\nUsed internally by `AshAuthentication.Plug`.","ref":"AshAuthentication.Plug.Router.html","title":"AshAuthentication.Plug.Router","type":"module"},{"doc":"Implements `AshAuthentication.Secret` for functions that are provided to the\nDSL instead of modules.","ref":"AshAuthentication.SecretFunction.html","title":"AshAuthentication.SecretFunction","type":"module"},{"doc":"Implements `AshAuthentication.Sender` for functions that are provided to the\nDSL instead of modules.","ref":"AshAuthentication.SenderFunction.html","title":"AshAuthentication.SenderFunction","type":"module"},{"doc":"MOD DOCS","ref":"AshAuthentication.Strategies.html","title":"AshAuthentication.Strategies","type":"module"},{"doc":"Hello!","ref":"AshAuthentication.Strategies.html#strategies/1","title":"AshAuthentication.Strategies.strategies/1","type":"macro"},{"doc":"Strategy for authenticating using [Apple Sign In](https://developer.apple.com/sign-in-with-apple/)\n\nThis strategy builds on-top of `AshAuthentication.Strategy.Oidc` and\n[`assent`](https://hex.pm/packages/assent).\n\nIn order to use Apple Sign In you need to provide the following minimum configuration:\n\n  - `client_id`\n  - `team_id`\n  - `private_key_id`\n  - `private_key_path`\n  - `redirect_uri`","ref":"AshAuthentication.Strategy.Apple.html","title":"AshAuthentication.Strategy.Apple","type":"module"},{"doc":"- The [Apple Sign In Documentation](https://developer.apple.com/documentation/sign_in_with_apple).\n- The [OIDC documentation](`AshAuthentication.Strategy.Oidc`)","ref":"AshAuthentication.Strategy.Apple.html#module-more-documentation","title":"More documentation: - AshAuthentication.Strategy.Apple","type":"module"},{"doc":"","ref":"AshAuthentication.Strategy.Apple.html#transform/2","title":"AshAuthentication.Strategy.Apple.transform/2","type":"function"},{"doc":"","ref":"AshAuthentication.Strategy.Apple.html#verify/2","title":"AshAuthentication.Strategy.Apple.verify/2","type":"function"},{"doc":"Mod docs","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.html","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple","type":"module"},{"doc":"Hello 4","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.html#apple/2","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.apple/2","type":"macro"},{"doc":"Mod Docs","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options","type":"module"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#auth_method/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.auth_method/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#authorization_params/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.authorization_params/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#base_url/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.base_url/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#client_authentication_method/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.client_authentication_method/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#client_id/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.client_id/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#client_secret/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.client_secret/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#icon/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.icon/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#id_token_signed_response_alg/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.id_token_signed_response_alg/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#id_token_ttl_seconds/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.id_token_ttl_seconds/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#identity_relationship_name/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.identity_relationship_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#identity_relationship_user_id_attribute/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.identity_relationship_user_id_attribute/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#identity_resource/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.identity_resource/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#name/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#nonce/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.nonce/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#openid_configuration/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.openid_configuration/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#openid_configuration_uri/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.openid_configuration_uri/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#private_key/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.private_key/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#private_key_id/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.private_key_id/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#private_key_path/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.private_key_path/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#redirect_uri/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.redirect_uri/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#register_action_name/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.register_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#registration_enabled?/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.registration_enabled?/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#sign_in_action_name/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.sign_in_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#site/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.site/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#team_id/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.team_id/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.html#trusted_audiences/1","title":"AshAuthentication.Strategy.Apple.Authentication.Strategies.Apple.Options.trusted_audiences/1","type":"macro"},{"doc":"DSL verifier for Apple strategy.","ref":"AshAuthentication.Strategy.Apple.Verifier.html","title":"AshAuthentication.Strategy.Apple.Verifier","type":"module"},{"doc":"Mod docs","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.html","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0","type":"module"},{"doc":"Hello 4","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.html#auth0/2","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.auth0/2","type":"macro"},{"doc":"Mod Docs","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options","type":"module"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#auth_method/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.auth_method/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#authorization_params/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.authorization_params/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#authorize_url/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.authorize_url/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#base_url/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.base_url/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#client_id/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.client_id/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#client_secret/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.client_secret/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#icon/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.icon/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#identity_relationship_name/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.identity_relationship_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#identity_relationship_user_id_attribute/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.identity_relationship_user_id_attribute/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#identity_resource/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.identity_resource/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#name/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#private_key/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.private_key/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#redirect_uri/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.redirect_uri/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#register_action_name/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.register_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#registration_enabled?/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.registration_enabled?/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#sign_in_action_name/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.sign_in_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#site/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.site/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#token_url/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.token_url/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#trusted_audiences/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.trusted_audiences/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.html#user_url/1","title":"AshAuthentication.Strategy.Auth0.Authentication.Strategies.Auth0.Options.user_url/1","type":"macro"},{"doc":"Helpers for use within custom strategies.","ref":"AshAuthentication.Strategy.Custom.Helpers.html","title":"AshAuthentication.Strategy.Custom.Helpers","type":"module"},{"doc":"Update the add-on in the DSL state by name.\n\nThis helper should only be used within transformers.","ref":"AshAuthentication.Strategy.Custom.Helpers.html#put_add_on/2","title":"AshAuthentication.Strategy.Custom.Helpers.put_add_on/2","type":"function"},{"doc":"Update the strategy in the DSL state by name.\n\nThis helper should only be used within transformers.","ref":"AshAuthentication.Strategy.Custom.Helpers.html#put_strategy/2","title":"AshAuthentication.Strategy.Custom.Helpers.put_strategy/2","type":"function"},{"doc":"If there's any chance that an implementor may try and use actions genrated by\nyour strategy programatically then you should register your actions with Ash\nAuthentication so that it can find the appropriate strategy when needed.\n\nThe strategy can be retrieved again by calling\n`AshAuthentication.Info.strategy_for_action/2`.\n\nThis helper should only be used within transformers.","ref":"AshAuthentication.Strategy.Custom.Helpers.html#register_strategy_actions/3","title":"AshAuthentication.Strategy.Custom.Helpers.register_strategy_actions/3","type":"function"},{"doc":"Transformer used by custom strategies.\n\nIt delegates transformation passes to the individual strategies.","ref":"AshAuthentication.Strategy.Custom.Transformer.html","title":"AshAuthentication.Strategy.Custom.Transformer","type":"module"},{"doc":"","ref":"AshAuthentication.Strategy.Custom.Transformer.html#after_compile?/0","title":"AshAuthentication.Strategy.Custom.Transformer.after_compile?/0","type":"function"},{"doc":"Verifier used by custom strategies.\n\nIt delegates verification passes to the individual strategies.","ref":"AshAuthentication.Strategy.Custom.Verifier.html","title":"AshAuthentication.Strategy.Custom.Verifier","type":"module"},{"doc":"Mod docs","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.html","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github","type":"module"},{"doc":"Hello 4","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.html#github/2","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.github/2","type":"macro"},{"doc":"Mod Docs","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options","type":"module"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#auth_method/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.auth_method/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#authorization_params/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.authorization_params/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#authorize_url/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.authorize_url/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#base_url/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.base_url/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#client_id/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.client_id/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#client_secret/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.client_secret/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#icon/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.icon/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#identity_relationship_name/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.identity_relationship_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#identity_relationship_user_id_attribute/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.identity_relationship_user_id_attribute/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#identity_resource/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.identity_resource/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#name/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#private_key/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.private_key/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#redirect_uri/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.redirect_uri/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#register_action_name/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.register_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#registration_enabled?/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.registration_enabled?/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#sign_in_action_name/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.sign_in_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#site/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.site/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#token_url/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.token_url/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#trusted_audiences/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.trusted_audiences/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.html#user_url/1","title":"AshAuthentication.Strategy.Github.Authentication.Strategies.Github.Options.user_url/1","type":"macro"},{"doc":"Mod docs","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.html","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google","type":"module"},{"doc":"Hello 4","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.html#google/2","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.google/2","type":"macro"},{"doc":"Mod Docs","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options","type":"module"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#auth_method/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.auth_method/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#authorization_params/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.authorization_params/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#authorize_url/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.authorize_url/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#base_url/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.base_url/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#client_id/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.client_id/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#client_secret/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.client_secret/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#icon/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.icon/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#identity_relationship_name/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.identity_relationship_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#identity_relationship_user_id_attribute/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.identity_relationship_user_id_attribute/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#identity_resource/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.identity_resource/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#name/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#private_key/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.private_key/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#redirect_uri/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.redirect_uri/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#register_action_name/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.register_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#registration_enabled?/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.registration_enabled?/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#sign_in_action_name/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.sign_in_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#site/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.site/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#token_url/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.token_url/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#trusted_audiences/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.trusted_audiences/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.html#user_url/1","title":"AshAuthentication.Strategy.Google.Authentication.Strategies.Google.Options.user_url/1","type":"macro"},{"doc":"Actions for the magic link strategy.\n\nProvides the code interface for working with user resources for providing\nmagic links.","ref":"AshAuthentication.Strategy.MagicLink.Actions.html","title":"AshAuthentication.Strategy.MagicLink.Actions","type":"module"},{"doc":"Request a magic link for a user.","ref":"AshAuthentication.Strategy.MagicLink.Actions.html#request/3","title":"AshAuthentication.Strategy.MagicLink.Actions.request/3","type":"function"},{"doc":"Attempt to sign a user in via magic link.","ref":"AshAuthentication.Strategy.MagicLink.Actions.html#sign_in/3","title":"AshAuthentication.Strategy.MagicLink.Actions.sign_in/3","type":"function"},{"doc":"Mod docs","ref":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.html","title":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink","type":"module"},{"doc":"Hello 4","ref":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.html#magic_link/2","title":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.magic_link/2","type":"macro"},{"doc":"Mod Docs","ref":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.html","title":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options","type":"module"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.html#identity_field/1","title":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.identity_field/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.html#name/1","title":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.html#request_action_name/1","title":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.request_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.html#sender/1","title":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.sender/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.html#sign_in_action_name/1","title":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.sign_in_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.html#single_use_token?/1","title":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.single_use_token?/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.html#token_lifetime/1","title":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.token_lifetime/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.html#token_param_name/1","title":"AshAuthentication.Strategy.MagicLink.Authentication.Strategies.MagicLink.Options.token_param_name/1","type":"macro"},{"doc":"Plugs for the magic link strategy.\n\nHandles requests and sign-ins.","ref":"AshAuthentication.Strategy.MagicLink.Plug.html","title":"AshAuthentication.Strategy.MagicLink.Plug","type":"module"},{"doc":"Handle a request for a magic link.\n\nRetrieves form parameters from nested within the subject name, eg:\n\n```\n%{\n  \"user\" => %{\n    \"email\" => \"marty@mcfly.me\"\n  }\n}\n```","ref":"AshAuthentication.Strategy.MagicLink.Plug.html#request/2","title":"AshAuthentication.Strategy.MagicLink.Plug.request/2","type":"function"},{"doc":"Sign in via magic link.","ref":"AshAuthentication.Strategy.MagicLink.Plug.html#sign_in/2","title":"AshAuthentication.Strategy.MagicLink.Plug.sign_in/2","type":"function"},{"doc":"Prepare a query for a magic link request.\n\nThis preparation performs three jobs, one before the query executes and two\nafter:\n1. it constraints the query to match the identity field passed to the action.\n2. if there is a user returned by the query, then\n  a. generate a magic link token and\n  b. publish a notification.\n\nAlways returns an empty result.","ref":"AshAuthentication.Strategy.MagicLink.RequestPreparation.html","title":"AshAuthentication.Strategy.MagicLink.RequestPreparation","type":"module"},{"doc":"","ref":"AshAuthentication.Strategy.MagicLink.RequestPreparation.html#init/1","title":"AshAuthentication.Strategy.MagicLink.RequestPreparation.init/1","type":"function"},{"doc":"Prepare a query for sign in.","ref":"AshAuthentication.Strategy.MagicLink.SignInPreparation.html","title":"AshAuthentication.Strategy.MagicLink.SignInPreparation","type":"module"},{"doc":"","ref":"AshAuthentication.Strategy.MagicLink.SignInPreparation.html#init/1","title":"AshAuthentication.Strategy.MagicLink.SignInPreparation.init/1","type":"function"},{"doc":"DSL transformer for magic links.","ref":"AshAuthentication.Strategy.MagicLink.Transformer.html","title":"AshAuthentication.Strategy.MagicLink.Transformer","type":"module"},{"doc":"DSL verifier for magic links.","ref":"AshAuthentication.Strategy.MagicLink.Verifier.html","title":"AshAuthentication.Strategy.MagicLink.Verifier","type":"module"},{"doc":"Actions for the oauth2 strategy.\n\nProvides the code interface for working with resources via an OAuth2 strategy.","ref":"AshAuthentication.Strategy.OAuth2.Actions.html","title":"AshAuthentication.Strategy.OAuth2.Actions","type":"module"},{"doc":"Attempt to register a new user.","ref":"AshAuthentication.Strategy.OAuth2.Actions.html#register/3","title":"AshAuthentication.Strategy.OAuth2.Actions.register/3","type":"function"},{"doc":"Attempt to sign in a user.","ref":"AshAuthentication.Strategy.OAuth2.Actions.html#sign_in/3","title":"AshAuthentication.Strategy.OAuth2.Actions.sign_in/3","type":"function"},{"doc":"Mod docs","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.html","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2","type":"module"},{"doc":"Hello 4","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.html#oauth2/2","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.oauth2/2","type":"macro"},{"doc":"Mod Docs","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options","type":"module"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#auth_method/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.auth_method/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#authorization_params/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.authorization_params/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#authorize_url/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.authorize_url/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#base_url/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.base_url/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#client_id/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.client_id/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#client_secret/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.client_secret/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#icon/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.icon/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#identity_relationship_name/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.identity_relationship_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#identity_relationship_user_id_attribute/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.identity_relationship_user_id_attribute/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#identity_resource/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.identity_resource/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#name/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#private_key/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.private_key/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#redirect_uri/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.redirect_uri/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#register_action_name/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.register_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#registration_enabled?/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.registration_enabled?/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#sign_in_action_name/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.sign_in_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#site/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.site/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#token_url/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.token_url/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#trusted_audiences/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.trusted_audiences/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.html#user_url/1","title":"AshAuthentication.Strategy.OAuth2.Authentication.Strategies.Oauth2.Options.user_url/1","type":"macro"},{"doc":"Defines the Spark DSL entity for this strategy.","ref":"AshAuthentication.Strategy.OAuth2.Dsl.html","title":"AshAuthentication.Strategy.OAuth2.Dsl","type":"module"},{"doc":"Updates the identity resource when a user is registered.","ref":"AshAuthentication.Strategy.OAuth2.IdentityChange.html","title":"AshAuthentication.Strategy.OAuth2.IdentityChange","type":"module"},{"doc":"Handlers for incoming OAuth2 HTTP requests.","ref":"AshAuthentication.Strategy.OAuth2.Plug.html","title":"AshAuthentication.Strategy.OAuth2.Plug","type":"module"},{"doc":"Perform the callback phase of OAuth2.\n\nResponds to a user being redirected back from the remote authentication\nprovider, and validates the passed options, ultimately registering or\nsigning-in a user if the authentication was successful.","ref":"AshAuthentication.Strategy.OAuth2.Plug.html#callback/2","title":"AshAuthentication.Strategy.OAuth2.Plug.callback/2","type":"function"},{"doc":"Perform the request phase of OAuth2.\n\nBuilds a redirection URL based on the provider configuration and redirects the\nuser to that endpoint.","ref":"AshAuthentication.Strategy.OAuth2.Plug.html#request/2","title":"AshAuthentication.Strategy.OAuth2.Plug.request/2","type":"function"},{"doc":"Prepare a query for sign in\n\nPerforms three main tasks:\n\n  1. Ensures that there is only one matching user record returned, otherwise\n     returns an authentication failed error.\n  2. Generates an access token if token generation is enabled.\n  3. Updates the user identity resource, if one is enabled.","ref":"AshAuthentication.Strategy.OAuth2.SignInPreparation.html","title":"AshAuthentication.Strategy.OAuth2.SignInPreparation","type":"module"},{"doc":"","ref":"AshAuthentication.Strategy.OAuth2.SignInPreparation.html#init/1","title":"AshAuthentication.Strategy.OAuth2.SignInPreparation.init/1","type":"function"},{"doc":"DSL transformer for oauth2 strategies.\n\nIterates through any oauth2 strategies and ensures that all the correct\nactions and settings are in place.","ref":"AshAuthentication.Strategy.OAuth2.Transformer.html","title":"AshAuthentication.Strategy.OAuth2.Transformer","type":"module"},{"doc":"DSL verifier for oauth2 strategies.","ref":"AshAuthentication.Strategy.OAuth2.Verifier.html","title":"AshAuthentication.Strategy.OAuth2.Verifier","type":"module"},{"doc":"Mod docs","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.html","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc","type":"module"},{"doc":"Hello 4","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.html#oidc/2","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.oidc/2","type":"macro"},{"doc":"Mod Docs","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options","type":"module"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#auth_method/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.auth_method/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#authorization_params/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.authorization_params/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#base_url/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.base_url/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#client_authentication_method/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.client_authentication_method/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#client_id/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.client_id/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#client_secret/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.client_secret/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#icon/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.icon/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#id_token_signed_response_alg/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.id_token_signed_response_alg/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#id_token_ttl_seconds/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.id_token_ttl_seconds/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#identity_relationship_name/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.identity_relationship_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#identity_relationship_user_id_attribute/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.identity_relationship_user_id_attribute/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#identity_resource/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.identity_resource/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#name/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#nonce/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.nonce/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#openid_configuration/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.openid_configuration/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#openid_configuration_uri/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.openid_configuration_uri/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#private_key/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.private_key/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#redirect_uri/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.redirect_uri/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#register_action_name/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.register_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#registration_enabled?/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.registration_enabled?/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#sign_in_action_name/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.sign_in_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#site/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.site/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.html#trusted_audiences/1","title":"AshAuthentication.Strategy.Oidc.Authentication.Strategies.Oidc.Options.trusted_audiences/1","type":"macro"},{"doc":"An implmentation of `AshAuthentication.Secret` that generates nonces for\nOpenID Connect strategies.\n\nDefaults to `16` bytes of random data.  You can change this by setting the\n`byte_size` option in your DSL:\n\n```elixir\noidc do\n  nonce {AshAuthentication.NonceGenerator, byte_size: 32}\n  # ...\nend\n```","ref":"AshAuthentication.Strategy.Oidc.NonceGenerator.html","title":"AshAuthentication.Strategy.Oidc.NonceGenerator","type":"module"},{"doc":"DSL transformer for oidc strategies.\n\nAdds a nonce generator to the strategy if `nonce` is set to `true`.\nDelegates to the default OAuth2 transformer.","ref":"AshAuthentication.Strategy.Oidc.Transformer.html","title":"AshAuthentication.Strategy.Oidc.Transformer","type":"module"},{"doc":"DSL verifier for OpenID Connect strategy.","ref":"AshAuthentication.Strategy.Oidc.Verifier.html","title":"AshAuthentication.Strategy.Oidc.Verifier","type":"module"},{"doc":"Actions for the password strategy\n\nProvides the code interface for working with resources via a password\nstrategy.","ref":"AshAuthentication.Strategy.Password.Actions.html","title":"AshAuthentication.Strategy.Password.Actions","type":"module"},{"doc":"Attempt to register a new user.","ref":"AshAuthentication.Strategy.Password.Actions.html#register/3","title":"AshAuthentication.Strategy.Password.Actions.register/3","type":"function"},{"doc":"Attempt to change a user's password using a reset token.","ref":"AshAuthentication.Strategy.Password.Actions.html#reset/3","title":"AshAuthentication.Strategy.Password.Actions.reset/3","type":"function"},{"doc":"Request a password reset.","ref":"AshAuthentication.Strategy.Password.Actions.html#reset_request/3","title":"AshAuthentication.Strategy.Password.Actions.reset_request/3","type":"function"},{"doc":"Attempt to sign in a user.","ref":"AshAuthentication.Strategy.Password.Actions.html#sign_in/3","title":"AshAuthentication.Strategy.Password.Actions.sign_in/3","type":"function"},{"doc":"Attempt to sign in a previously-authenticated user with a short-lived sign in token.","ref":"AshAuthentication.Strategy.Password.Actions.html#sign_in_with_token/3","title":"AshAuthentication.Strategy.Password.Actions.sign_in_with_token/3","type":"function"},{"doc":"Mod docs","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.html","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password","type":"module"},{"doc":"Hello 4","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.html#password/2","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.password/2","type":"macro"},{"doc":"Mod docs","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Authentication.Strategies.Resettable.Resettable.html","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Authentication.Strategies.Resettable.Resettable","type":"module"},{"doc":"Hello 4","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Authentication.Strategies.Resettable.Resettable.html#resettable/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Authentication.Strategies.Resettable.Resettable.resettable/1","type":"macro"},{"doc":"Mod Docs","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Authentication.Strategies.Resettable.Resettable.Options.html","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Authentication.Strategies.Resettable.Resettable.Options","type":"module"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Authentication.Strategies.Resettable.Resettable.Options.html#password_reset_action_name/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Authentication.Strategies.Resettable.Resettable.Options.password_reset_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Authentication.Strategies.Resettable.Resettable.Options.html#request_password_reset_action_name/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Authentication.Strategies.Resettable.Resettable.Options.request_password_reset_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Authentication.Strategies.Resettable.Resettable.Options.html#sender/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Authentication.Strategies.Resettable.Resettable.Options.sender/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Authentication.Strategies.Resettable.Resettable.Options.html#token_lifetime/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Authentication.Strategies.Resettable.Resettable.Options.token_lifetime/1","type":"macro"},{"doc":"Mod Docs","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options","type":"module"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html#confirmation_required?/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.confirmation_required?/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html#hash_provider/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.hash_provider/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html#hashed_password_field/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.hashed_password_field/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html#identity_field/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.identity_field/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html#name/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html#password_confirmation_field/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.password_confirmation_field/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html#password_field/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.password_field/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html#register_action_accept/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.register_action_accept/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html#register_action_name/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.register_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html#registration_enabled?/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.registration_enabled?/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html#sign_in_action_name/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.sign_in_action_name/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html#sign_in_enabled?/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.sign_in_enabled?/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html#sign_in_token_lifetime/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.sign_in_token_lifetime/1","type":"macro"},{"doc":"Hello 2","ref":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.html#sign_in_tokens_enabled?/1","title":"AshAuthentication.Strategy.Password.Authentication.Strategies.Password.Options.sign_in_tokens_enabled?/1","type":"macro"},{"doc":"Defines the Spark DSL entity for this strategy.","ref":"AshAuthentication.Strategy.Password.Dsl.html","title":"AshAuthentication.Strategy.Password.Dsl","type":"module"},{"doc":"Plugs for the password strategy.\n\nHandles registration, sign-in and password resets.","ref":"AshAuthentication.Strategy.Password.Plug.html","title":"AshAuthentication.Strategy.Password.Plug","type":"module"},{"doc":"Handle a registration request","ref":"AshAuthentication.Strategy.Password.Plug.html#register/2","title":"AshAuthentication.Strategy.Password.Plug.register/2","type":"function"},{"doc":"Handle a reset request","ref":"AshAuthentication.Strategy.Password.Plug.html#reset/2","title":"AshAuthentication.Strategy.Password.Plug.reset/2","type":"function"},{"doc":"Handle a reset request request","ref":"AshAuthentication.Strategy.Password.Plug.html#reset_request/2","title":"AshAuthentication.Strategy.Password.Plug.reset_request/2","type":"function"},{"doc":"Handle a sign-in request","ref":"AshAuthentication.Strategy.Password.Plug.html#sign_in/2","title":"AshAuthentication.Strategy.Password.Plug.sign_in/2","type":"function"},{"doc":"Handle a request to validate a sign in token","ref":"AshAuthentication.Strategy.Password.Plug.html#sign_in_with_token/2","title":"AshAuthentication.Strategy.Password.Plug.sign_in_with_token/2","type":"function"},{"doc":"Prepare a query for a password reset request.\n\nThis preparation performs three jobs, one before the query executes and two\nafter:\n1. it constraints the query to match the identity field passed to the action.\n2. if there is a user returned by the query, then\n  a. generate a reset token and\n  b. publish a notification.\n\nAlways returns an empty result.","ref":"AshAuthentication.Strategy.Password.RequestPasswordResetPreparation.html","title":"AshAuthentication.Strategy.Password.RequestPasswordResetPreparation","type":"module"},{"doc":"","ref":"AshAuthentication.Strategy.Password.RequestPasswordResetPreparation.html#init/1","title":"AshAuthentication.Strategy.Password.RequestPasswordResetPreparation.init/1","type":"function"},{"doc":"Validate that the token is a valid password reset request token.","ref":"AshAuthentication.Strategy.Password.ResetTokenValidation.html","title":"AshAuthentication.Strategy.Password.ResetTokenValidation","type":"module"},{"doc":"The entity used to store password reset information.","ref":"AshAuthentication.Strategy.Password.Resettable.html","title":"AshAuthentication.Strategy.Password.Resettable","type":"module"},{"doc":"","ref":"AshAuthentication.Strategy.Password.Resettable.html#t:t/0","title":"AshAuthentication.Strategy.Password.Resettable.t/0","type":"type"},{"doc":"Prepare a query for sign in\n\nThis preparation performs two jobs, one before the query executes and one\nafter.\n\nFirstly, it constrains the query to match the identity field passed to the\naction.\n\nSecondly, it validates the supplied password using the configured hash\nprovider, and if correct allows the record to be returned, otherwise returns\nan authentication failed error.","ref":"AshAuthentication.Strategy.Password.SignInPreparation.html","title":"AshAuthentication.Strategy.Password.SignInPreparation","type":"module"},{"doc":"","ref":"AshAuthentication.Strategy.Password.SignInPreparation.html#init/1","title":"AshAuthentication.Strategy.Password.SignInPreparation.init/1","type":"function"},{"doc":"Prepare a query for sign in via token.\n\nThis preparation first validates the token argument and extracts the subject\nfrom it and constrains the query to a matching user.","ref":"AshAuthentication.Strategy.Password.SignInWithTokenPreparation.html","title":"AshAuthentication.Strategy.Password.SignInWithTokenPreparation","type":"module"},{"doc":"","ref":"AshAuthentication.Strategy.Password.SignInWithTokenPreparation.html#init/1","title":"AshAuthentication.Strategy.Password.SignInWithTokenPreparation.init/1","type":"function"},{"doc":"DSL transformer for the password strategy.\n\nIterates through any password authentication strategies and ensures that all\nthe correct actions and settings are in place.","ref":"AshAuthentication.Strategy.Password.Transformer.html","title":"AshAuthentication.Strategy.Password.Transformer","type":"module"},{"doc":"DSL verifier for the password strategy.","ref":"AshAuthentication.Strategy.Password.Verifier.html","title":"AshAuthentication.Strategy.Password.Verifier","type":"module"},{"doc":"The code interface for interacting with the token resource.","ref":"AshAuthentication.TokenResource.Actions.html","title":"AshAuthentication.TokenResource.Actions","type":"module"},{"doc":"Remove all expired records.","ref":"AshAuthentication.TokenResource.Actions.html#expunge_expired/2","title":"AshAuthentication.TokenResource.Actions.expunge_expired/2","type":"function"},{"doc":"Retrieve a token by token or JTI optionally filtering by purpose.","ref":"AshAuthentication.TokenResource.Actions.html#get_token/3","title":"AshAuthentication.TokenResource.Actions.get_token/3","type":"function"},{"doc":"Has the token been revoked?\n\nSimilar to `token-revoked?/2..3` except that rather than extracting the JTI\nfrom the token, assumes that it's being passed in directly.","ref":"AshAuthentication.TokenResource.Actions.html#jti_revoked?/3","title":"AshAuthentication.TokenResource.Actions.jti_revoked?/3","type":"function"},{"doc":"Revoke a token.\n\nExtracts the JTI from the provided token and uses it to generate a revocation\nrecord.","ref":"AshAuthentication.TokenResource.Actions.html#revoke/3","title":"AshAuthentication.TokenResource.Actions.revoke/3","type":"function"},{"doc":"Store a token.\n\nStores a token for any purpose.","ref":"AshAuthentication.TokenResource.Actions.html#store_token/3","title":"AshAuthentication.TokenResource.Actions.store_token/3","type":"function"},{"doc":"Has the token been revoked?\n\nSimilar to `jti_revoked?/2..3` except that it extracts the JTI from the token,\nrather than relying on it to be passed in.","ref":"AshAuthentication.TokenResource.Actions.html#token_revoked?/3","title":"AshAuthentication.TokenResource.Actions.token_revoked?/3","type":"function"},{"doc":"MOD DOCS","ref":"AshAuthentication.TokenResource.Confirmation.html","title":"AshAuthentication.TokenResource.Confirmation","type":"module"},{"doc":"Hello!","ref":"AshAuthentication.TokenResource.Confirmation.html#confirmation/1","title":"AshAuthentication.TokenResource.Confirmation.confirmation/1","type":"macro"},{"doc":"Mod Docs","ref":"AshAuthentication.TokenResource.Confirmation.Options.html","title":"AshAuthentication.TokenResource.Confirmation.Options","type":"module"},{"doc":"Hello 3","ref":"AshAuthentication.TokenResource.Confirmation.Options.html#get_changes_action_name/1","title":"AshAuthentication.TokenResource.Confirmation.Options.get_changes_action_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.TokenResource.Confirmation.Options.html#store_changes_action_name/1","title":"AshAuthentication.TokenResource.Confirmation.Options.store_changes_action_name/1","type":"macro"},{"doc":"A `GenServer` which periodically removes expired token revocations.\n\nScans all token revocation resources based on their configured expunge\ninterval and removes any expired records.\n\n```elixir\ndefmodule MyApp.Accounts.Token do\n  use Ash.Resource,\n    extensions: [AshAuthentication.TokenResource],\n    domain: MyApp.Accounts\n\n  token do\n    expunge_interval 12\n  end\nend\n```\n\nThis GenServer is started by the `AshAuthentication.Supervisor` which should\nbe added to your app's supervision tree.","ref":"AshAuthentication.TokenResource.Expunger.html","title":"AshAuthentication.TokenResource.Expunger","type":"module"},{"doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"AshAuthentication.TokenResource.Expunger.html#child_spec/1","title":"AshAuthentication.TokenResource.Expunger.child_spec/1","type":"function"},{"doc":"Constrains a query to only records which are confirmations that match the jti\nargument.","ref":"AshAuthentication.TokenResource.GetConfirmationChangesPreparation.html","title":"AshAuthentication.TokenResource.GetConfirmationChangesPreparation","type":"module"},{"doc":"","ref":"AshAuthentication.TokenResource.GetConfirmationChangesPreparation.html#init/1","title":"AshAuthentication.TokenResource.GetConfirmationChangesPreparation.init/1","type":"function"},{"doc":"Constrains a query to only records which match the `jti` or `token` argument\nand optionally by the `purpose` argument.","ref":"AshAuthentication.TokenResource.GetTokenPreparation.html","title":"AshAuthentication.TokenResource.GetTokenPreparation","type":"module"},{"doc":"","ref":"AshAuthentication.TokenResource.GetTokenPreparation.html#init/1","title":"AshAuthentication.TokenResource.GetTokenPreparation.init/1","type":"function"},{"doc":"Constrains a query to only records which are revocations that match the token\nor jti argument.","ref":"AshAuthentication.TokenResource.IsRevokedPreparation.html","title":"AshAuthentication.TokenResource.IsRevokedPreparation","type":"module"},{"doc":"","ref":"AshAuthentication.TokenResource.IsRevokedPreparation.html#init/1","title":"AshAuthentication.TokenResource.IsRevokedPreparation.init/1","type":"function"},{"doc":"MOD DOCS","ref":"AshAuthentication.TokenResource.Revocation.html","title":"AshAuthentication.TokenResource.Revocation","type":"module"},{"doc":"Hello!","ref":"AshAuthentication.TokenResource.Revocation.html#revocation/1","title":"AshAuthentication.TokenResource.Revocation.revocation/1","type":"macro"},{"doc":"Mod Docs","ref":"AshAuthentication.TokenResource.Revocation.Options.html","title":"AshAuthentication.TokenResource.Revocation.Options","type":"module"},{"doc":"Hello 3","ref":"AshAuthentication.TokenResource.Revocation.Options.html#is_revoked_action_name/1","title":"AshAuthentication.TokenResource.Revocation.Options.is_revoked_action_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.TokenResource.Revocation.Options.html#revoke_token_action_name/1","title":"AshAuthentication.TokenResource.Revocation.Options.revoke_token_action_name/1","type":"macro"},{"doc":"Generates a revocation record for a given token.","ref":"AshAuthentication.TokenResource.RevokeTokenChange.html","title":"AshAuthentication.TokenResource.RevokeTokenChange","type":"module"},{"doc":"Populates the JTI based on the token argument.","ref":"AshAuthentication.TokenResource.StoreConfirmationChangesChange.html","title":"AshAuthentication.TokenResource.StoreConfirmationChangesChange","type":"module"},{"doc":"Stores an arbitrary token.","ref":"AshAuthentication.TokenResource.StoreTokenChange.html","title":"AshAuthentication.TokenResource.StoreTokenChange","type":"module"},{"doc":"Mod Docs","ref":"AshAuthentication.TokenResource.Token.Options.html","title":"AshAuthentication.TokenResource.Token.Options","type":"module"},{"doc":"Hello 3","ref":"AshAuthentication.TokenResource.Token.Options.html#domain/1","title":"AshAuthentication.TokenResource.Token.Options.domain/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.TokenResource.Token.Options.html#expunge_expired_action_name/1","title":"AshAuthentication.TokenResource.Token.Options.expunge_expired_action_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.TokenResource.Token.Options.html#expunge_interval/1","title":"AshAuthentication.TokenResource.Token.Options.expunge_interval/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.TokenResource.Token.Options.html#get_token_action_name/1","title":"AshAuthentication.TokenResource.Token.Options.get_token_action_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.TokenResource.Token.Options.html#read_expired_action_name/1","title":"AshAuthentication.TokenResource.Token.Options.read_expired_action_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.TokenResource.Token.Options.html#store_token_action_name/1","title":"AshAuthentication.TokenResource.Token.Options.store_token_action_name/1","type":"macro"},{"doc":"The token resource transformer.\n\nSets up the default schema and actions for the token resource.","ref":"AshAuthentication.TokenResource.Transformer.html","title":"AshAuthentication.TokenResource.Transformer","type":"module"},{"doc":"","ref":"AshAuthentication.TokenResource.Transformer.html#after_compile?/0","title":"AshAuthentication.TokenResource.Transformer.after_compile?/0","type":"function"},{"doc":"The token resource verifier.","ref":"AshAuthentication.TokenResource.Verifier.html","title":"AshAuthentication.TokenResource.Verifier","type":"module"},{"doc":"MOD DOCS","ref":"AshAuthentication.Tokens.html","title":"AshAuthentication.Tokens","type":"module"},{"doc":"Hello!","ref":"AshAuthentication.Tokens.html#tokens/1","title":"AshAuthentication.Tokens.tokens/1","type":"macro"},{"doc":"Mod Docs","ref":"AshAuthentication.Tokens.Options.html","title":"AshAuthentication.Tokens.Options","type":"module"},{"doc":"Hello 3","ref":"AshAuthentication.Tokens.Options.html#enabled?/1","title":"AshAuthentication.Tokens.Options.enabled?/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.Tokens.Options.html#require_token_presence_for_authentication?/1","title":"AshAuthentication.Tokens.Options.require_token_presence_for_authentication?/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.Tokens.Options.html#signing_algorithm/1","title":"AshAuthentication.Tokens.Options.signing_algorithm/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.Tokens.Options.html#signing_secret/1","title":"AshAuthentication.Tokens.Options.signing_secret/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.Tokens.Options.html#store_all_tokens?/1","title":"AshAuthentication.Tokens.Options.store_all_tokens?/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.Tokens.Options.html#token_lifetime/1","title":"AshAuthentication.Tokens.Options.token_lifetime/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.Tokens.Options.html#token_resource/1","title":"AshAuthentication.Tokens.Options.token_resource/1","type":"macro"},{"doc":"The Authentication transformer\n\nSets up non-provider-specific configuration for authenticated resources.","ref":"AshAuthentication.Transformer.html","title":"AshAuthentication.Transformer","type":"module"},{"doc":"","ref":"AshAuthentication.Transformer.html#after_compile?/0","title":"AshAuthentication.Transformer.after_compile?/0","type":"function"},{"doc":"Sets the `select_for_senders` options to its default value.","ref":"AshAuthentication.Transformer.SetSelectForSenders.html","title":"AshAuthentication.Transformer.SetSelectForSenders","type":"module"},{"doc":"","ref":"AshAuthentication.Transformer.SetSelectForSenders.html#after_compile?/0","title":"AshAuthentication.Transformer.SetSelectForSenders.after_compile?/0","type":"function"},{"doc":"","ref":"AshAuthentication.Transformer.SetSelectForSenders.html#before?/1","title":"AshAuthentication.Transformer.SetSelectForSenders.before?/1","type":"function"},{"doc":"Code interface for provider identity actions.\n\nAllows you to interact with UserIdentity resources without having to mess\naround with changesets, domains, etc.  These functions are delegated to from\nwithin `AshAuthentication.UserIdentity`.","ref":"AshAuthentication.UserIdentity.Actions.html","title":"AshAuthentication.UserIdentity.Actions","type":"module"},{"doc":"Upsert an identity for a user.","ref":"AshAuthentication.UserIdentity.Actions.html#upsert/2","title":"AshAuthentication.UserIdentity.Actions.upsert/2","type":"function"},{"doc":"The user identity transformer.\n\nSets up the default schema and actions for a user identity resource.","ref":"AshAuthentication.UserIdentity.Transformer.html","title":"AshAuthentication.UserIdentity.Transformer","type":"module"},{"doc":"","ref":"AshAuthentication.UserIdentity.Transformer.html#after_compile?/0","title":"AshAuthentication.UserIdentity.Transformer.after_compile?/0","type":"function"},{"doc":"A change which upserts a user's identity into the user identity resource.\n\nExpects the following arguments:\n\n  - `user_info` a map with string keys as returned from the OAuth2/OpenID\n    upstream provider.\n  - `oauth_tokens` a map with string keys containing the OAuth2 token\n    response.\n  - `user_id` the ID of the user this identity relates to.\n  - `strategy` the name of the strategy.\n\nThis is usually dynamically inserted into a generated action, however you can\nadd it to your own action if needed.","ref":"AshAuthentication.UserIdentity.UpsertIdentityChange.html","title":"AshAuthentication.UserIdentity.UpsertIdentityChange","type":"module"},{"doc":"Mod Docs","ref":"AshAuthentication.UserIdentity.UserIdentity.Options.html","title":"AshAuthentication.UserIdentity.UserIdentity.Options","type":"module"},{"doc":"Hello 3","ref":"AshAuthentication.UserIdentity.UserIdentity.Options.html#access_token_attribute_name/1","title":"AshAuthentication.UserIdentity.UserIdentity.Options.access_token_attribute_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.UserIdentity.UserIdentity.Options.html#access_token_expires_at_attribute_name/1","title":"AshAuthentication.UserIdentity.UserIdentity.Options.access_token_expires_at_attribute_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.UserIdentity.UserIdentity.Options.html#destroy_action_name/1","title":"AshAuthentication.UserIdentity.UserIdentity.Options.destroy_action_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.UserIdentity.UserIdentity.Options.html#domain/1","title":"AshAuthentication.UserIdentity.UserIdentity.Options.domain/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.UserIdentity.UserIdentity.Options.html#read_action_name/1","title":"AshAuthentication.UserIdentity.UserIdentity.Options.read_action_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.UserIdentity.UserIdentity.Options.html#refresh_token_attribute_name/1","title":"AshAuthentication.UserIdentity.UserIdentity.Options.refresh_token_attribute_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.UserIdentity.UserIdentity.Options.html#strategy_attribute_name/1","title":"AshAuthentication.UserIdentity.UserIdentity.Options.strategy_attribute_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.UserIdentity.UserIdentity.Options.html#uid_attribute_name/1","title":"AshAuthentication.UserIdentity.UserIdentity.Options.uid_attribute_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.UserIdentity.UserIdentity.Options.html#upsert_action_name/1","title":"AshAuthentication.UserIdentity.UserIdentity.Options.upsert_action_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.UserIdentity.UserIdentity.Options.html#user_id_attribute_name/1","title":"AshAuthentication.UserIdentity.UserIdentity.Options.user_id_attribute_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.UserIdentity.UserIdentity.Options.html#user_relationship_name/1","title":"AshAuthentication.UserIdentity.UserIdentity.Options.user_relationship_name/1","type":"macro"},{"doc":"Hello 3","ref":"AshAuthentication.UserIdentity.UserIdentity.Options.html#user_resource/1","title":"AshAuthentication.UserIdentity.UserIdentity.Options.user_resource/1","type":"macro"},{"doc":"The user identity verifier.","ref":"AshAuthentication.UserIdentity.Verifier.html","title":"AshAuthentication.UserIdentity.Verifier","type":"module"},{"doc":"The Authentication verifier.\n\nChecks configuration constraints after compile.","ref":"AshAuthentication.Verifier.html","title":"AshAuthentication.Verifier","type":"module"},{"doc":"![Logo](https://github.com/ash-project/ash/blob/main/logos/cropped-for-header-black-text.png?raw=true#gh-light-mode-only)\n![Logo](https://github.com/ash-project/ash/blob/main/logos/cropped-for-header-white-text.png?raw=true#gh-dark-mode-only)\n\n![Elixir CI](https://github.com/team-alembic/ash_authentication/workflows/Elixir%20Library/badge.svg)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Hex version badge](https://img.shields.io/hexpm/v/ash_authentication.svg)](https://hex.pm/packages/ash_authentication)\n[![Hexdocs badge](https://img.shields.io/badge/docs-hexdocs-purple)](https://hexdocs.pm/ash_authentication)\n\n# Ash Authentication\n\nWelcome! Here you will find everything you need to know to get started with and use Ash Authentication. This documentation is best viewed on [hexdocs](https://hexdocs.pm/ash_authentication).","ref":"readme.html","title":"README","type":"extras"},{"doc":"[**Tutorials**](#tutorials) walk you through a series of steps to accomplish a goal. These are **learning-oriented**, and are a great place for beginners to start.\n\n---\n\n[**Topics**](#topics) provide a high level overview of a specific concept or feature. These are **understanding-oriented**, and are perfect for discovering design patterns, features, and tools related to a given topic.\n\n---\n\n[**Reference**](#reference) documentation is produced automatically from our source code. It comes in the form of module documentation and DSL documentation. This documentation is **information-oriented**. Use the sidebar and the search bar to find relevant reference information.","ref":"readme.html#about-the-documentation","title":"About the Documentation - README","type":"extras"},{"doc":"- [Get Started](documentation/tutorials/get-started.md)\n\n---","ref":"readme.html#tutorials","title":"Tutorials - README","type":"extras"},{"doc":"- [Custom Strategies](documentation/topics/custom-strategy.md)\n- [Policies on Authenticated Resources](documentation/topics/policies-on-authentication-resources.md)\n- [Testing](documentation/topics/testing.md)\n- [Tokens](documentation/topics/tokens.md)\n- [Upgrade guides](documentation/topics/upgrading.md)\n\n---","ref":"readme.html#topics","title":"Topics - README","type":"extras"},{"doc":"- [Authenticate with Auth0](documentation/tutorials/auth0.md)\n- [Authenticate with GitHub](documentation/tutorials/github.md)\n- [Authenticate with Google](documentation/tutorials/google.md)\n- [Authenticate with Magic Links](documentation/tutorials/magic-links.md)\n- [Confirmation](documentation/tutorials/confirmation.md)\n\n---","ref":"readme.html#tutorials","title":"Tutorials - README","type":"extras"},{"doc":"- [AshAuthentication DSL](documentation/dsls/DSL:-AshAuthentication.md)\n- [AshAuthentication.AddOn.Confirmation DSL](documentation/dsls/DSL:-AshAuthentication.AddOn.Confirmation.md)\n- [AshAuthentication.Strategy.Auth0](documentation/dsls/DSL:-AshAuthentication.Strategy.Auth0.md)\n- [AshAuthentication.Strategy.Github DSL](documentation/dsls/DSL:-AshAuthentication.Strategy.Github.md)\n- [AshAuthentication.Strategy.Google DSL](documentation/dsls/DSL:-AshAuthentication.Strategy.Google.md)\n- [AshAuthentication.Strategy.MagicLink DSL](documentation/dsls/DSL:-AshAuthentication.Strategy.MagicLink.md)\n- [AshAuthentication.Strategy.OAuth2 DSL](documentation/dsls/DSL:-AshAuthentication.Strategy.OAuth2.md)\n- [AshAuthentication.Strategy.Oidc DSL](documentation/dsls/DSL:-AshAuthentication.Strategy.Oidc.md)\n- [AshAuthentication.Strategy.Password DSL](documentation/dsls/DSL:-AshAuthentication.Strategy.Password.md)\n- [AshAuthentication.TokenResource DSL](documentation/dsls/DSL:-AshAuthentication.TokenResource.md)\n- [AshAuthentication.UserIdentity DSL](documentation/dsls/DSL:-AshAuthentication.UserIdentity.md)\n- For other reference documentation, see the sidebar & search bar","ref":"readme.html#reference","title":"Reference - README","type":"extras"},{"doc":"- [Ash Framework](https://hexdocs.pm/ash)\n- [Ash Authentication Phoenix](https://hexdocs.pm/ash_authentication_phoenix) | Integrates Ash Authentication into your Phoenix application\n\n---\n\n[![Alembic](logos/alembic.png)](https://alembic.com.au)\n\nProudly written and maintained by the team at [Alembic](https://alembic.com.au) for the Ash community.","ref":"readme.html#related-packages","title":"Related packages - README","type":"extras"},{"doc":"# Change Log\n\nAll notable changes to this project will be documented in this file.\nSee [Conventional Commits](Https://conventionalcommits.org) for commit guidelines.\n\n<!-- changelog -->\n\n## [v4.0.4](https://github.com/team-alembic/ash_authentication/compare/v4.0.3...v4.0.4) (2024-09-01)","ref":"changelog.html","title":"Change Log","type":"extras"},{"doc":"* update types and formatter\r\n\n* add secret values to config\r\n\n* sort new fields\r\n\n* sort new types\r\n\n* properly set allow_nil for apple secrets\r\n\n* credo and sobelow warnings","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"* add apple strategy (#750)\n\n* add apple strategy\r\n\n## [v4.0.3](https://github.com/team-alembic/ash_authentication/compare/v4.0.2...v4.0.3) (2024-08-22)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"* allow overriding strategy defaults (#766)\n\n* bug where `nil` is not allowed but is returned from secret functions.\n\n* add back in accidentally removed debug errors code (#768)\n\n* set options earlier in magic link/oauth2","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"* avoid warning about comparison with `nil`\n\n* set context in addition to tenant\n\n* use `no_depend_modules` for better compile dependencies\n\n* enable custom `http_adapters` (#760)\n\n## [v4.0.2](https://github.com/team-alembic/ash_authentication/compare/v4.0.1...v4.0.2) (2024-08-05)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"* only pass the \"token\" parameter to reset with token action (#748)\n\n* handle case where `action.accept` is `nil`","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"* validate that tokens are enabled when password resets are enabled. (#758)\n\n* compile-time check to make sure that the configured `token_resource` is an Ash.Resource (#749)\n\n* Tokens: improved compile-time validation of the token_resource option of the tokens DSL by checking that the passed value is an Ash.Resource.\r\n\n* Tokens: removed unnecessary stuff from the test file.\r\n\n* Tokens: fixed credo warning and changed some things after PR feedback\n\n## [v4.0.1](https://github.com/team-alembic/ash_authentication/compare/v4.0.0...v4.0.1) (2024-06-11)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"* no need to `allow_nil_input` for an unaccepted field\n\n* correctly generate sign-in tokens when requested.\n\n* ensure tenant is set when revoking tokens and on changeset for updating\n\n* broken links in readme (#692)\n\n* broken links\r\n\n* bug in tokens required verifier.\n\n## [4.0.0](https://github.com/team-alembic/ash_authentication/compare/v4.0.0-rc.7...4.0.0) (2024-05-10)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"* Sign in tokens are enabled by default for the password strategy.\n\n* Tokens are now enabled by default.","ref":"changelog.html#breaking-changes","title":"Breaking Changes: - Change Log","type":"extras"},{"doc":"* Jwt: Include authentication interaction context when storing tokens.\n\n* Strategy.Password: Reset tokens are single use. (#625)\n\n* Confirmation: Only allow the confirmation token to be used once. (#623)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"* Only require tokens to be enabled when using a strategy which needs them.\n\n* OIDC: Adjust dsl of OIDC reflect assent requirements (#538)\n\n* Use `Ash` functions instead of generated domain functions.\n\n## [v4.0.0-rc.7](https://github.com/team-alembic/ash_authentication/compare/v4.0.0-rc.6...v4.0.0-rc.7) (2024-05-10)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"* Jwt: Include authentication interaction context when storing tokens.","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"* Only require tokens to be enabled when using a strategy which needs them.\n\n## [v4.0.0-rc.6](https://github.com/team-alembic/ash_authentication/compare/v4.0.0-rc.5...v4.0.0-rc.6) (2024-04-11)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"* OIDC: Adjust dsl of OIDC reflect assent requirements (#538)\n\n## [v4.0.0-rc.5](https://github.com/team-alembic/ash_authentication/compare/v4.0.0-rc.4...v4.0.0-rc.5) (2024-04-10)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Sign in tokens are enabled by default for the password strategy.\n\n- Tokens are now enabled by default.","ref":"changelog.html#breaking-changes","title":"Breaking Changes: - Change Log","type":"extras"},{"doc":"- Strategy.Password: Reset tokens are single use. (#625)\n\n## [v4.0.0-rc.4](https://github.com/team-alembic/ash_authentication/compare/v4.0.0-rc.3...v4.0.0-rc.4) (2024-04-09)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Use `Ash` functions instead of generated domain functions.\n\n## [v4.0.0-rc.3](https://github.com/team-alembic/ash_authentication/compare/v4.0.0-rc.2...v4.0.0-rc.3) (2024-04-08)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Confirmation: Only allow the confirmation token to be used once. (#623)\n\n## [v4.0.0-rc.2](https://github.com/team-alembic/ash_authentication/compare/v4.0.0-rc.1...v4.0.0-rc.2) (2024-04-02)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Update to support Ash 3.0. (#599)","ref":"changelog.html#breaking-changes","title":"Breaking Changes: - Change Log","type":"extras"},{"doc":"- allow future versions of ash rc\n\n- Jwt: Ignore pre-release versions verifying token versions.","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- re-integrate ash_graphql and ash_json_api RCs.\n\n## [v4.0.0-rc.1](https://github.com/team-alembic/ash_authentication/compare/v4.0.0-rc.0...v4.0.0-rc.1) (2024-04-01)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- re-integrate ash_graphql and ash_json_api RCs.\n\n## [v4.0.0-rc.0](https://github.com/team-alembic/ash_authentication/compare/v3.12.4...v4.0.0-rc.0) (2024-03-28)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Jwt: Ignore pre-release versions verifying token versions.\n\n## [v3.12.4](https://github.com/team-alembic/ash_authentication/compare/v3.12.3...v3.12.4) (2024-03-11)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- infer `api` from a resource\n\n## [v3.12.3](https://github.com/team-alembic/ash_authentication/compare/v3.12.2...v3.12.3) (2024-02-20)\n\n## [v3.12.2](https://github.com/team-alembic/ash_authentication/compare/v3.12.1...v3.12.2) (2024-01-30)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- deps: mark ash_postgres as optional","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- support atom keys for uid in addition to strings (#556)\n\n## [v3.12.1](https://github.com/team-alembic/ash_authentication/compare/v3.12.0...v3.12.1) (2024-01-25)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- support atom keys for uid in addition to strings (#556)\n\n## [v3.12.0](https://github.com/team-alembic/ash_authentication/compare/v3.11.16...v3.12.0) (2023-11-21)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Add Google strategy (#474)\n\n- Add Google strategy","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- include Google strategy cheat sheet\n\n- Add documentation grouping for Google strategy","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Change redirect_uri secret to be more flexible (#473)\n\n## [v3.11.16](https://github.com/team-alembic/ash_authentication/compare/v3.11.15...v3.11.16) (2023-10-25)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Change overwriting of refresh_token to not overwrite them with nil (#483)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Add id as an option for sourcing uid for UserIdentity (#481)\n\n## [v3.11.15](https://github.com/team-alembic/ash_authentication/compare/v3.11.14...v3.11.15) (2023-09-22)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- ensure we aren't calling `Map.take` on `nil`\n\n## [v3.11.14](https://github.com/team-alembic/ash_authentication/compare/v3.11.13...v3.11.14) (2023-09-22)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- TokenResource: don't silently drop notifications about token removal. (#432)\n\n## [v3.11.13](https://github.com/team-alembic/ash_authentication/compare/v3.11.12...v3.11.13) (2023-09-22)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Allow all token lifetimes to be specified with a time unit.\n\n## [v3.11.12](https://github.com/team-alembic/ash_authentication/compare/v3.11.11...v3.11.12) (2023-09-21)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- include `finch` in the dependencies.\n\n- deprecated mint httpadapter (#425)\n\n## [v3.11.11](https://github.com/team-alembic/ash_authentication/compare/v3.11.10...v3.11.11) (2023-09-21)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- include `finch` in the dependencies.\n\n- deprecated mint httpadapter (#425)\n\n## [v3.11.10](https://github.com/team-alembic/ash_authentication/compare/v3.11.9...v3.11.10) (2023-09-18)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- only use sign in token expiration for sign in tokens (#424)\n\n## [v3.11.9](https://github.com/team-alembic/ash_authentication/compare/v3.11.8...v3.11.9) (2023-09-17)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- support generating tokens for other strategies.","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- support generating sign in tokens on register (#421)\n\n- support generating sign in tokens on register\n\n## [v3.11.8](https://github.com/team-alembic/ash_authentication/compare/v3.11.7...v3.11.8) (2023-08-16)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- correct spec for `Jwt.token_for_user` (#389)\n\n## [v3.11.7](https://github.com/team-alembic/ash_authentication/compare/v3.11.6...v3.11.7) (2023-07-14)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- ensure that the `current_` atom exists at compile time. (#359)\n\n## [v3.11.6](https://github.com/team-alembic/ash_authentication/compare/v3.11.5...v3.11.6) (2023-06-23)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- fix Logger deprecations for elixir 1.15 (#343)\n\n## [v3.11.5](https://github.com/team-alembic/ash_authentication/compare/v3.11.4...v3.11.5) (2023-06-18)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- ConfirmationHookChange: use `Info.find_strategy/2..3` rather than a hard coded strategy name. (#336)\n\n## [v3.11.4](https://github.com/team-alembic/ash_authentication/compare/v3.11.3...v3.11.4) (2023-06-15)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- primary keys are implicitly uniquely constrained. (#333)\n\n## [v3.11.3](https://github.com/team-alembic/ash_authentication/compare/v3.11.2...v3.11.3) (2023-05-31)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- duplicate mime type for \"json\".\n\n## [v3.11.2](https://github.com/team-alembic/ash_authentication/compare/v3.11.1...v3.11.2) (2023-05-28)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Strategy.Password: Preparations should allow strategy to be passed in. (#314)\n\n## [v3.11.1](https://github.com/team-alembic/ash_authentication/compare/v3.11.0...v3.11.1) (2023-05-04)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- correct oauth2 and getting started typos (#267)\n\n## [v3.11.0](https://github.com/team-alembic/ash_authentication/compare/v3.10.8...v3.11.0) (2023-05-04)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- OpenID Connect Strategy (#197)\n\n- AshAuthentication.Strategy.Oidc: Add OpenID Connect strategy.\n\n## [v3.10.8](https://github.com/team-alembic/ash_authentication/compare/v3.10.7...v3.10.8) (2023-04-28)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- PasswordValidation should associate errors with the field being â¦ (#279)\n\n## [v3.10.7](https://github.com/team-alembic/ash_authentication/compare/v3.10.6...v3.10.7) (2023-04-28)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- run CI on pull requests\n\n## [v3.10.6](https://github.com/team-alembic/ash_authentication/compare/v3.10.5...v3.10.6) (2023-04-09)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- require spark ~> 1.0 (#261)\n\n## [v3.10.5](https://github.com/team-alembic/ash_authentication/compare/v3.10.4...v3.10.5) (2023-04-06)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- add sign in tokens to password strategy (#252)\n\n- add sign in tokens to password strategy\n\n- convert `sign_in_with_token` into an action.\n\n## [v3.10.4](https://github.com/team-alembic/ash_authentication/compare/v3.10.3...v3.10.4) (2023-04-03)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- update spark (#254)\n\n- update spark\n\n## [v3.10.3](https://github.com/team-alembic/ash_authentication/compare/v3.10.2...v3.10.3) (2023-04-03)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- update spark (#254)\n\n- update spark\n\n## [v3.10.2](https://github.com/team-alembic/ash_authentication/compare/v3.10.1...v3.10.2) (2023-03-06)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- respect `identity_relationship_user_id_attribute` on `Strategy.OAuth2.IdentityChange` (#213)\n\n## [v3.10.1](https://github.com/team-alembic/ash_authentication/compare/v3.10.0...v3.10.1) (2023-03-06)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- fix failing JWT tests because of bad version regex.\n\n## [v3.10.0](https://github.com/team-alembic/ash_authentication/compare/v3.9.6...v3.10.0) (2023-03-04)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Configure accepted fields on register (#219)\n\n## [v3.9.6](https://github.com/team-alembic/ash_authentication/compare/v3.9.5...v3.9.6) (2023-03-01)","ref":"changelog.html#breaking-changes","title":"Breaking Changes: - Change Log","type":"extras"},{"doc":"- allow registration and sign in to be disabled on password strategies. (#218)\n\n## [v3.9.5](https://github.com/team-alembic/ash_authentication/compare/v3.9.4...v3.9.5) (2023-02-23)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- support multiple otp apps w/resources (#209)\n\n## [v3.9.4](https://github.com/team-alembic/ash_authentication/compare/v3.9.3...v3.9.4) (2023-02-22)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- PasswordConfirmationValidation: allow `strategy_name` to be passed as an option. (#208)\n\n## [v3.9.3](https://github.com/team-alembic/ash_authentication/compare/v3.9.2...v3.9.3) (2023-02-19)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- sign in preparation without identity resource (#198)\n\n## [v3.9.2](https://github.com/team-alembic/ash_authentication/compare/v3.9.1...v3.9.2) (2023-02-12)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Password.Transformer: don't force users to define a `hashed_password` argument to the register action. (#192)\n\n## [v3.9.1](https://github.com/team-alembic/ash_authentication/compare/v3.9.0...v3.9.1) (2023-02-12)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- select `hashed_password` on sign in preparation\n\n- don't allow special purpose tokens to be used for sign in. (#191)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- add select_for_senders (#189)\n\n- add select_for_senders\n\n- include metadata declaration on register action\n\n## [v3.9.0](https://github.com/team-alembic/ash_authentication/compare/v3.8.0...v3.9.0) (2023-02-09)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Add new \"magic link\" authentication strategy. (#184)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- validate uniqueness of strategy names. (#185)\n\n- resources can appear in multiple apis, so we need to uniq them here (#169)\n\n- put_add_on/2 was putting into strategies","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Strategy.Custom: handle custom strategies as extensions. (#183)\n\n- improve error message for badly formed token secrets (#181)\n\n- add metadata declarations to actions that have a `token` (#164)\n\n- validate signing secret is a string (#163)\n\n## [v3.8.0](https://github.com/team-alembic/ash_authentication/compare/v3.7.9...v3.8.0) (2023-02-09)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Strategy.Custom: handle custom strategies as extensions. (#183)\n\n- improve error message for badly formed token secrets (#181)\n\n- add metadata declarations to actions that have a `token` (#164)\n\n- validate signing secret is a string (#163)\n\n## [v3.7.9](https://github.com/team-alembic/ash_authentication/compare/v3.7.8...v3.7.9) (2023-02-09)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Strategy.Custom: handle custom strategies as extensions. (#183)\n\n- improve error message for badly formed token secrets (#181)\n\n- add metadata declarations to actions that have a `token` (#164)\n\n- validate signing secret is a string (#163)\n\n## [v3.7.8](https://github.com/team-alembic/ash_authentication/compare/v3.7.7...v3.7.8) (2023-02-08)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- resources can appear in multiple apis, so we need to uniq them here (#169)\n\n- put_add_on/2 was putting into strategies","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Strategy.Custom: handle custom strategies as extensions. (#183)\n\n- improve error message for badly formed token secrets (#181)\n\n- add metadata declarations to actions that have a `token` (#164)\n\n- validate signing secret is a string (#163)\n\n## [v3.7.7](https://github.com/team-alembic/ash_authentication/compare/v3.7.6...v3.7.7) (2023-02-06)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- improve error message for badly formed token secrets (#181)\n\n- add metadata declarations to actions that have a `token` (#164)\n\n- validate signing secret is a string (#163)\n\n## [v3.7.6](https://github.com/team-alembic/ash_authentication/compare/v3.7.5...v3.7.6) (2023-01-30)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- add metadata declarations to actions that have a `token` (#164)\n\n- validate signing secret is a string (#163)\n\n## [v3.7.5](https://github.com/team-alembic/ash_authentication/compare/v3.7.4...v3.7.5) (2023-01-30)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- add metadata declarations to actions that have a `token` (#164)\n\n- validate signing secret is a string (#163)\n\n## [v3.7.4](https://github.com/team-alembic/ash_authentication/compare/v3.7.3...v3.7.4) (2023-01-30)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- validate signing secret is a string (#163)\n\n## [v3.7.3](https://github.com/team-alembic/ash_authentication/compare/v3.7.2...v3.7.3) (2023-01-18)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Password: validate fields using both methods of allowing nil input. (#151)\n\n## [v3.7.2](https://github.com/team-alembic/ash_authentication/compare/v3.7.1...v3.7.2) (2023-01-18)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- AuthenticationFailed: store a `caused_by` value in authentication failures. (#145)\n\n## [v3.7.1](https://github.com/team-alembic/ash_authentication/compare/v3.7.0...v3.7.1) (2023-01-18)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- update ash & switch to new docs patterns (#146)\n\n## [v3.7.0](https://github.com/team-alembic/ash_authentication/compare/v3.6.1...v3.7.0) (2023-01-18)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- PasswordValidation: Add a validation which can check a password. (#144)\n\n## [v3.6.1](https://github.com/team-alembic/ash_authentication/compare/v3.6.0...v3.6.1) (2023-01-15)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- don't call `hash_provider.valid?` on `nil` values (#135)\n\n- use configured hashed_password_field","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- set confirmed field to `nil`, for reconfirmation (#136)\n\n- set confirmed field to `nil`, for reconfirmation\n\n- only change `confirmed_at_field` if its not changing, and only on updates\n\n## [v3.6.0](https://github.com/team-alembic/ash_authentication/compare/v3.5.3...v3.6.0) (2023-01-13)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- TokenResource: Store the token subject in the token resource. (#133)\n\n- TokenResource: Store the token subject in the token resource.","ref":"changelog.html#breaking-changes","title":"Breaking Changes: - Change Log","type":"extras"},{"doc":"- don't call `hash_provider.valid?` on `nil` values (#135)\n\n- use configured hashed_password_field\n\n## [v3.5.3](https://github.com/team-alembic/ash_authentication/compare/v3.5.2...v3.5.3) (2023-01-13)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Confirmation: send the original changeset to confirmation senders. (#132)\n\n## [v3.5.2](https://github.com/team-alembic/ash_authentication/compare/v3.5.1...v3.5.2) (2023-01-12)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- add user context when creating tokens (#129)\n\n## [v3.5.1](https://github.com/team-alembic/ash_authentication/compare/v3.5.0...v3.5.1) (2023-01-12)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- missing icons in OAuth2 strategies. (#126)\n\n## [v3.5.0](https://github.com/team-alembic/ash_authentication/compare/v3.4.2...v3.5.0) (2023-01-12)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- GitHub: Add GitHub authentication strategy. (#125)\n\n## [v3.4.2](https://github.com/team-alembic/ash_authentication/compare/v3.4.1...v3.4.2) (2023-01-12)","ref":"changelog.html#breaking-changes","title":"Breaking Changes: - Change Log","type":"extras"},{"doc":"- improve some error message/validation logic","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- add policy utilities and accompanying guide (#119)\n\n- add policy utilities and accompanying guide\n\n- fix build/warnings/dialyzer/format\n\n## [v3.4.1](https://github.com/team-alembic/ash_authentication/compare/v3.4.0...v3.4.1) (2023-01-12)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Confirmation: correctly generate confirmation token subjects. (#124)\n\n## [v3.4.0](https://github.com/team-alembic/ash_authentication/compare/v3.3.1...v3.4.0) (2023-01-11)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- Add token-required-for-authentication feature. (#116)\n\n## [v3.3.1](https://github.com/team-alembic/ash_authentication/compare/v3.3.0...v3.3.1) (2023-01-09)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- Set Ash actor and tenant when executing internal plugs. (#115)\n\n## [v3.3.0](https://github.com/team-alembic/ash_authentication/compare/v3.2.2...v3.3.0) (2023-01-09)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Make strategy names optional where possible. (#113)\n\n## [v3.2.2](https://github.com/team-alembic/ash_authentication/compare/v3.2.1...v3.2.2) (2023-01-08)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- Allow the strategy name to be passed for password validations and changes. (#102)\n\n## [v3.2.1](https://github.com/team-alembic/ash_authentication/compare/v3.2.0...v3.2.1) (2022-12-16)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- add `icon` field to OAuth2 strategy. (#100)\n\n## [v3.2.0](https://github.com/team-alembic/ash_authentication/compare/v3.1.0...v3.2.0) (2022-12-16)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Auth0: Add a pre-configured Auth0 strategy. (#99)\n\n## [v3.1.0](https://github.com/team-alembic/ash_authentication/compare/v3.0.4...v3.1.0) (2022-12-14)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- Jwt: Use token signing secret into the DSL.","ref":"changelog.html#breaking-changes","title":"Breaking Changes: - Change Log","type":"extras"},{"doc":"- Add option to store all tokens when they're created. (#91)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- remove the need for a strategy in changeset/query contexts. (#89)\n\n- add transaction reason\n\n- try a simpler way of ensuring module is compiled\n\n## [v3.0.4](https://github.com/team-alembic/ash_authentication/compare/v3.0.3...v3.0.4) (2022-12-08)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- update to latest ash version\n\n## [v3.0.3](https://github.com/team-alembic/ash_authentication/compare/v3.0.2...v3.0.3) (2022-12-07)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- break potential compiler dependency loops. (#64)\n\n## [v3.0.2](https://github.com/team-alembic/ash_authentication/compare/v3.0.1...v3.0.2) (2022-12-05)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- supervisor: require that the user adds the supervisor to their OTP app. (#62)\n\n## [v3.0.1](https://github.com/team-alembic/ash_authentication/compare/v3.0.0...v3.0.1) (2022-12-05)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- actions: All actions now take optional arguments for the underlying API call. (#61)\n\n## [v3.0.0](https://github.com/team-alembic/ash_authentication/compare/v2.0.1...v3.0.0) (2022-12-04)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- TokenResource: Move `TokenRevocation` -> `TokenResource`.","ref":"changelog.html#breaking-changes","title":"Breaking Changes: - Change Log","type":"extras"},{"doc":"- Confirmation: Store confirmation changes in the token resource.\n\n## [v2.0.1](https://github.com/team-alembic/ash_authentication/compare/v2.0.0...v2.0.1) (2022-11-24)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Confirmation: Confirmation is not a strategy. (#46)\n\n- Confirmation: Confirmation is not a strategy.\n\n- Confirmation: Support more than one confirmation entity.\n\n## [v2.0.0](https://github.com/team-alembic/ash_authentication/compare/v1.0.0...v2.0.0) (2022-11-22)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- Major redesign of DSL and code structure. (#35)\n\n## [v1.0.0](https://github.com/team-alembic/ash_authentication/compare/v0.6.1...v1.0.0) (2022-11-15)","ref":"changelog.html#breaking-changes","title":"Breaking Changes: - Change Log","type":"extras"},{"doc":"- OAuth2Authentication: Make the `site` option runtime configurable. (#31)\n\n## [v0.6.1](https://github.com/team-alembic/ash_authentication/compare/v0.6.0...v0.6.1) (2022-11-15)","ref":"changelog.html#breaking-changes","title":"Breaking Changes: - Change Log","type":"extras"},{"doc":"- OAuth2Authentication: Return the failure reason even if it's not a changeset. (#29)\n\n## [v0.6.0](https://github.com/team-alembic/ash_authentication/compare/v0.5.0...v0.6.0) (2022-11-10)","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- OAuth2Authentication: Add support for generic OAuth2 endpoints. (#28)\n\n## [v0.5.0](https://github.com/team-alembic/ash_authentication/compare/v0.4.3...v0.5.0) (2022-11-04)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- Confirmation: Add extension that allows a user to be confirmed when created or updated. (#27)\n\n## [v0.4.3](https://github.com/team-alembic/ash_authentication/compare/v0.4.2...v0.4.3) (2022-11-03)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- docs: Improve endpoint docs for PasswordAuthentication and PasswordReset.\n\n## [v0.4.2](https://github.com/team-alembic/ash_authentication/compare/v0.4.1...v0.4.2) (2022-11-03)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- PasswordReset: Generate the reset token using the target action, not the source action. (#25)\n\n- PasswordReset: Generate the reset token using the target action, not the source action.","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- PasswordReset: rework PasswordReset to be a provider in it's own right - this means it has it's own routes, etc.\n\n## [v0.4.1](https://github.com/team-alembic/ash_authentication/compare/v0.4.0...v0.4.1) (2022-11-03)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- PasswordReset: A reset request is actually a query, not an update. (#23)\n\n## [v0.4.0](https://github.com/team-alembic/ash_authentication/compare/v0.3.0...v0.4.0) (2022-11-02)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- PasswordReset: allow users to request and reset their password. (#22)\n\n## [v0.3.0](https://github.com/team-alembic/ash_authentication/compare/v0.2.1...v0.3.0) (2022-10-31)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- Ash.PlugHelpers: Support standard actor configuration. (#16)\n\n- Ash.PlugHelpers: Support standard actor configuration.","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"- docs: change all references to `actor` to `user`.\n\n## [v0.2.1](https://github.com/team-alembic/ash_authentication/compare/v0.2.0...v0.2.1) (2022-10-26)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- deprecation warnings caused by use of `Macro.expand_literal/2`.","ref":"changelog.html#bug-fixes","title":"Bug Fixes: - Change Log","type":"extras"},{"doc":"- move subject_name uniqueness validation to compile time.\n\n- remove `generated: true` from macros.\n\n## [v0.2.0](https://github.com/team-alembic/ash_authentication/compare/v0.1.0...v0.2.0) (2022-10-24)","ref":"changelog.html#improvements","title":"Improvements: - Change Log","type":"extras"},{"doc":"- PasswordAuthentication: Registration and authentication with local credentials (#4)\n\n## [v0.1.0](https://github.com/team-alembic/ash_authentication/compare/v0.1.0...v0.1.0) (2022-09-27)","ref":"changelog.html#features","title":"Features: - Change Log","type":"extras"},{"doc":"# Get started with Ash Authentication\n\nIf you haven't already, read [the getting started guide for\nAsh](https://ash-hq.org/docs/guides/ash/latest/tutorials/get-started.md). This\nassumes that you already have resources set up, and only gives you the steps to\nadd authentication to your resources and APIs.","ref":"get-started.html","title":"Get started with Ash Authentication","type":"extras"},{"doc":"Bring in the `ash_authentication` dependency:\n\n```elixir\n# mix.exs\n\ndefp deps()\n  [\n    # ...\n    {:ash_authentication, \"~> 4.0\"}\n  ]\nend\n```\n\nAnd add `ash_authentication` to your `.formatter.exs`:\n\n```elixir\n# .formatter.exs\n[\n  import_deps: [..., :ash_authentication]\n]\n```","ref":"get-started.html#add-to-your-application-s-dependencies","title":"Add to your application's dependencies - Get started with Ash Authentication","type":"extras"},{"doc":"Ash Authentication supports many different features, each configured separately.\n\n### `AshAuthentication`\n\nThis is the core extension, and is required. It provides main DSL for working\nwith authentication and related features and should be added to your \"user\"\nresource.\n\nThe `AshAuthentication` extension provides configuration and sensible defaults for settings which relate to authentication, regardless of authentication mechanism.\n\nAll strategy and add-on configuration is nested inside this DSL block.\n\nIt will define a `get_by_subject_name` read action on your resource, which is\nused when converting tokens or session information into a resource record.\n\n### `AshAuthentication.Strategy.Password`\n\nThis authentication strategy provides registration and sign-in for users using a local\nidentifier (eg `username`, `email` or `phone_number`) and a password. It will\ndefine register and sign-in actions on your \"user\" resource. You are welcome to\ndefine either or both of these actions yourself if you wish to customise them -\nif you do so then the extension will do its best to validate that all required\nconfiguration is present.\n\nThe `AshAuthentication.Strategy.Password` DSL allows you to override any of the default values.\n\n### `AshAuthentication.Strategy.OAuth2`\n\nThis authentication strategy provides registration and sign-in for users using a\nremote [OAuth 2.0](https://oauth.net/2/) server as the source of truth. You\nwill be required to provide either a \"register\" or a \"sign-in\" action depending\non your configuration, which the strategy will attempt to validate for common\nmisconfigurations.\n\n### `AshAuthentication.AddOn.Confirmation`\n\nThis add-on allows you to confirm changes to a user record by generating and\nsending them a confirmation token which they must submit before allowing the\nchange to take place.\n\n### `AshAuthentication.TokenResource`\n\nThis extension allows you to easily create a resource which will store\ninformation about tokens that can't be encoded into the tokens themselves. A\nresource with this extension must be present if token generation is enabled.\n\n### `AshAuthentication.UserIdentity`\n\nIf you plan to support multiple different strategies at once (eg giving your\nusers the choice of more than one authentication provider, or signing them into\nmultiple services simultaneously) then you will want to create a resource with\nthis extension enabled. It is used to keep track of the links between your\nlocal user records and their many remote identities.","ref":"get-started.html#choosing-your-extensions-strategies-and-add-ons","title":"Choosing your extensions, strategies and add-ons - Get started with Ash Authentication","type":"extras"},{"doc":"Let's create an `Accounts` domain in our application which provides a `User`\nresource and a `Token` resource.\n\nFirst, let's define our domain:\n\n```elixir\n# lib/my_app/accounts.ex\n\ndefmodule MyApp.Accounts do\n  use Ash.Domain\n\n  resources do\n    resource MyApp.Accounts.User\n    resource MyApp.Accounts.Token\n  end\nend\n```\n\nBe sure to add it to the `ash_domains` config in your `config.exs`\n\n```elixir\n# in config/config.exs\nconfig :my_app, ash_domains: [..., MyApp.Accounts]\n```\n\nNext, let's define our `Token` resource. This resource is needed\nif token generation is enabled for any resources in your application. Most of\nthe contents are auto-generated, so we just need to provide the data layer\nconfiguration and the API to use.\n\nBut before we do, we need to install a postgres extension.\n\n```elixir\n# lib/my_app/repo.ex\n\ndefmodule MyApp.Repo do\n  use AshPostgres.Repo, otp_app: :my_app\n\n  def installed_extensions do\n    [\"ash-functions\", \"uuid-ossp\", \"citext\"]\n  end\nend\n```\n\nYou can skip this step if you don't want to use tokens, in which case remove the\n`tokens` DSL section in the user resource below.\n\n```elixir\n# lib/my_app/accounts/token.ex\n\ndefmodule MyApp.Accounts.Token do\n  use Ash.Resource,\n    data_layer: AshPostgres.DataLayer,\n    extensions: [AshAuthentication.TokenResource],\n    # If using policies, enable the policy authorizer:\n    # authorizers: [Ash.Policy.Authorizer],\n    domain: MyApp.Accounts\n\n  postgres do\n    table \"tokens\"\n    repo MyApp.Repo\n  end\n\n  # If using policies, add the following bypass:\n  # policies do\n  #   bypass AshAuthentication.Checks.AshAuthenticationInteraction do\n  #     authorize_if always()\n  #   end\n  # end\nend\n```\n\nLastly let's define our `User` resource, using password authentication and token\ngeneration enabled.\n\n```elixir\n# lib/my_app/accounts/user.ex\n\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    data_layer: AshPostgres.DataLayer,\n    extensions: [AshAuthentication],\n    authorizers: [Ash.Policy.Authorizer],\n    domain: MyApp.Accounts\n\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false, public?: true\n    attribute :hashed_password, :string, allow_nil?: false, sensitive?: true\n  end\n\n  authentication do\n    strategies do\n      password :password do\n        identity_field :email\n      end\n    end\n\n    tokens do\n      enabled? true\n      token_resource MyApp.Accounts.Token\n      signing_secret fn _, _ ->\n        Application.fetch_env(:my_app, :token_signing_secret)\n      end\n    end\n  end\n\n  postgres do\n    table \"users\"\n    repo MyApp.Repo\n  end\n\n  identities do\n    identity :unique_email, [:email]\n  end\n\n  # You can customize this if you wish, but this is a safe default that\n  # only allows user data to be interacted with via AshAuthentication.\n  policies do\n    bypass AshAuthentication.Checks.AshAuthenticationInteraction do\n      authorize_if always()\n    end\n\n    policy always() do\n      forbid_if always()\n    end\n  end\nend\n```\n\nHere we've added password authentication, using an email address as our\nidentifier.\n\nNow we have enough in place to register and sign-in users using the\n`AshAuthentication.Strategy` protocol.","ref":"get-started.html#example","title":"Example - Get started with Ash Authentication","type":"extras"},{"doc":"If you have token generation enabled then you need to provide (at minimum) a\nsigning secret. As the name implies this should be a secret. AshAuthentication\nprovides a mechanism for looking up secrets at runtime using the\n`AshAuthentication.Secret` behaviour. To save you a click, this means that you\ncan set your token signing secret using either a static string (please don't!),\na two-arity anonymous function, or a module which implements the\n`AshAuthentication.Secret` behaviour.\n\nAt its simplest you should so something like this:\n\n```elixir\n# in lib/my_app/accounts/user.ex\n\nsigning_secret fn _, _ ->\n  Application.fetch_env(:my_app, :token_signing_secret)\nend\n```\n\nThen, specify the secret token in the config file:\n\n```elixir\n# in config/config.exs\nconfig :my_app, :token_signing_secret, \"some_super_secret_random_value\"\n```\n\n>","ref":"get-started.html#token-generation","title":"Token generation - Get started with Ash Authentication","type":"extras"},{"doc":">\n> Proper management of secrets is outside the scope of this tutorial, but is\n> absolutely crucial to the security of your application.","ref":"get-started.html#the-signing-secret-must-not-be-committed-to-source-control-warning","title":"The signing secret must not be committed to source control {: .warning} - Get started with Ash Authentication","type":"extras"},{"doc":"If you're using Phoenix, then you can skip this section and go straight to\n[Integrating Ash Authentication and Phoenix](https://ash-hq.org/docs/guides/ash_authentication_phoenix/latest/tutorials/getting-started-with-ash-authentication-phoenix)\n\nIn order for your users to be able to sign in, you will likely need to provide\nan HTTP endpoint to submit credentials or OAuth requests to. Ash Authentication\nprovides `AshAuthentication.Plug` for this purposes. It provides a `use` macro\nwhich handles routing of requests to the correct providers, and defines\ncallbacks for successful and unsuccessful outcomes.\n\nLet's generate our plug:\n\n```elixir\n# lib/my_app/auth_plug.ex\n\ndefmodule MyApp.AuthPlug do\n  use AshAuthentication.Plug, otp_app: :my_app\n\n  def handle_success(conn, _activity, user, token) do\n    if is_api_request?(conn) do\n      conn\n      |> send_resp(200, Jason.encode!(%{\n        authentication: %{\n          success: true,\n          token: token\n        }\n      }))\n    else\n      conn\n      |> store_in_session(user)\n      |> send_resp(200, EEx.eval_string(\"\"\"\n       Welcome back <%= @user.email %> \n      \"\"\", user: user))\n    end\n  end\n\n  def handle_failure(conn, _activity, _reason) do\n    if is_api_request?(conn) do\n      conn\n      |> send_resp(401, Jason.encode!(%{\n        authentication: %{\n          success: false\n        }\n      }))\n    else\n      conn\n      |> send_resp(401, \" Incorrect email or password \")\n    end\n  end\n\n  defp is_api_request?(conn), do: \"application/json\" in get_req_header(conn, \"accept\")\nend\n```\n\nNow that this is done, you can forward HTTP requests to it from your app's main\nrouter using `forward \"/auth\", to: MyApp.AuthPlug` or similar.\n\nYour generated auth plug module will also contain `load_from_session` and\n`load_from_bearer` function plugs, which can be used to load users into assigns\nbased on the contents of the session store or `Authorization` header.","ref":"get-started.html#plugs-and-routing","title":"Plugs and routing - Get started with Ash Authentication","type":"extras"},{"doc":"AshAuthentication includes a supervisor which you should add to your\napplication's supervisor tree. This is used to run any periodic jobs related to\nyour authenticated resources (removing expired tokens, for example).","ref":"get-started.html#supervisor","title":"Supervisor - Get started with Ash Authentication","type":"extras"},{"doc":"```elixir\ndefmodule MyApp.Application do\n  use Application\n\n  def start(_type, _args) do\n    children = [\n      # ...\n      # add this line -->\n      {AshAuthentication.Supervisor, otp_app: :my_app}\n      # <-- add this line\n    ]\n    # ...\n  end\nend\n```","ref":"get-started.html#example","title":"Example - Get started with Ash Authentication","type":"extras"},{"doc":"In this guide we've learned how to install Ash Authentication, configure\nresources and handle authentication HTTP requests.\n\nYou should now have an Ash application with working user authentication.\n\nUp next, [Using with Phoenix](https://ash-hq.org/docs/guides/ash_authentication_phoenix/latest/tutorials/getting-started-with-ash-authentication-phoenix).","ref":"get-started.html#summary","title":"Summary - Get started with Ash Authentication","type":"extras"},{"doc":"# Auth0 Tutorial\n\nThis is a quick tutorial on how to configure your application to use Auth0 for authentication.\n\nFirst, you need to configure an application in [the Auth0 dashboard](https://manage.auth0.com/) using the following steps:\n\n1. Click \"Create Application\".\n2. Set your application name to something that identifies it. You will likely\n   need separate applications for development and production environments, so\n   keep that in mind.\n3. Select \"Regular Web Application\" and click \"Create\".\n4. Switch to the \"Settings\" tab.\n5. Copy the \"Domain\", \"Client ID\" and \"Client Secret\" somewhere safe - we'll need them soon.\n6. In the \"Allowed Callback URLs\" section, add your callback URL. The callback URL is generated from the following information:\n\n   - The base URL of the application - in development that would be\n     `http://localhost:4000/` but in production will be your application's\n     URL.\n   - The mount point of the auth routes in your router - we'll assume\n     `/auth`.\n   - The \"subject name\" of the resource being authenticated - we'll assume `user`.\n   - The name of the strategy in your configuration. By default this is\n     `auth0`.\n\n   This means that the callback URL should look something like\n   `http://localhost:4000/auth/user/auth0/callback`.\n\n7. Set \"Allowed Web Origins\" to your application's base URL.\n8. Click \"Save Changes\".\n\nNext we can configure our resource:\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  authentication do\n    strategies do\n      auth0 do\n        client_id MyApp.Secrets\n        redirect_uri MyApp.Secrets\n        client_secret MyApp.Secrets\n        base_url MyApp.Secrets\n      end\n    end\n  end\nend\n```\n\nBecause all the configuration values should be kept secret (ie the `client_secret`) or are likely to be different for each environment we use the `AshAuthentication.Secret` behaviour to provide them. In this case we're delegating to the OTP application environment, however you may want to use a system environment variable or some other secret store (eg Vault).\n\n```elixir\ndefmodule MyApp.Secrets do\n  use AshAuthentication.Secret\n\n  def secret_for([:authentication, :strategies, :auth0, :client_id], MyApp.Accounts.User, _) do\n    get_config(:client_id)\n  end\n\n  def secret_for([:authentication, :strategies, :auth0, :redirect_uri], MyApp.Accounts.User, _) do\n    get_config(:redirect_uri)\n  end\n\n  def secret_for([:authentication, :strategies, :auth0, :client_secret], MyApp.Accounts.User, _) do\n    get_config(:client_secret)\n  end\n\n  def secret_for([:authentication, :strategies, :auth0, :base_url], MyApp.Accounts.User, _) do\n    get_config(:base_url)\n  end\n\n  defp get_config(key) do\n    :my_app\n    |> Application.fetch_env!(:auth0)\n    |> Keyword.fetch!(key)\n    |> then(&{:ok, &1})\n  end\nend\n```\n\nThe values for this configuration should be:\n\n- `client_id` - the client ID copied from the Auth0 settings page.\n- `redirect_uri` - the URL to the generated auth routes in your application (eg `http://localhost:4000/auth`).\n- `client_secret` the client secret copied from the Auth0 settings page.\n- `base_url` - the \"domain\" value copied from the Auth0 settings page prefixed with `https://` (eg `https://dev-yu30yo5y4tg2hg0y.us.auth0.com`).\n\nLastly, we need to add a register action to your user resource. This is defined as an upsert so that it can register new users, or update information for returning users. The default name of the action is `register_with_` followed by the strategy name. In our case that is `register_with_auth0`.\n\nThe register action takes two arguments, `user_info` and the `oauth_tokens`.\n\n- `user_info` contains the [`GET /userinfo` response from Auth0](https://auth0.com/docs/api/authentication#get-user-info) which you can use to populate your user attributes as needed.\n- `oauth_tokens` contains the [`POST /oauth/token` response from Auth0](https://auth0.com/docs/api/authentication#get-token) - you may want to store these if you intend to call the Auth0 API on behalf of the user.\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  # ...\n\n  actions do\n    create :register_with_auth0 do\n      argument :user_info, :map, allow_nil?: false\n      argument :oauth_tokens, :map, allow_nil?: false\n      upsert? true\n      upsert_identity :unique_email\n\n      # Required if you have token generation enabled.\n      change AshAuthentication.GenerateTokenChange\n\n      # Required if you have the `identity_resource` configuration enabled.\n      change AshAuthentication.Strategy.OAuth2.IdentityChange\n\n      change fn changeset, _ ->\n        user_info = Ash.Changeset.get_argument(changeset, :user_info)\n\n        Ash.Changeset.change_attributes(changeset, Map.take(user_info, [\"email\"]))\n      end\n    end\n  end\n\n  # ...\n\nend\n```","ref":"auth0.html","title":"Auth0 Tutorial","type":"extras"},{"doc":"# GitHub Tutorial\n\nThis is a quick tutorial on how to configure your application to use GitHub for authentication.\n\nFirst you need to configure an application in your [GitHub developer settings](https://github.com/settings/developers):\n\n1. Click the \"New OAuth App\" button.\n2. Set your application name to something that identifies it. You will likely\n   need separate applications for development and production environments, so\n   keep that in mind.\n3. Set \"Homepage URL\" appropriately for your application and environment.\n4. In the \"Authorization callback URL\" section, add your callback URL. The\n   callback URL is generated from the following information:\n\n   - The base URL of the application - in development that would be\n     `http://localhost:4000/` but in production will be your application's\n     URL.\n   - The mount point of the auth routes in your router - we'll assume\n     `/auth`.\n   - The \"subject name\" of the resource being authenticated - we'll assume `user`.\n   - The name of the strategy in your configuration. By default this is\n     `github`.\n\n   This means that the callback URL should look something like\n   `http://localhost:4000/auth/user/github/callback`.\n\n5. Do not set \"Enable Device Flow\" unless you know why you want this.\n6. Click \"Register application\".\n7. Click \"Generate a new client secret\".\n8. Copy the \"Client ID\" and \"Client secret\" somewhere safe, we'll need them\n   soon.\n9. Click \"Update application\".\n\nNext we can configure our resource (assuming you already have everything else\nset up):\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  authentication do\n    strategies do\n      github do\n        client_id MyApp.Secrets\n        redirect_uri MyApp.Secrets\n        client_secret MyApp.Secrets\n      end\n    end\n  end\nend\n```\n\nBecause all the configuration values should be kept secret (ie the\n`client_secret`) or are likely to be different for each environment we use the\n`AshAuthentication.Secret` behaviour to provide them. In this case we're\ndelegating to the OTP application environment, however you may want to use a\nsystem environment variable or some other secret store (eg Vault).\n\n```elixir\ndefmodule MyApp.Secrets do\n  use AshAuthentication.Secret\n\n  def secret_for([:authentication, :strategies, :github, :client_id], MyApp.Accounts.User, _) do\n    get_config(:client_id)\n  end\n\n  def secret_for([:authentication, :strategies, :github, :redirect_uri], MyApp.Accounts.User, _) do\n    get_config(:redirect_uri)\n  end\n\n  def secret_for([:authentication, :strategies, :github, :client_secret], MyApp.Accounts.User, _) do\n    get_config(:client_secret)\n  end\n\n  defp get_config(key) do\n    :my_app\n    |> Application.get_env(:github, [])\n    |> Keyword.fetch(key)\n  end\nend\n```\n\nThe values for this configuration should be:\n\n- `client_id` - the client ID copied from the GitHub settings page.\n- `redirect_uri` - the URL to the generated auth routes in your application\n  (eg `http://localhost:4000/auth`).\n- `client_secret` the client secret copied from the GitHub settings page.\n\nLastly, we need to add a register action to your user resource. This is defined\nas an upsert so that it can register new users, or update information for\nreturning users. The default name of the action is `register_with_` followed by\nthe strategy name. In our case that is `register_with_github`.\n\nThe register action takes two arguments, `user_info` and the `oauth_tokens`.\n\n- `user_info` contains the [`GET /user` response from\n  GitHub](https://docs.github.com/en/rest/users/users?apiVersion=2022-11-28#get-the-authenticated-user)\n  which you can use to populate your user attributes as needed.\n- `oauth_tokens` contains the [`POST /login/oauth/access_token` response from\n  GitHub](https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps#response)\n  - you may want to store these if you intend to call the GitHub API on behalf\n    of the user.\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  require Ash.Resource.Change.Builtins\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  # ...\n\n  actions do\n    create :register_with_github do\n      argument :user_info, :map, allow_nil?: false\n      argument :oauth_tokens, :map, allow_nil?: false\n      upsert? true\n      upsert_identity :unique_email\n\n      # Required if you have token generation enabled.\n      change AshAuthentication.GenerateTokenChange\n\n      # Required if you have the `identity_resource` configuration enabled.\n      change AshAuthentication.Strategy.OAuth2.IdentityChange\n\n      change fn changeset, _ ->\n        user_info = Ash.Changeset.get_argument(changeset, :user_info)\n\n        Ash.Changeset.change_attributes(changeset, Map.take(user_info, [\"email\"]))\n      end\n\n      # Required if you're using the password & confirmation strategies\n      upsert_fields []\n      change set_attribute(:confirmed_at, &DateTime.utc_now/0)\n      change after_action(fn _changeset, user, _context ->\n        case user.confirmed_at do\n          nil -> {:error, \"Unconfirmed user exists already\"}\n          _ -> {:ok, user}\n        end\n      end)\n    end\n  end\n\n  # ...\n\nend\n```\n\nEnsure you set the `hashed_password` to `allow_nil?` if you are also using the password strategy.\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  # ...\n  attributes do\n    # ...\n    attribute :hashed_password, :string, allow_nil?: true, sensitive?: true\n  end\n  # ...\nend\n```\n\nAnd generate and run migrations in that case.\n\n```bash\nmix ash.codegen make_hashed_password_nullable\nmix ash.migrate\n```","ref":"github.html","title":"GitHub Tutorial","type":"extras"},{"doc":"# Google Tutorial\n\nThis is a quick tutorial on how to configure Google authentication.\n\nFirst you'll need a registered application in [Google Cloud](https://console.cloud.google.com/welcome), in order to get your OAuth 2.0 Client credentials.\n\n1. On the Cloud's console **Quick access** section select **APIs & Services**, then **Credentials**\n2. Click on **+ CREATE CREDENTIALS** and from the dropdown select **OAuth client ID**\n3. From the google developers console, we will need: `client_id` & `client_secret`\n4. Enter your callback uri under **Authorized redirect URIs**. E.g. `http://localhost:4000/auth/user/google/callback`.\n\nNext we configure our resource to use google credentials:\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  attributes do\n    ...\n  end\n\n  authentication do\n    strategies do\n      google do\n        client_id MyApp.Secrets\n        redirect_uri MyApp.Secrets\n        client_secret MyApp.Secrets\n      end\n    end\n  end\nend\n```\n\nPlease check the guide on how to properly configure your Secrets\nThen we need to define an action that will handle the oauth2 flow, for the google case it is `:register_with_google` it will handle both cases for our resource, user registration & login.\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  require Ash.Resource.Change.Builtins\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  # ...\n  actions do\n    create :register_with_google do\n      argument :user_info, :map, allow_nil?: false\n      argument :oauth_tokens, :map, allow_nil?: false\n      upsert? true\n      upsert_identity :unique_email\n\n      change AshAuthentication.GenerateTokenChange\n\n      # Required if you have the `identity_resource` configuration enabled.\n      change AshAuthentication.Strategy.OAuth2.IdentityChange\n\n      change fn changeset, _ ->\n        user_info = Ash.Changeset.get_argument(changeset, :user_info)\n\n        Ash.Changeset.change_attributes(changeset, Map.take(user_info, [\"email\"]))\n      end\n\n      # Required if you're using the password & confirmation strategies\n      upsert_fields []\n      change set_attribute(:confirmed_at, &DateTime.utc_now/0)\n      change after_action(fn _changeset, user, _context ->\n        case user.confirmed_at do\n          nil -> {:error, \"Unconfirmed user exists already\"}\n          _ -> {:ok, user}\n        end\n      end)\n    end\n  end\n\n  # ...\n\nend\n```\n\nEnsure you set the `hashed_password` to `allow_nil?` if you are also using the password strategy.\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  # ...\n  attributes do\n    # ...\n    attribute :hashed_password, :string, allow_nil?: true, sensitive?: true\n  end\n  # ...\nend\n```\n\nAnd generate and run migrations in that case.\n\n```bash\nmix ash.codegen make_hashed_password_nullable\nmix ash.migrate\n```","ref":"google.html","title":"Google Tutorial","type":"extras"},{"doc":"# Magic Links Tutorial\n\nThis is a quick tutorial to get you up and running on Magic Links.\nThis assumes you've set up `ash_authentication` and [password reset](https://ash-hq.org/docs/guides/ash_authentication_phoenix/latest/tutorials/getting-started-with-ash-authentication-phoenix) in your Phoenix project.","ref":"magic-links.html","title":"Magic Links Tutorial","type":"extras"},{"doc":"```elixir\n# ...\n\nstrategies do\n  password :password do\n    identity_field(:email)\n\n    resettable do\n      sender(Example.Accounts.User.Senders.SendPasswordResetEmail)\n    end\n  end\n\n  # add these lines -->\n  magic_link do\n    identity_field :email\n    sender(Example.Accounts.User.Senders.SendMagicLink)\n  end\n  # <-- add these lines\nend\n\n# ...\n```","ref":"magic-links.html#add-the-magic-link-strategy-to-the-user-resource","title":"Add the Magic Link Strategy to the User resource - Magic Links Tutorial","type":"extras"},{"doc":"Inside `/lib/example/accounts/user/senders/send_magic_link.ex`\n\n```elixir\ndefmodule Example.Accounts.User.Senders.SendMagicLink do\n  @moduledoc \"\"\"\n  Sends a magic link\n  \"\"\"\n  use AshAuthentication.Sender\n  use ExampleWeb, :verified_routes\n\n  @impl AshAuthentication.Sender\n  def send(user, token, _) do\n    Example.Accounts.Emails.deliver_magic_link(\n      user,\n      url(~p\"/auth/user/magic_link/?token=#{token}\")\n    )\n  end\nend\n```\n\nInside `/lib/example/accounts/emails.ex`\n\n```elixir\n# ...\n\ndef deliver_magic_link(user, url) do\n  if !url do\n    raise \"Cannot deliver reset instructions without a url\"\n  end\n\n  deliver(user.email, \"Magic Link\", \"\"\"\n   \n     \n      Hi #{user.email},\n     \n\n     \n       Click here  to login.\n     \n   \n  \"\"\")\nend\n\n# ...\n```","ref":"magic-links.html#create-and-email-sender-and-email-template","title":"Create and email sender and email template - Magic Links Tutorial","type":"extras"},{"doc":"# Confirmation Tutorial\n\nThis is a quick tutorial on how to configure your application to enable confirmation.\n\nIn this tutorial we'll assume that you have a `User` resource which uses `email` as it's user identifier. We'll show you how to confirm a new user on sign-up and also require them to confirm if they wish to change their email address.\n\nHere's the user resource we'll be starting with:\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false, public?: true, sensitive?: true\n    attribute :hashed_password, :string, allow_nil?: false, public?: false, sensitive?: true\n  end\n\n  authentication do\n    strategies do\n      password :password do\n        identity_field :email\n        hashed_password_field :hashed_password\n      end\n    end\n  end\n\n  identities do\n    identity :unique_email, [:email]\n  end\nend\n```","ref":"confirmation.html","title":"Confirmation Tutorial","type":"extras"},{"doc":"First we start by adding the confirmation add-on to your existing authentication DSL:\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  # ...\n\n  authentication do\n    # ...\n\n    add_ons do\n      confirmation :confirm_new_user do\n        monitor_fields [:email]\n        confirm_on_create? true\n        confirm_on_update? false\n        confirm_action_name :confirm_new_user\n        sender MyApp.Accounts.User.Senders.SendNewUserConfirmationEmail\n      end\n    end\n  end\nend\n```\n\nNext we will have to generate and run migrations to add confirmed_at column to user resource\n\n```bash\nmix ash.codegen account_confirmation\n```\n\nTo make this work we need to create a new module `MyApp.Accounts.User.Senders.SendPasswordResetEmail`:\n\n```elixir\ndefmodule MyApp.Accounts.User.Senders.SendNewUserConfirmationEmail do\n  @moduledoc \"\"\"\n  Sends an email confirmation email\n  \"\"\"\n  use AshAuthentication.Sender\n  use MyAppWeb, :verified_routes\n\n  @impl AshAuthentication.Sender\n  def send(user, token, _opts) do\n    MyApp.Accounts.Emails.deliver_email_confirmation_instructions(\n      user,\n      url(~p\"/auth/user/confirm_new_user?#{[confirm: token]}\")\n    )\n  end\nend\n```\n\nWe also need to create a new email template:\n\n```elixir\ndefmodule Example.Accounts.Emails do\n  @moduledoc \"\"\"\n  Delivers emails.\n  \"\"\"\n\n  import Swoosh.Email\n\n  def deliver_email_confirmation_instructions(user, url) do\n    if !url do\n      raise \"Cannot deliver confirmation instructions without a url\"\n    end\n\n    deliver(user.email, \"Confirm your email address\", \"\"\"\n       \n        Hi #{user.email},\n       \n\n       \n        Someone has tried to register a new account using this email address.\n        If it was you, then please click the link below to confirm your identity. If you did not initiate this request then please ignore this email.\n       \n\n       \n         Click here to confirm your account \n       \n    \"\"\")\n  end\n\n  # For simplicity, this module simply logs messages to the terminal.\n  # You should replace it by a proper email or notification tool, such as:\n  #\n  #   * Swoosh - https://hexdocs.pm/swoosh\n  #   * Bamboo - https://hexdocs.pm/bamboo\n  #\n  defp deliver(to, subject, body) do\n    IO.puts(\"Sending email to #{to} with subject #{subject} and body #{body}\")\n\n    new()\n    |> from({\"Zach\", \"zach@ash-hq.org\"}) # TODO: Replace with your email\n    |> to(to_string(to))\n    |> subject(subject)\n    |> put_provider_option(:track_links, \"None\")\n    |> html_body(body)\n    |> MyApp.Mailer.deliver!()\n  end\nend\n```\n\nProvided you have your authentication routes hooked up either via `AshAuthentication.Plug` or [`AshAuthentication.Phoenix.Router`](https://hexdocs.pm/ash_authentication_phoenix/AshAuthentication.Phoenix.Router.html) then the user will be confirmed when the token is submitted.","ref":"confirmation.html#confirming-newly-registered-users","title":"Confirming newly registered users - Confirmation Tutorial","type":"extras"},{"doc":"You may want to require a user to perform a confirmation when a certain field changes. For example if a user changes their email address we can send them a new confirmation request.\n\nFirst, let's start by defining a new confirmation add-on in our resource:\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  # ...\n\n  authentication do\n    # ...\n\n    add_ons do\n      confirmation :confirm_change do\n        monitor_fields [:email]\n        confirm_on_create? false\n        confirm_on_update? true\n        confirm_action_name :confirm_change\n        sender MyApp.Accounts.User.Senders.SendEmailChangeConfirmationEmail\n      end\n    end\n  end\nend\n```\n\n> #### Why two confirmation configurations? {: .info}\n>\n> While you can perform both of these confirmations with a single confirmation add-on, in general the Ash philosophy is to be more explicit. Each confirmation will have it's own URL (based on the name) and tokens for one will not be able to be used for the other.\n\nNext, let's define our new sender:\n\n```elixir\ndefmodule MyApp.Accounts.User.Senders.SendEmailChangeConfirmationEmail do\n  @moduledoc \"\"\"\n  Sends an email change confirmation email\n  \"\"\"\n  use AshAuthentication.Sender\n  use MyAppWeb, :verified_routes\n\n  @impl AshAuthentication.Sender\n  def send(user, token, _opts) do\n    MyApp.Accounts.Emails.deliver_email_change_confirmation_instructions(\n      user,\n      url(~p\"/auth/user/confirm_change?#{[confirm: token]}\")\n    )\n  end\nend\n```\n\nAnd our new email template:\n\n```elixir\ndefmodule MyApp.Accounts.Emails do\n  # ...\n\n  def deliver_email_change_confirmation_instructions(user, url) do\n    if !url do\n      raise \"Cannot deliver confirmation instructions without a url\"\n    end\n\n    deliver(user.email, \"Confirm your new email address\", \"\"\"\n       \n        Hi #{user.email},\n       \n\n       \n        You recently changed your email address. Please confirm it.\n       \n\n       \n         Click here to confirm your new email address \n       \n    \"\"\")\n  end\n\n  # ...\nend\n```\n\n> #### Inhibiting changes {: .tip}\n>\n> Depending on whether you want the user's changes to be applied _before_ or _after_ confirmation, you can enable the [`inhibit_updates?` DSL option](documentation/dsls/DSL:-AshAuthentication.AddOn.Confirmation.md#authentication-add_ons-confirmation-inhibit_updates?).\n>\n> When this option is enabled, then any potential changes to monitored fields are instead temporarily stored in the [token resource](documentation/dsls/DSL:-AshAuthentication.TokenResource.md) and applied when the confirmation action is run.","ref":"confirmation.html#confirming-changes-to-monitored-fields","title":"Confirming changes to monitored fields - Confirmation Tutorial","type":"extras"},{"doc":"By default Ash Authentication will generate an update action for confirmation automatically (named `:confirm` unless you change it). You can manually implement this action in order to change it's behaviour and AshAuthentication will validate that the required changes are also present.\n\nFor example, here's an implementation of the `:confirm_change` action mentioned above, which adds a custom change that updates a remote CRM system with the user's new address.\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  # ...\n\n  actions do\n    # ...\n\n    update :confirm_change do\n      argument :confirm, :string, allow_nil?: false, public?: true\n      accept [:email]\n      require_atomic? false\n      change AshAuthentication.AddOn.Confirmation.ConfirmChange\n      change AshAuthentication.GenerateTokenChange\n      change MyApp.UpdateCrmSystem, only_when_valid?: true\n    end\n  end\nend\n```","ref":"confirmation.html#customising-the-confirmation-action","title":"Customising the confirmation action - Confirmation Tutorial","type":"extras"},{"doc":"# Defining Custom Authentication Strategies\n\nAshAuthentication allows you to bring your own authentication strategy without\nhaving to change the Ash Authentication codebase.\n\n> #### Add-on vs Strategy? {:.info}\n>\n> There is functionally no difference between \"add ons\" and \"strategies\" other\n> than where they appear in the DSL. We invented \"add ons\" because it felt\n> weird calling \"confirmation\" an authentication strategy.\n\nThere are several moving parts which must all work together so hold on to your hat!\n\n1. A `Spark.Dsl.Entity` struct. This is used to define the strategy DSL\n   inside the `strategies` (or `add_ons`) section of the `authentication` DSL.\n2. A strategy struct, which stores information about the strategy as\n   configured on a resource which must comply with a few rules.\n3. An optional transformer, which can be used to manipulate the DSL state of\n   the entity and the resource.\n4. An optional verifier, which can be used to verify the DSL state of the\n   entity and the resource after compilation.\n5. The `AshAuthentication.Strategy` protocol, which provides the glue needed\n   for everything to wire up and wrappers around the actions needed to run on\n   the resource.\n\nWe're going to define an extremely dumb strategy which lets anyone with a name\nthat starts with \"Marty\" sign in with just their name. Of course you would\nnever do this in real life, but this isn't real life - it's documentation!","ref":"custom-strategy.html","title":"Defining Custom Authentication Strategies","type":"extras"},{"doc":"Let's start by defining a module for our strategy to live in. Let's call it\n`OnlyMartiesAtTheParty`:\n\n```elixir\ndefmodule OnlyMartiesAtTheParty do\n  use AshAuthentication.Strategy.Custom\nend\n```\n\nSadly, this isn't enough to make the magic happen. We need to define our DSL\nentity by adding it to the `use` statement:\n\n```elixir\ndefmodule OnlyMartiesAtTheParty do\n  @entity %Spark.Dsl.Entity{\n    name: :only_marty,\n    describe: \"Strategy which only allows folks whose name starts with \\\"Marty\\\" to sign in.\",\n    examples: [\n      \"\"\"\n      only_marty do\n        case_sensitive? true\n        name_field :name\n      end\n      \"\"\"\n    ],\n    target: __MODULE__,\n    args: [{:optional, :name, :marty}],\n    schema: [\n      name: [\n        type: :atom,\n        doc: \"\"\"\n        The strategy name.\n        \"\"\",\n        required: true\n      ],\n      case_sensitive?: [\n        type: :boolean,\n        doc: \"\"\"\n        Ignore letter case when comparing?\n        \"\"\",\n        required: false,\n        default: false\n      ],\n      name_field: [\n        type: :atom,\n        doc: \"\"\"\n        The field to check for the users' name.\n        \"\"\",\n        required: true\n      ]\n    ]\n  }\n\n  use AshAuthentication.Strategy.Custom, entity: @entity\nend\n```\n\nIf you haven't you should take a look at the docs for `Spark.Dsl.Entity`, but\nhere's a brief overview of what each field we've set does:\n\n- `name` is the name for which the helper function will be generated in\n  the DSL (ie `only_marty do #... end`).\n- `describe` and `examples` are used when generating documentation.\n- `target` is the name of the module which defines our entity struct. We've\n  set it to `__MODULE__` which means that we'll have to define the struct on\n  this module.\n- `schema` is a keyword list that defines an options schema. See `Spark.Options`.\n\n> By default the entity is added to the `authentication / strategy` DSL, however\n> if you want it in the `authentication / add_ons` DSL instead you can also pass\n> `style: :add_on` in the `use` statement.\n\nNext up, we need to define our struct. The struct should have _at least_ the\nfields named in the entity schema. Additionally, Ash Authentication requires\nthat it have a `resource` field which will be set to the module of the resource\nit's attached to during compilation.\n\n```elixir\ndefmodule OnlyMartiesAtTheParty do\n  defstruct name: :marty, case_sensitive?: false, name_field: nil, resource: nil\n\n  # ...\n\n  use AshAuthentication.Strategy.Custom, entity: @entity\n\n  # other code elided ...\nend\n```\n\nNow it would be theoretically possible to add this custom strategies to your app\nby adding it to the `extensions` section of your resource:\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication, OnlyMartiesAtTheParty],\n    domain: MyApp.Accounts\n\n  authentication do\n    strategies do\n      only_marty do\n        name_field :name\n      end\n    end\n  end\n\n  attributes do\n    uuid_primary_key\n    attribute :name, :string, allow_nil?: false\n  end\nend\n```","ref":"custom-strategy.html#dsl-setup","title":"DSL setup - Defining Custom Authentication Strategies","type":"extras"},{"doc":"The Strategy protocol is used to introspect the strategy so that it can\nseamlessly fit in with the rest of Ash Authentication. Here are the key\nconcepts:\n\n- \"phases\" - in terms of HTTP, each strategy is likely to have many phases (eg OAuth 2.0's \"request\" and \"callback\" phases). Essentially you need one phase for each HTTP endpoint you wish to support with your strategy. In our case we just want one sign in endpoint.\n- \"actions\" - actions are exactly as they sound - Resource actions which can be executed by the strategy, whether generated by the strategy (as in the password strategy) or typed in by the user (as in the OAuth 2.0 strategy). The reason that we wrap the strategy's actions this way is that all the built-in strategies (and we hope yours too) allow the user to customise the name of the actions that it uses. At the very least it should probably append the strategy name to the action. Using `Strategy.action/4` allows us to refer these by a more generic name rather than via the user-specified one (eg `:register` vs `:register_with_password`).\n- \"routes\" - `AshAuthentication.Plug` (or [`AshAuthentication.Phoenix.Router.html`](https://hexdocs.pm/ash_authentication_phoenix/AshAuthentication.Phoenix.Router.html)) will generate routes using `Plug.Router` (or [`Phoenix.Router`](https://hexdocs.pm/phoenix/Phoenix.Router.html)) - the `routes/1` callback is used to retrieve this information from the strategy.\n\nGiven this information, let's implement the strategy. It's quite long, so I'm\ngoing to break it up into smaller chunks.\n\n```elixir\ndefimpl AshAuthentication.Strategy, for: OnlyMartiesAtTheParty do\n```\n\nThe `name/1` function is used to uniquely identify the strategy. It _must_ be an\natom and _should_ be the same as the path fragment used in the generated routes.\n\n```elixir\n  def name(strategy), do: strategy.name\n```\n\nSince our strategy only supports sign-in we only need a single `:sign_in` phase\nand action.\n\n```elixir\n  def phases(_), do: [:sign_in]\n  def actions(_), do: [:sign_in]\n```\n\nNext we generate the routes for the strategy. Routes _should_ contain the\nsubject name of the resource being authenticated in case the implementer is\nauthenticating multiple different resources - eg `User` and `Admin`.\n\n```elixir\n  def routes(strategy) do\n    subject_name = AshAuthentication.Info.authentication_subject_name!(strategy.resource)\n\n    [\n      {\"/#{subject_name}/#{strategy.name}\", :sign_in}\n    ]\n  end\n```\n\nWhen generating routes or forms for this phase, what HTTP method should we use?\n\n```elixir\n  def method_for_phase(_, :sign_in), do: :post\n```\n\nNext up, we write our plug. We take the \"name field\" from the input params in\nthe conn and pass them to our sign in action. As long as the action returns\n`{:ok, Ash.Resource.record}` or `{:error, any}` then we can just pass it\nstraight into `store_authentication_result/2` from\n`AshAuthentication.Plug.Helpers`.\n\n```elixir\n  import AshAuthentication.Plug.Helpers, only: [store_authentication_result: 2]\n\n  def plug(strategy, :sign_in, conn) do\n    params = Map.take(conn.params, [to_string(strategy.name_field)])\n    result = action(strategy, :sign_in, params, [])\n    store_authentication_result(conn, result)\n  end\n```\n\nNext, we implement our sign in action. We use `Ash.Query` to find all\nrecords whose name field matches the input, then constrain it to only records\nwhose name field starts with \"Marty\". Depending on whether the name field has a\nunique identity on it we have to deal with it returning zero or more users, or\nan error. When it returns a single user we return that user in an ok tuple,\notherwise we return an authentication failure.\n\nIn this example we're assuming that there is a default `read` action present on\nthe resource.\n\n> #### Warning {: .warning}\n>\n> When it comes to authentication, you never want to reveal to the user what the\n> failure was - this helps prevent [enumeration\n> attacks](https://www.hacksplaining.com/prevention/user-enumeration).\n>\n> You can use `AshAuthentication.Errors.AuthenticationFailed` for this purpose\n> as it will cause `ash_authentication`, `ash_authentication_phoenix`,\n> `ash_graphql` and `ash_json_api` to return the correct HTTP 401 error.\n\n```elixir\n  alias AshAuthentication.Errors.AuthenticationFailed\n  require Ash.Query\n  import Ash.Expr\n\n  def action(strategy, :sign_in, params, options) do\n    name_field = strategy.name_field\n    name = Map.get(params, to_string(name_field))\n    domain = AshAuthentication.Info.domain!(strategy.resource)\n\n    strategy.resource\n    |> Ash.Query.filter(expr(^ref(name_field) == ^name))\n    |> then(fn query ->\n      if strategy.case_sensitive? do\n        Ash.Query.filter(query, like(^ref(name_field), \"Marty%\"))\n      else\n        Ash.Query.filter(query, ilike(^ref(name_field), \"Marty%\"))\n      end\n    end)\n    |> domain.read(options)\n    |> case do\n      {:ok, [user]} ->\n        {:ok, user}\n\n      {:ok, []} ->\n        {:error, AuthenticationFailed.exception(caused_by: %{reason: :no_user})}\n\n      {:ok, _users} ->\n        {:error, AuthenticationFailed.exception(caused_by: %{reason: :too_many_users})}\n\n      {:error, reason} ->\n        {:error, AuthenticationFailed.exception(caused_by: %{reason: reason})}\n    end\n  end\nend\n```\n\nLastly, we have to implement the `tokens_required?/1` function. This function\nindicates Ash Authentication whether your strategy creates or consumes any\ntokens. Since our strategy does not, we can simply return false:\n\n```elixir\ndef tokens_required?(_), do: false\n```","ref":"custom-strategy.html#implementing-the-ashauthentication-strategy-protocol","title":"Implementing the `AshAuthentication.Strategy` protocol - Defining Custom Authentication Strategies","type":"extras"},{"doc":"In some cases it may be required for your strategy to modify it's own\nconfiguration or that of the whole resource at compile time. For that you can\ndefine the `transform/2` callback on your strategy module.\n\nAt the very least it is good practice to call\n`AshAuthentication.Strategy.Custom.Helpers.register_strategy_actions/3` so that\nAsh Authentication can keep track of which actions are related to which\nstrategies and `AshAuthentication.Strategy.Custom.Helpers` is automatically\nimported by `use AshAuthentication.Strategy.Custom` for this purpose.","ref":"custom-strategy.html#bonus-round-transformers-and-verifiers","title":"Bonus round - transformers and verifiers - Defining Custom Authentication Strategies","type":"extras"},{"doc":"For simple cases where you're just transforming the strategy you can just return\nthe modified strategy and the DSL will be updated accordingly. For example if\nyou wanted to generate the name of an action if the user hasn't specified it:\n\n```elixir\ndef transform(strategy, _dsl_state) do\n  {:ok, Map.put_new(strategy, :sign_in_action_name, :\"sign_in_with_#{strategy.name}\")}\nend\n```\n\nIn some cases you may want to modify the strategy and the resources DSL. In\nthis case you can return the newly mutated DSL state in an ok tuple or an error\ntuple, preferably containing a `Spark.Error.DslError`. For example if we wanted\nto build a sign in action for `OnlyMartiesAtTheParty` to use:\n\n```elixir\ndef transform(strategy, dsl_state) do\n  strategy = Map.put_new(strategy, :sign_in_action_name, :\"sign_in_with_#{strategy.name}\")\n\n  sign_in_action =\n    Spark.Dsl.Transformer.build_entity(Ash.Resource.Dsl, [:actions], :read,\n      name: strategy.sign_in_action_name,\n      accept: [strategy.name_field],\n      get?: true\n    )\n\n  dsl_state =\n    dsl_state\n    |> Spark.Dsl.Transformer.add_entity([:actions], sign_in_action)\n    |> put_strategy(strategy)\n    |> then(fn dsl_state ->\n      register_strategy_actions([strategy.sign_in_action_name], dsl_state, strategy)\n    end)\n\n  {:ok, dsl_state}\nend\n```\n\nTransformers can also be used to validate user input or even directly add code\nto the resource. See the docs for `Spark.Dsl.Transformer` for more information.","ref":"custom-strategy.html#transformers","title":"Transformers - Defining Custom Authentication Strategies","type":"extras"},{"doc":"We also support a variant of transformers which run in the new `@after_verify`\ncompile hook provided by Elixir 1.14. This is a great place to put checks\nto make sure that the user's configuration makes sense without adding any\ncompile-time dependencies between modules which may cause compiler deadlocks.\n\nFor example, verifying that the \"name\" attribute contains \"marty\" (why you would\ndo this I don't know but I'm running out of sensible examples):\n\n```elixir\ndef verify(strategy, _dsl_state) do\n  if String.contains?(to_string(strategy.name_field), \"marty\") do\n    :ok\n  else\n    {:error,\n      Spark.Error.DslError.exception(\n        path: [:authentication, :strategies, :only_marties],\n        message: \"Option `name_field` must contain \\\"marty\\\"\"\n      )}\n  end\nend\n```","ref":"custom-strategy.html#verifiers","title":"Verifiers - Defining Custom Authentication Strategies","type":"extras"},{"doc":"You should now have all the tools you need to build custom strategies - and in\nfact the strategies provided by Ash Authentication are built using this system.\n\nIf there is functionality or documentation missing please [raise an\nissue](https://github.com/team-alembic/ash_authentication/issues/new) and we'll\ntake a look at it.\n\nGo forth and strategise!","ref":"custom-strategy.html#summary","title":"Summary - Defining Custom Authentication Strategies","type":"extras"},{"doc":"# Policies on Authenticated Resources\n\nTypically, we want to lock down our `User` resource pretty heavily, which, in Ash, involves writing policies. However, AshAuthentication will be calling actions on your user/token resources. To make this more convenient, all actions run with `AshAuthentication` will set a special context. Additionally a check is provided that will check if that context has been set: `AshAuthentication.Checks.AshAuthenticationInteraction`. Using this you can write a simple bypass policy on your user/token resources like so:\n\n```elixir\npolicies do\n  bypass always() do\n    authorize_if AshAuthentication.Checks.AshAuthenticationInteraction\n  end\n\n  # or, pick your poison\n\n  bypass AshAuthentication.Checks.AshAuthenticationInteraction do\n    authorize_if always()\n  end\nend\n```","ref":"policies-on-authentication-resources.html","title":"Policies on Authenticated Resources","type":"extras"},{"doc":"# Testing\n\nTips and tricks to help test your apps.","ref":"testing.html","title":"Testing","type":"extras"},{"doc":"AshAuthentication uses `bcrypt_elixir` for hashing passwords for secure storage, which by design has a high computational cost. To reduce the cost (make hashing faster), you can reduce the number of computation rounds it performs in tests:\n\n```elixir\n# in config/test.exs\n\n# Do NOT set this value for production\nconfig :bcrypt_elixir, log_rounds: 1\n```","ref":"testing.html#when-using-the-password-strategy","title":"When using the Password strategy - Testing","type":"extras"},{"doc":"# Tokens","ref":"tokens.html","title":"Tokens","type":"extras"},{"doc":"Since refresh tokens are not yet included in `ash_authentication`, you should set the token lifetime to a reasonably long time to ensure a good user experience. Alternatively, refresh tokens can be implemented on your own.","ref":"tokens.html#token-lifetime","title":"Token Lifetime - Tokens","type":"extras"},{"doc":"Using `d:AshAuthentication.Dsl.authentication.tokens.require_token_presence_for_authentication?` inverts the token validation behaviour from requiring that tokens are not revoked to requiring any token presented by a client to be present in the token resource to be considered valid.\n\nRequires `store_all_tokens?` to be `true`.\n\n`store_all_tokens?` instructs `AshAuthentication` to keep track of all tokens issued to any user. This is optional behaviour with `ash_authentication` in order to preserve as much performance as possible.","ref":"tokens.html#requiring-token-storage","title":"Requiring Token Storage - Tokens","type":"extras"},{"doc":"Enabled with `d:AshAuthentication.Strategy.Password.authentication.strategies.password.sign_in_tokens_enabled?`\n\nSign in tokens can be generated on request by setting the `:token_type` context to `:sign_in` when calling the sign in action. You might do this when you need to generate a short lived token to be exchanged for a real token using the `validate_sign_in_token` route. This is used, for example, by `ash_authentication_phoenix` (since 1.7) to support signing in in a liveview, and then redirecting with a valid token to a controller action, allowing the liveview to show invalid username/password errors.","ref":"tokens.html#sign-in-tokens","title":"Sign in Tokens - Tokens","type":"extras"},{"doc":"# Upgrading","ref":"upgrading.html","title":"Upgrading","type":"extras"},{"doc":"Version 4.0.0 of AshAuthentication adds support for Ash 3.0 and in line with [a number of changes in Ash](`e:ash:upgrading-to-3.0.html`) there are some corresponding changes to Ash Authentication:\n\n- Token generation is enabled by default, meaning that you will have to explicitly set [`authentication.tokens.enabled?`](documentation/dsls/DSL:-AshAuthentication.md#authentication-tokens-enabled?) to `false` if you don't need them.\n\n- Sign in tokens are enabled by default in the password strategy. What this means is that instead of returning a regular user token on sign-in in the user's metadata, we generate a short-lived token which can be used to actually sign the user in. This is specifically to allow live-view based sign-in UIs to display an authentication error without requiring a page-load.","ref":"upgrading.html#upgrading-to-version-4-0-0","title":"Upgrading to version 4.0.0 - Upgrading","type":"extras"},{"doc":"As of version 3.6.0 the `TokenResource` extension adds the `subject` attribute\nwhich allows us to more easily match tokens to specific users. This unlocks\nsome new use-cases (eg sign out everywhere).\n\nThis means that you will need to generate new migrations and migrate your\ndatabase.","ref":"upgrading.html#upgrading-to-version-3-6-0","title":"Upgrading to version 3.6.0. - Upgrading","type":"extras"},{"doc":">","ref":"upgrading.html#upgrade-steps","title":"Upgrade steps: - Upgrading","type":"extras"},{"doc":">\n> If you already have tokens stored in your database then the migration will\n> likely throw a migration error due to the new `NOT NULL` constraint on\n> `subject`. If this happens then you can either delete all your tokens or\n> explicitly add the `subject` attribute to your resource with `allow_nil?` set\n> to `true`. eg:\n>\n> ```elixir\n> attributes do\n>   attribute :subject, :string, allow_nil?: true\n> end\n> ```\n\n1. Run `mix ash_postgres.generate_migrations --name=add_subject_to_token_resource`\n2. Run `mix ash_postgres.migrate`\n3. 🎉","ref":"upgrading.html#warning-warning","title":"Warning {: .warning} - Upgrading","type":"extras"},{"doc":"<!--\nThis file was generated by Spark. Do not edit it by hand.\n-->\n# DSL: AshAuthentication\n\nAshAuthentication provides a turn-key authentication solution for folks using\n[Ash](https://www.ash-hq.org/).","ref":"dsl-ashauthentication.html","title":"DSL: AshAuthentication","type":"extras"},{"doc":"This package assumes that you have [Ash](https://ash-hq.org/) installed and\nconfigured.  See the Ash documentation for details.\n\nOnce installed you can easily add support for authentication by configuring\nthe `AshAuthentication` extension on your resource:\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false\n    attribute :hashed_password, :string, allow_nil?: false, sensitive?: true\n  end\n\n  authentication do\n    strategies do\n      password :password do\n        identity_field :email\n        hashed_password_field :hashed_password\n      end\n    end\n  end\n\n  identities do\n    identity :unique_email, [:email]\n  end\nend\n```\n\nIf you plan on providing authentication via the web, then you will need to\ndefine a plug using `AshAuthentication.Plug` which builds a `Plug.Router` that\nroutes incoming authentication requests to the correct provider and provides\ncallbacks for you to manipulate the conn after success or failure.\n\nIf you're using AshAuthentication with Phoenix, then check out\n[`ash_authentication_phoenix`](https://github.com/team-alembic/ash_authentication_phoenix)\nwhich provides route helpers, a controller abstraction and LiveView components\nfor easy set up.","ref":"dsl-ashauthentication.html#usage","title":"Usage - DSL: AshAuthentication","type":"extras"},{"doc":"Currently supported strategies:\n\n1. `AshAuthentication.Strategy.Password`\n   - authenticate users against your local database using a unique identity\n   (such as username or email address) and a password.\n2. `AshAuthentication.Strategy.OAuth2`\n   - authenticate using local or remote [OAuth 2.0](https://oauth.net/2/) compatible services.\n   - also includes:\n     - `AshAuthentication.Strategy.Auth0`\n     - `AshAuthentication.Strategy.Github`\n     - `AshAuthentication.Strategy.Google`\n     - `AshAuthentication.Strategy.Oidc`\n3. `AshAuthentication.Strategy.MagicLink`\n   - authenticate by sending a single-use link to the user.","ref":"dsl-ashauthentication.html#authentication-strategies","title":"Authentication Strategies - DSL: AshAuthentication","type":"extras"},{"doc":"Most of the authentication strategies based on `OAuth2` wrap the [`assent`](https://hex.pm/packages/assent) package.\n\nIf you needs to customize the behavior of the http client used by `assent`, define a custom `http_adapter` in the \napplication settings:\n\n`config :ash_authentication, :http_adapter, {Assent.HTTPAdapter.Finch, supervisor: MyApp.CustomFinch}`\n\nSee [`assent's documentation`](https://hexdocs.pm/assent/README.html#http-client) for more details on the supported \nhttp clients and their configuration.","ref":"dsl-ashauthentication.html#http-client-settings","title":"HTTP client settings - DSL: AshAuthentication","type":"extras"},{"doc":"Add-ons are like strategies, except that they don't actually provide\nauthentication - they just provide features adjacent to authentication.\nCurrent add-ons:\n\n1. `AshAuthentication.AddOn.Confirmation`\n   - allows you to force the user to confirm changes using a confirmation\n     token (eg. sending a confirmation email when a new user registers).","ref":"dsl-ashauthentication.html#add-ons","title":"Add-ons - DSL: AshAuthentication","type":"extras"},{"doc":"Some add-ons or strategies may require processes to be started which manage\ntheir state over the lifetime of the application (eg periodically deleting\nexpired token revocations).  Because of this you should add\n`{AshAuthentication.Supervisor, otp_app: :my_app}` to your application's\nsupervision tree.  See [the Elixir\ndocs](https://hexdocs.pm/elixir/Application.html#module-the-application-callback-module)\nfor more information.","ref":"dsl-ashauthentication.html#supervisor","title":"Supervisor - DSL: AshAuthentication","type":"extras"},{"doc":"Configure authentication for this resource","ref":"dsl-ashauthentication.html#authentication","title":"authentication - DSL: AshAuthentication","type":"extras"},{"doc":"* [tokens](#authentication-tokens)\n * [strategies](#authentication-strategies)\n * [add_ons](#authentication-add_ons)","ref":"dsl-ashauthentication.html#nested-dsls","title":"Nested DSLs - DSL: AshAuthentication","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`subject_name`](#authentication-subject_name){: #authentication-subject_name } | `atom` |  | The subject name is used anywhere that a short version of your resource name is needed.  Must be unique system-wide and will be inferred from the resource name by default (ie `MyApp.Accounts.User` -> `user`). |\n| [`domain`](#authentication-domain){: #authentication-domain } | `module` |  | The name of the Ash domain to use to access this resource when doing anything authentication related. |\n| [`get_by_subject_action_name`](#authentication-get_by_subject_action_name){: #authentication-get_by_subject_action_name } | `atom` | `:get_by_subject` | The name of the read action used to retrieve records. If the action doesn't exist, one will be generated for you. |\n| [`select_for_senders`](#authentication-select_for_senders){: #authentication-select_for_senders } | `list(atom)` |  | A list of fields that we will ensure are selected whenever a sender will be invoked.  Defaults to `[:email]` if there is an `:email` attribute on the resource, and `[]` otherwise. |","ref":"dsl-ashauthentication.html#options","title":"Options - DSL: AshAuthentication","type":"extras"},{"doc":"Configure JWT settings for this resource","ref":"dsl-ashauthentication.html#authentication-tokens","title":"authentication.tokens - DSL: AshAuthentication","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`token_resource`](#authentication-tokens-token_resource){: #authentication-tokens-token_resource .spark-required} | `module \\| false` |  | The resource used to store token information, such as in-flight confirmations, revocations, and if `store_all_tokens?` is enabled, authentication tokens themselves. |\n| [`enabled?`](#authentication-tokens-enabled?){: #authentication-tokens-enabled? } | `boolean` | `false` | Should JWTs be generated by this resource? |\n| [`store_all_tokens?`](#authentication-tokens-store_all_tokens?){: #authentication-tokens-store_all_tokens? } | `boolean` | `false` | Store all tokens in the `token_resource`. See the [tokens guide](/documentation/topics/tokens.md) for more. |\n| [`require_token_presence_for_authentication?`](#authentication-tokens-require_token_presence_for_authentication?){: #authentication-tokens-require_token_presence_for_authentication? } | `boolean` | `false` | Require a locally-stored token for authentication. See the [tokens guide](/documentation/topics/tokens.md) for more. |\n| [`signing_algorithm`](#authentication-tokens-signing_algorithm){: #authentication-tokens-signing_algorithm } | `String.t` | `\"HS256\"` | The algorithm to use for token signing. Available signing algorithms are; EdDSA, Ed448ph, Ed448, Ed25519ph, Ed25519, PS512, PS384, PS256, ES512, ES384, ES256, RS512, RS384, RS256, HS512, HS384 and HS256. |\n| [`token_lifetime`](#authentication-tokens-token_lifetime){: #authentication-tokens-token_lifetime } | `pos_integer \\| {pos_integer, :days \\| :hours \\| :minutes \\| :seconds}` | `{14, :days}` | How long a token should be valid. See [the tokens guide](/documentation/topics/tokens.md) for more. |\n| [`signing_secret`](#authentication-tokens-signing_secret){: #authentication-tokens-signing_secret } | `(any, any -> any) \\| module \\| String.t` |  | The secret used to sign tokens.  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |","ref":"dsl-ashauthentication.html#options","title":"Options - DSL: AshAuthentication","type":"extras"},{"doc":"Configure authentication strategies on this resource","ref":"dsl-ashauthentication.html#authentication-strategies","title":"authentication.strategies - DSL: AshAuthentication","type":"extras"},{"doc":"Additional add-ons related to, but not providing authentication\n\n\n\n\n\n\n\n\n\n\n\n\n .spark-required::after { content: \"*\"; color: red !important; }","ref":"dsl-ashauthentication.html#authentication-add_ons","title":"authentication.add_ons - DSL: AshAuthentication","type":"extras"},{"doc":"<!--\nThis file was generated by Spark. Do not edit it by hand.\n-->\n# DSL: AshAuthentication.AddOn.Confirmation\n\nConfirmation support.\n\nSometimes when creating a new user, or changing a sensitive attribute (such as\ntheir email address) you may want to wait for the user to confirm by way of\nsending them a confirmation token to prove that it was really them that took\nthe action.\n\nIn order to add confirmation to your resource, it must been the following\nminimum requirements:\n\n1. Have a primary key\n2. Have at least one attribute you wish to confirm\n3. Tokens must be enabled","ref":"dsl-ashauthentication-addon-confirmation.html","title":"DSL: AshAuthentication.AddOn.Confirmation","type":"extras"},{"doc":"```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false\n  end\n\n  authentication do\n    add_ons do\n      confirmation :confirm do\n        monitor_fields [:email]\n        sender MyApp.ConfirmationSender\n      end\n    end\n\n    strategies do\n      # ...\n    end\n  end\n\n  identities do\n    identity :email, [:email] do\n      eager_check_with MyApp.Accounts\n    end\n  end\nend\n```","ref":"dsl-ashauthentication-addon-confirmation.html#example","title":"Example - DSL: AshAuthentication.AddOn.Confirmation","type":"extras"},{"doc":"A `confirmed_at` attribute will be added to your resource if it's not already\npresent (see `confirmed_at_field` in the DSL documentation).","ref":"dsl-ashauthentication-addon-confirmation.html#attributes","title":"Attributes - DSL: AshAuthentication.AddOn.Confirmation","type":"extras"},{"doc":"By default confirmation will add an action which updates the `confirmed_at`\nattribute as well as retrieving previously stored changes and applying them to\nthe resource.\n\nIf you wish to perform the confirm action directly from your code you can do\nso via the `AshAuthentication.Strategy` protocol.","ref":"dsl-ashauthentication-addon-confirmation.html#actions","title":"Actions - DSL: AshAuthentication.AddOn.Confirmation","type":"extras"},{"doc":"iex> strategy = Info.strategy!(Example.User, :confirm)\n    ...> {:ok, user} = Strategy.action(strategy, :confirm, %{\"confirm\" => confirmation_token()})\n    ...> user.confirmed_at >= one_second_ago()\n    true","ref":"dsl-ashauthentication-addon-confirmation.html#example","title":"Example - DSL: AshAuthentication.AddOn.Confirmation","type":"extras"},{"doc":"Confirmation provides a single endpoint for the `:confirm` phase.  If you wish\nto interact with the plugs directly, you can do so via the\n`AshAuthentication.Strategy` protocol.","ref":"dsl-ashauthentication-addon-confirmation.html#plugs","title":"Plugs - DSL: AshAuthentication.AddOn.Confirmation","type":"extras"},{"doc":"iex> strategy = Info.strategy!(Example.User, :confirm)\n    ...> conn = conn(:get, \"/user/confirm\", %{\"confirm\" => confirmation_token()})\n    ...> conn = Strategy.plug(strategy, :confirm, conn)\n    ...> {_conn, {:ok, user}} = Plug.Helpers.get_authentication_result(conn)\n    ...> user.confirmed_at >= one_second_ago()\n    true","ref":"dsl-ashauthentication-addon-confirmation.html#example","title":"Example - DSL: AshAuthentication.AddOn.Confirmation","type":"extras"},{"doc":"```elixir\nconfirmation name \\\\ :confirm\n```\n\n\nUser confirmation flow","ref":"dsl-ashauthentication-addon-confirmation.html#authentication-add_ons-confirmation","title":"authentication.add_ons.confirmation - DSL: AshAuthentication.AddOn.Confirmation","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`name`](#authentication-add_ons-confirmation-name){: #authentication-add_ons-confirmation-name .spark-required} | `atom` |  | Uniquely identifies the add-on. |","ref":"dsl-ashauthentication-addon-confirmation.html#arguments","title":"Arguments - DSL: AshAuthentication.AddOn.Confirmation","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`monitor_fields`](#authentication-add_ons-confirmation-monitor_fields){: #authentication-add_ons-confirmation-monitor_fields .spark-required} | `list(atom)` |  | A list of fields to monitor for changes. Confirmation will be sent when one of these fields are changed. |\n| [`sender`](#authentication-add_ons-confirmation-sender){: #authentication-add_ons-confirmation-sender .spark-required} | `(any, any, any -> any) \\| module` |  | How to send the confirmation instructions to the user. |\n| [`token_lifetime`](#authentication-add_ons-confirmation-token_lifetime){: #authentication-add_ons-confirmation-token_lifetime } | `pos_integer \\| {pos_integer, :days \\| :hours \\| :minutes \\| :seconds}` | `{3, :days}` | How long should the confirmation token be valid.  If no unit is provided, then hours is assumed. |\n| [`confirmed_at_field`](#authentication-add_ons-confirmation-confirmed_at_field){: #authentication-add_ons-confirmation-confirmed_at_field } | `atom` | `:confirmed_at` | The name of the field to store the time that the last confirmation took place. Created if it does not exist. |\n| [`confirm_on_create?`](#authentication-add_ons-confirmation-confirm_on_create?){: #authentication-add_ons-confirmation-confirm_on_create? } | `boolean` | `true` | Generate and send a confirmation token when a new resource is created. Triggers when a create action is executed _and_ one of the monitored fields is being set. |\n| [`confirm_on_update?`](#authentication-add_ons-confirmation-confirm_on_update?){: #authentication-add_ons-confirmation-confirm_on_update? } | `boolean` | `true` | Generate and send a confirmation token when a resource is changed.  Triggers when an update action is executed _and_ one of the monitored fields is being set. |\n| [`inhibit_updates?`](#authentication-add_ons-confirmation-inhibit_updates?){: #authentication-add_ons-confirmation-inhibit_updates? } | `boolean` | `true` | Whether or not to wait until confirmation is received before actually changing a monitored field. See [the confirmation guide](/documentation/topics/confirmation.md) for more. |\n| [`confirm_action_name`](#authentication-add_ons-confirmation-confirm_action_name){: #authentication-add_ons-confirmation-confirm_action_name } | `atom` | `:confirm` | The name of the action to use when performing confirmation. Will be created if it does not already exist. |","ref":"dsl-ashauthentication-addon-confirmation.html#options","title":"Options - DSL: AshAuthentication.AddOn.Confirmation","type":"extras"},{"doc":"Target: `AshAuthentication.AddOn.Confirmation`\n\n\n\n .spark-required::after { content: \"*\"; color: red !important; }","ref":"dsl-ashauthentication-addon-confirmation.html#introspection","title":"Introspection - DSL: AshAuthentication.AddOn.Confirmation","type":"extras"},{"doc":"<!--\nThis file was generated by Spark. Do not edit it by hand.\n-->\n# DSL: AshAuthentication.Strategy.Auth0\n\nStrategy for authenticating using [Auth0](https://auth0.com).\n\nThis strategy builds on-top of `AshAuthentication.Strategy.OAuth2` and\n[`assent`](https://hex.pm/packages/assent).\n\nIn order to use Auth0 you need to provide the following minimum configuration:\n\n  - `client_id`\n  - `redirect_uri`\n  - `client_secret`\n  - `site`","ref":"dsl-ashauthentication-strategy-auth0.html","title":"DSL: AshAuthentication.Strategy.Auth0","type":"extras"},{"doc":"- The [Auth0 Tutorial](/documentation/tutorial/auth0.md).\n- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)","ref":"dsl-ashauthentication-strategy-auth0.html#more-documentation","title":"More documentation: - DSL: AshAuthentication.Strategy.Auth0","type":"extras"},{"doc":"```elixir\nauth0 name \\\\ :auth0\n```\n\n\nProvides a pre-configured authentication strategy for [Auth0](https://auth0.com/).\n\nThis strategy is built using the `:oauth2` strategy, and thus provides all the same\nconfiguration options should you need them.\n\n###### More documentation:\n- The [Auth0 Tutorial](/documentation/tutorial/auth0.md).\n- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)\n\n###### Strategy defaults:\n\nThe following defaults are applied:\n\n* `:authorize_url` is set to `\"/authorize\"`.\n* `:token_url` is set to `\"/oauth/token\"`.\n* `:user_url` is set to `\"/userinfo\"`.\n* `:authorization_params` is set to `[scope: \"openid profile email\"]`.\n* `:auth_method` is set to `:client_secret_post`.","ref":"dsl-ashauthentication-strategy-auth0.html#authentication-strategies-auth0","title":"authentication.strategies.auth0 - DSL: AshAuthentication.Strategy.Auth0","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`name`](#authentication-strategies-auth0-name){: #authentication-strategies-auth0-name .spark-required} | `atom` |  | Uniquely identifies the strategy. |","ref":"dsl-ashauthentication-strategy-auth0.html#arguments","title":"Arguments - DSL: AshAuthentication.Strategy.Auth0","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`client_id`](#authentication-strategies-auth0-client_id){: #authentication-strategies-auth0-client_id .spark-required} | `(any, any -> any) \\| module \\| String.t` |  | The OAuth2 client ID.  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`redirect_uri`](#authentication-strategies-auth0-redirect_uri){: #authentication-strategies-auth0-redirect_uri .spark-required} | `(any, any -> any) \\| module \\| String.t` |  | The callback URI *base*. Not the whole URI back to the callback endpoint, but the URI to your `AuthPlug`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`base_url`](#authentication-strategies-auth0-base_url){: #authentication-strategies-auth0-base_url } | `(any, any -> any) \\| module \\| String.t` |  | The base URL of the OAuth2 server - including the leading protocol (ie `https://`).  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`site`](#authentication-strategies-auth0-site){: #authentication-strategies-auth0-site } | `(any, any -> any) \\| module \\| String.t` |  | Deprecated: Use `base_url` instead. |\n| [`auth_method`](#authentication-strategies-auth0-auth_method){: #authentication-strategies-auth0-auth_method } | `nil \\| :client_secret_basic \\| :client_secret_post \\| :client_secret_jwt \\| :private_key_jwt` | `:client_secret_post` | The authentication strategy used, optional. If not set, no authentication will be used during the access token request. |\n| [`client_secret`](#authentication-strategies-auth0-client_secret){: #authentication-strategies-auth0-client_secret } | `(any, any -> any) \\| module \\| String.t` |  | The OAuth2 client secret. Required if :auth_method is `:client_secret_basic`, `:client_secret_post` or `:client_secret_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`authorize_url`](#authentication-strategies-auth0-authorize_url){: #authentication-strategies-auth0-authorize_url } | `(any, any -> any) \\| module \\| String.t` | `\"/authorize\"` | The API url to the OAuth2 authorize endpoint, relative to `site`, e.g `authorize_url fn _, _ -> {:ok, \"https://exampe.com/authorize\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`token_url`](#authentication-strategies-auth0-token_url){: #authentication-strategies-auth0-token_url } | `(any, any -> any) \\| module \\| String.t` | `\"/oauth/token\"` | The API url to access the token endpoint, relative to `site`, e.g `token_url fn _, _ -> {:ok, \"https://example.com/oauth_token\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`trusted_audiences`](#authentication-strategies-auth0-trusted_audiences){: #authentication-strategies-auth0-trusted_audiences } | `(any, any -> any) \\| module \\| list(any) \\| nil` |  | A list of audiences which are trusted. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`user_url`](#authentication-strategies-auth0-user_url){: #authentication-strategies-auth0-user_url } | `(any, any -> any) \\| module \\| String.t` | `\"/userinfo\"` | The API url to access the user endpoint, relative to `site`, e.g `user_url fn _, _ -> {:ok, \"https://example.com/userinfo\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`private_key`](#authentication-strategies-auth0-private_key){: #authentication-strategies-auth0-private_key } | `(any, any -> any) \\| module \\| String.t` |  | The private key to use if `:auth_method` is `:private_key_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`authorization_params`](#authentication-strategies-auth0-authorization_params){: #authentication-strategies-auth0-authorization_params } | `keyword` | `[scope: \"openid profile email\"]` | Any additional parameters to encode in the request phase. eg: `authorization_params scope: \"openid profile email\"` |\n| [`registration_enabled?`](#authentication-strategies-auth0-registration_enabled?){: #authentication-strategies-auth0-registration_enabled? } | `boolean` | `true` | If enabled, new users will be able to register for your site when authenticating and not already present. If not, only existing users will be able to authenticate. |\n| [`register_action_name`](#authentication-strategies-auth0-register_action_name){: #authentication-strategies-auth0-register_action_name } | `atom` |  | The name of the action to use to register a user, if `registration_enabled?` is `true`. Defaults to `register_with_ ` See the \"Registration and Sign-in\" section of the strategy docs for more. |\n| [`sign_in_action_name`](#authentication-strategies-auth0-sign_in_action_name){: #authentication-strategies-auth0-sign_in_action_name } | `atom` |  | The name of the action to use to sign in an existing user, if `sign_in_enabled?` is `true`. Defaults to `sign_in_with_ `, which is generated for you by default. See the \"Registration and Sign-in\" section of the strategy docs for more information. |\n| [`identity_resource`](#authentication-strategies-auth0-identity_resource){: #authentication-strategies-auth0-identity_resource } | `module \\| false` | `false` | The resource used to store user identities, or `false` to disable. See the User Identities section of the strategy docs for more. |\n| [`identity_relationship_name`](#authentication-strategies-auth0-identity_relationship_name){: #authentication-strategies-auth0-identity_relationship_name } | `atom` | `:identities` | Name of the relationship to the provider identities resource |\n| [`identity_relationship_user_id_attribute`](#authentication-strategies-auth0-identity_relationship_user_id_attribute){: #authentication-strategies-auth0-identity_relationship_user_id_attribute } | `atom` | `:user_id` | The name of the destination (user_id) attribute on your provider identity resource. Only necessary if you've changed the `user_id_attribute_name` option of the provider identity. |","ref":"dsl-ashauthentication-strategy-auth0.html#options","title":"Options - DSL: AshAuthentication.Strategy.Auth0","type":"extras"},{"doc":"Target: `AshAuthentication.Strategy.OAuth2`\n\n\n\n .spark-required::after { content: \"*\"; color: red !important; }","ref":"dsl-ashauthentication-strategy-auth0.html#introspection","title":"Introspection - DSL: AshAuthentication.Strategy.Auth0","type":"extras"},{"doc":"<!--\nThis file was generated by Spark. Do not edit it by hand.\n-->\n# DSL: AshAuthentication.Strategy.Github\n\nStrategy for authenticating using [GitHub](https://github.com)\n\nThis strategy builds on-top of `AshAuthentication.Strategy.OAuth2` and\n[`assent`](https://hex.pm/packages/assent).\n\nIn order to use GitHub you need to provide the following minimum configuration:\n\n  - `client_id`\n  - `redirect_uri`\n  - `client_secret`","ref":"dsl-ashauthentication-strategy-github.html","title":"DSL: AshAuthentication.Strategy.Github","type":"extras"},{"doc":"- The [GitHub Tutorial](/documentation/tutorial/github.md).\n- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)","ref":"dsl-ashauthentication-strategy-github.html#more-documentation","title":"More documentation: - DSL: AshAuthentication.Strategy.Github","type":"extras"},{"doc":"```elixir\ngithub name \\\\ :github\n```\n\n\nProvides a pre-configured authentication strategy for [GitHub](https://github.com/).\n\nThis strategy is built using the `:oauth2` strategy, and thus provides all the same\nconfiguration options should you need them.\n\n###### More documentation:\n- The [GitHub Tutorial](/documentation/tutorial/github.md).\n- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)\n\n###### Strategy defaults:\n\nThe following defaults are applied:\n\n* `:base_url` is set to `\"https://api.github.com\"`.\n* `:authorize_url` is set to `\"https://github.com/login/oauth/authorize\"`.\n* `:token_url` is set to `\"https://github.com/login/oauth/access_token\"`.\n* `:user_url` is set to `\"/user\"`.\n* `:user_emails_url` is set to `\"/user/emails\"`.\n* `:authorization_params` is set to `[scope: \"read:user,user:email\"]`.\n* `:auth_method` is set to `:client_secret_post`.","ref":"dsl-ashauthentication-strategy-github.html#authentication-strategies-github","title":"authentication.strategies.github - DSL: AshAuthentication.Strategy.Github","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`name`](#authentication-strategies-github-name){: #authentication-strategies-github-name .spark-required} | `atom` |  | Uniquely identifies the strategy. |","ref":"dsl-ashauthentication-strategy-github.html#arguments","title":"Arguments - DSL: AshAuthentication.Strategy.Github","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`client_id`](#authentication-strategies-github-client_id){: #authentication-strategies-github-client_id .spark-required} | `(any, any -> any) \\| module \\| String.t` |  | The OAuth2 client ID.  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`redirect_uri`](#authentication-strategies-github-redirect_uri){: #authentication-strategies-github-redirect_uri .spark-required} | `(any, any -> any) \\| module \\| String.t` |  | The callback URI *base*. Not the whole URI back to the callback endpoint, but the URI to your `AuthPlug`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`base_url`](#authentication-strategies-github-base_url){: #authentication-strategies-github-base_url } | `(any, any -> any) \\| module \\| String.t` | `\"https://api.github.com\"` | The base URL of the OAuth2 server - including the leading protocol (ie `https://`).  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`site`](#authentication-strategies-github-site){: #authentication-strategies-github-site } | `(any, any -> any) \\| module \\| String.t` |  | Deprecated: Use `base_url` instead. |\n| [`auth_method`](#authentication-strategies-github-auth_method){: #authentication-strategies-github-auth_method } | `nil \\| :client_secret_basic \\| :client_secret_post \\| :client_secret_jwt \\| :private_key_jwt` | `:client_secret_post` | The authentication strategy used, optional. If not set, no authentication will be used during the access token request. |\n| [`client_secret`](#authentication-strategies-github-client_secret){: #authentication-strategies-github-client_secret } | `(any, any -> any) \\| module \\| String.t` |  | The OAuth2 client secret. Required if :auth_method is `:client_secret_basic`, `:client_secret_post` or `:client_secret_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`authorize_url`](#authentication-strategies-github-authorize_url){: #authentication-strategies-github-authorize_url } | `(any, any -> any) \\| module \\| String.t` | `\"https://github.com/login/oauth/authorize\"` | The API url to the OAuth2 authorize endpoint, relative to `site`, e.g `authorize_url fn _, _ -> {:ok, \"https://exampe.com/authorize\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`token_url`](#authentication-strategies-github-token_url){: #authentication-strategies-github-token_url } | `(any, any -> any) \\| module \\| String.t` | `\"https://github.com/login/oauth/access_token\"` | The API url to access the token endpoint, relative to `site`, e.g `token_url fn _, _ -> {:ok, \"https://example.com/oauth_token\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`trusted_audiences`](#authentication-strategies-github-trusted_audiences){: #authentication-strategies-github-trusted_audiences } | `(any, any -> any) \\| module \\| list(any) \\| nil` |  | A list of audiences which are trusted. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`user_url`](#authentication-strategies-github-user_url){: #authentication-strategies-github-user_url } | `(any, any -> any) \\| module \\| String.t` | `\"/user\"` | The API url to access the user endpoint, relative to `site`, e.g `user_url fn _, _ -> {:ok, \"https://example.com/userinfo\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`private_key`](#authentication-strategies-github-private_key){: #authentication-strategies-github-private_key } | `(any, any -> any) \\| module \\| String.t` |  | The private key to use if `:auth_method` is `:private_key_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`authorization_params`](#authentication-strategies-github-authorization_params){: #authentication-strategies-github-authorization_params } | `keyword` | `[scope: \"read:user,user:email\"]` | Any additional parameters to encode in the request phase. eg: `authorization_params scope: \"openid profile email\"` |\n| [`registration_enabled?`](#authentication-strategies-github-registration_enabled?){: #authentication-strategies-github-registration_enabled? } | `boolean` | `true` | If enabled, new users will be able to register for your site when authenticating and not already present. If not, only existing users will be able to authenticate. |\n| [`register_action_name`](#authentication-strategies-github-register_action_name){: #authentication-strategies-github-register_action_name } | `atom` |  | The name of the action to use to register a user, if `registration_enabled?` is `true`. Defaults to `register_with_ ` See the \"Registration and Sign-in\" section of the strategy docs for more. |\n| [`sign_in_action_name`](#authentication-strategies-github-sign_in_action_name){: #authentication-strategies-github-sign_in_action_name } | `atom` |  | The name of the action to use to sign in an existing user, if `sign_in_enabled?` is `true`. Defaults to `sign_in_with_ `, which is generated for you by default. See the \"Registration and Sign-in\" section of the strategy docs for more information. |\n| [`identity_resource`](#authentication-strategies-github-identity_resource){: #authentication-strategies-github-identity_resource } | `module \\| false` | `false` | The resource used to store user identities, or `false` to disable. See the User Identities section of the strategy docs for more. |\n| [`identity_relationship_name`](#authentication-strategies-github-identity_relationship_name){: #authentication-strategies-github-identity_relationship_name } | `atom` | `:identities` | Name of the relationship to the provider identities resource |\n| [`identity_relationship_user_id_attribute`](#authentication-strategies-github-identity_relationship_user_id_attribute){: #authentication-strategies-github-identity_relationship_user_id_attribute } | `atom` | `:user_id` | The name of the destination (user_id) attribute on your provider identity resource. Only necessary if you've changed the `user_id_attribute_name` option of the provider identity. |","ref":"dsl-ashauthentication-strategy-github.html#options","title":"Options - DSL: AshAuthentication.Strategy.Github","type":"extras"},{"doc":"Target: `AshAuthentication.Strategy.OAuth2`\n\n\n\n .spark-required::after { content: \"*\"; color: red !important; }","ref":"dsl-ashauthentication-strategy-github.html#introspection","title":"Introspection - DSL: AshAuthentication.Strategy.Github","type":"extras"},{"doc":"<!--\nThis file was generated by Spark. Do not edit it by hand.\n-->\n# DSL: AshAuthentication.Strategy.Google\n\nStrategy for authenticating using [Google](https://google.com)\n\nThis strategy builds on-top of `AshAuthentication.Strategy.OAuth2` and\n[`assent`](https://hex.pm/packages/assent).\n\nIn order to use Google you need to provide the following minimum configuration:\n\n  - `client_id`\n  - `redirect_uri`\n  - `client_secret`\n  - `site`","ref":"dsl-ashauthentication-strategy-google.html","title":"DSL: AshAuthentication.Strategy.Google","type":"extras"},{"doc":"- The [Google OAuth 2.0 Overview](https://developers.google.com/identity/protocols/oauth2).\n- The [Google Tutorial](/documentation/tutorial/google.md)\n- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)","ref":"dsl-ashauthentication-strategy-google.html#more-documentation","title":"More documentation: - DSL: AshAuthentication.Strategy.Google","type":"extras"},{"doc":"```elixir\ngoogle name \\\\ :google\n```\n\n\nProvides a pre-configured authentication strategy for [Google](https://google.com/).\n\nThis strategy is built using the `:oauth2` strategy, and thus provides all the same\nconfiguration options should you need them.\n\n#### More documentation:\n- The [Google OAuth 2.0 Overview](https://developers.google.com/identity/protocols/oauth2).\n- The [Google Tutorial](/documentation/tutorial/google.md)\n- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)\n\n###### Strategy defaults:\n\nThe following defaults are applied:\n\n* `:base_url` is set to `\"https://www.googleapis.com\"`.\n* `:authorize_url` is set to `\"https://accounts.google.com/o/oauth2/v2/auth\"`.\n* `:token_url` is set to `\"/oauth2/v4/token\"`.\n* `:user_url` is set to `\"/oauth2/v3/userinfo\"`.\n* `:authorization_params` is set to `[scope: \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile\"]`.\n* `:auth_method` is set to `:client_secret_post`.","ref":"dsl-ashauthentication-strategy-google.html#authentication-strategies-google","title":"authentication.strategies.google - DSL: AshAuthentication.Strategy.Google","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`name`](#authentication-strategies-google-name){: #authentication-strategies-google-name .spark-required} | `atom` |  | Uniquely identifies the strategy. |","ref":"dsl-ashauthentication-strategy-google.html#arguments","title":"Arguments - DSL: AshAuthentication.Strategy.Google","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`client_id`](#authentication-strategies-google-client_id){: #authentication-strategies-google-client_id .spark-required} | `(any, any -> any) \\| module \\| String.t` |  | The OAuth2 client ID.  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`redirect_uri`](#authentication-strategies-google-redirect_uri){: #authentication-strategies-google-redirect_uri .spark-required} | `(any, any -> any) \\| module \\| String.t` |  | The callback URI *base*. Not the whole URI back to the callback endpoint, but the URI to your `AuthPlug`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`base_url`](#authentication-strategies-google-base_url){: #authentication-strategies-google-base_url } | `(any, any -> any) \\| module \\| String.t` | `\"https://www.googleapis.com\"` | The base URL of the OAuth2 server - including the leading protocol (ie `https://`).  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`site`](#authentication-strategies-google-site){: #authentication-strategies-google-site } | `(any, any -> any) \\| module \\| String.t` |  | Deprecated: Use `base_url` instead. |\n| [`auth_method`](#authentication-strategies-google-auth_method){: #authentication-strategies-google-auth_method } | `nil \\| :client_secret_basic \\| :client_secret_post \\| :client_secret_jwt \\| :private_key_jwt` | `:client_secret_post` | The authentication strategy used, optional. If not set, no authentication will be used during the access token request. |\n| [`client_secret`](#authentication-strategies-google-client_secret){: #authentication-strategies-google-client_secret } | `(any, any -> any) \\| module \\| String.t` |  | The OAuth2 client secret. Required if :auth_method is `:client_secret_basic`, `:client_secret_post` or `:client_secret_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`authorize_url`](#authentication-strategies-google-authorize_url){: #authentication-strategies-google-authorize_url } | `(any, any -> any) \\| module \\| String.t` | `\"https://accounts.google.com/o/oauth2/v2/auth\"` | The API url to the OAuth2 authorize endpoint, relative to `site`, e.g `authorize_url fn _, _ -> {:ok, \"https://exampe.com/authorize\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`token_url`](#authentication-strategies-google-token_url){: #authentication-strategies-google-token_url } | `(any, any -> any) \\| module \\| String.t` | `\"/oauth2/v4/token\"` | The API url to access the token endpoint, relative to `site`, e.g `token_url fn _, _ -> {:ok, \"https://example.com/oauth_token\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`trusted_audiences`](#authentication-strategies-google-trusted_audiences){: #authentication-strategies-google-trusted_audiences } | `(any, any -> any) \\| module \\| list(any) \\| nil` |  | A list of audiences which are trusted. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`user_url`](#authentication-strategies-google-user_url){: #authentication-strategies-google-user_url } | `(any, any -> any) \\| module \\| String.t` | `\"/oauth2/v3/userinfo\"` | The API url to access the user endpoint, relative to `site`, e.g `user_url fn _, _ -> {:ok, \"https://example.com/userinfo\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`private_key`](#authentication-strategies-google-private_key){: #authentication-strategies-google-private_key } | `(any, any -> any) \\| module \\| String.t` |  | The private key to use if `:auth_method` is `:private_key_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`authorization_params`](#authentication-strategies-google-authorization_params){: #authentication-strategies-google-authorization_params } | `keyword` | `[scope: \"https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile\"]` | Any additional parameters to encode in the request phase. eg: `authorization_params scope: \"openid profile email\"` |\n| [`registration_enabled?`](#authentication-strategies-google-registration_enabled?){: #authentication-strategies-google-registration_enabled? } | `boolean` | `true` | If enabled, new users will be able to register for your site when authenticating and not already present. If not, only existing users will be able to authenticate. |\n| [`register_action_name`](#authentication-strategies-google-register_action_name){: #authentication-strategies-google-register_action_name } | `atom` |  | The name of the action to use to register a user, if `registration_enabled?` is `true`. Defaults to `register_with_ ` See the \"Registration and Sign-in\" section of the strategy docs for more. |\n| [`sign_in_action_name`](#authentication-strategies-google-sign_in_action_name){: #authentication-strategies-google-sign_in_action_name } | `atom` |  | The name of the action to use to sign in an existing user, if `sign_in_enabled?` is `true`. Defaults to `sign_in_with_ `, which is generated for you by default. See the \"Registration and Sign-in\" section of the strategy docs for more information. |\n| [`identity_resource`](#authentication-strategies-google-identity_resource){: #authentication-strategies-google-identity_resource } | `module \\| false` | `false` | The resource used to store user identities, or `false` to disable. See the User Identities section of the strategy docs for more. |\n| [`identity_relationship_name`](#authentication-strategies-google-identity_relationship_name){: #authentication-strategies-google-identity_relationship_name } | `atom` | `:identities` | Name of the relationship to the provider identities resource |\n| [`identity_relationship_user_id_attribute`](#authentication-strategies-google-identity_relationship_user_id_attribute){: #authentication-strategies-google-identity_relationship_user_id_attribute } | `atom` | `:user_id` | The name of the destination (user_id) attribute on your provider identity resource. Only necessary if you've changed the `user_id_attribute_name` option of the provider identity. |","ref":"dsl-ashauthentication-strategy-google.html#options","title":"Options - DSL: AshAuthentication.Strategy.Google","type":"extras"},{"doc":"Target: `AshAuthentication.Strategy.OAuth2`\n\n\n\n .spark-required::after { content: \"*\"; color: red !important; }","ref":"dsl-ashauthentication-strategy-google.html#introspection","title":"Introspection - DSL: AshAuthentication.Strategy.Google","type":"extras"},{"doc":"<!--\nThis file was generated by Spark. Do not edit it by hand.\n-->\n# DSL: AshAuthentication.Strategy.MagicLink\n\nStrategy for authentication using a magic link.\n\nIn order to use magic link authentication your resource needs to meet the\nfollowing minimum requirements:\n\n1. Have a primary key.\n2. A uniquely constrained identity field (eg `username` or `email`)\n3. Have tokens enabled.\n\nThere are other options documented in the DSL.","ref":"dsl-ashauthentication-strategy-magiclink.html","title":"DSL: AshAuthentication.Strategy.MagicLink","type":"extras"},{"doc":"```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false\n  end\n\n  authentication do\n    strategies do\n      magic_link do\n        identity_field :email\n        sender fn user, token, _opts ->\n          MyApp.Emails.deliver_magic_link(user, token)\n        end\n      end\n    end\n  end\n\n  identities do\n    identity :unique_email, [:email]\n  end\nend\n```","ref":"dsl-ashauthentication-strategy-magiclink.html#example","title":"Example - DSL: AshAuthentication.Strategy.MagicLink","type":"extras"},{"doc":"By default the magic link strategy will automatically generate the request and\nsign-in actions for you, however you're free to define them yourself.  If you\ndo, then the action will be validated to ensure that all the needed\nconfiguration is present.\n\nIf you wish to work with the actions directly from your code you can do so via\nthe `AshAuthentication.Strategy` protocol.","ref":"dsl-ashauthentication-strategy-magiclink.html#actions","title":"Actions - DSL: AshAuthentication.Strategy.MagicLink","type":"extras"},{"doc":"Requesting that a magic link token is sent for a user:\n\n    iex> strategy = Info.strategy!(Example.User, :magic_link)\n    ...> user = build_user()\n    ...> Strategy.action(strategy, :request, %{\"username\" => user.username})\n    :ok\n\nSigning in using a magic link token:\n\n    ...> {:ok, token} = MagicLink.request_token_for(strategy, user)\n    ...> {:ok, signed_in_user} = Strategy.action(strategy, :sign_in, %{\"token\" => token})\n    ...> signed_in_user.id == user\n    true","ref":"dsl-ashauthentication-strategy-magiclink.html#examples","title":"Examples - DSL: AshAuthentication.Strategy.MagicLink","type":"extras"},{"doc":"The magic link strategy provides plug endpoints for both request and sign-in\nactions.\n\nIf you wish to work with the plugs directly, you can do so via the\n`AshAuthentication.Strategy` protocol.","ref":"dsl-ashauthentication-strategy-magiclink.html#plugs","title":"Plugs - DSL: AshAuthentication.Strategy.MagicLink","type":"extras"},{"doc":"Dispatching to plugs directly:\n\n    iex> strategy = Info.strategy!(Example.User, :magic_link)\n    ...> user = build_user()\n    ...> conn = conn(:post, \"/user/magic_link/request\", %{\"user\" => %{\"username\" => user.username}})\n    ...> conn = Strategy.plug(strategy, :request, conn)\n    ...> {_conn, {:ok, nil}} = Plug.Helpers.get_authentication_result(conn)\n\n    ...> {:ok, token} = MagicLink.request_token_for(strategy, user)\n    ...> conn = conn(:get, \"/user/magic_link\", %{\"token\" => token})\n    ...> conn = Strategy.plug(strategy, :sign_in, conn)\n    ...> {_conn, {:ok, signed_in_user}} = Plug.Helpers.get_authentication_result(conn)\n    ...> signed_in_user.id == user.id\n    true\n\nSee the [Magic Link Tutorial](/documentation/tutorial/magic-links.md) for more information.","ref":"dsl-ashauthentication-strategy-magiclink.html#examples","title":"Examples: - DSL: AshAuthentication.Strategy.MagicLink","type":"extras"},{"doc":"```elixir\nmagic_link name \\\\ :magic_link\n```\n\n\nStrategy for authenticating using local users with a magic link","ref":"dsl-ashauthentication-strategy-magiclink.html#authentication-strategies-magic_link","title":"authentication.strategies.magic_link - DSL: AshAuthentication.Strategy.MagicLink","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`sender`](#authentication-strategies-magic_link-sender){: #authentication-strategies-magic_link-sender .spark-required} | `(any, any, any -> any) \\| module` |  | How to send the magic link to the user. |\n| [`identity_field`](#authentication-strategies-magic_link-identity_field){: #authentication-strategies-magic_link-identity_field } | `atom` | `:username` | The name of the attribute which uniquely identifies the user, usually something like `username` or `email_address`. |\n| [`token_lifetime`](#authentication-strategies-magic_link-token_lifetime){: #authentication-strategies-magic_link-token_lifetime } | `pos_integer \\| {pos_integer, :days \\| :hours \\| :minutes \\| :seconds}` | `{10, :minutes}` | How long the sign in token is valid.  If no unit is provided, then `minutes` is assumed. |\n| [`request_action_name`](#authentication-strategies-magic_link-request_action_name){: #authentication-strategies-magic_link-request_action_name } | `atom` |  | The name to use for the request action. Defaults to `request_ ` |\n| [`single_use_token?`](#authentication-strategies-magic_link-single_use_token?){: #authentication-strategies-magic_link-single_use_token? } | `boolean` | `true` | Automatically revoke the token once it's been used for sign in. |\n| [`sign_in_action_name`](#authentication-strategies-magic_link-sign_in_action_name){: #authentication-strategies-magic_link-sign_in_action_name } | `atom` |  | The name to use for the sign in action. Defaults to `sign_in_with_ ` |\n| [`token_param_name`](#authentication-strategies-magic_link-token_param_name){: #authentication-strategies-magic_link-token_param_name } | `atom` | `:token` | The name of the token parameter in the incoming sign-in request. |","ref":"dsl-ashauthentication-strategy-magiclink.html#options","title":"Options - DSL: AshAuthentication.Strategy.MagicLink","type":"extras"},{"doc":"Target: `AshAuthentication.Strategy.MagicLink`\n\n\n\n .spark-required::after { content: \"*\"; color: red !important; }","ref":"dsl-ashauthentication-strategy-magiclink.html#introspection","title":"Introspection - DSL: AshAuthentication.Strategy.MagicLink","type":"extras"},{"doc":"<!--\nThis file was generated by Spark. Do not edit it by hand.\n-->\n# DSL: AshAuthentication.Strategy.OAuth2\n\nStrategy for authenticating using an OAuth 2.0 server as the source of truth.\n\nThis strategy wraps the excellent [`assent`](https://hex.pm/packages/assent)\npackage, which provides OAuth 2.0 capabilities.\n\nIn order to use OAuth 2.0 authentication on your resource, it needs to meet\nthe following minimum criteria:\n\n1. Have a primary key.\n2. Provide a strategy-specific action, either register or sign-in.\n3. Provide configuration for OAuth2 destinations, secrets, etc.","ref":"dsl-ashauthentication-strategy-oauth2.html","title":"DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":"```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false\n  end\n\n  authentication do\n    strategies do\n      oauth2 :example do\n        client_id \"OAuth Client ID\"\n        redirect_uri \"https://my.app/\"\n        client_secret \"My Super Secret Secret\"\n        site \"https://auth.example.com/\"\n      end\n    end\n  end\nend\n```","ref":"dsl-ashauthentication-strategy-oauth2.html#example","title":"Example: - DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":"In order to use OAuth 2.0 you need to provide a varying number of secrets and\nother configuration which may change based on runtime environment.  The\n`AshAuthentication.Secret` behaviour is provided to accommodate this.  This\nallows you to provide configuration either directly on the resource (ie as a\nstring), as an anonymous function, or as a module.\n\n>","ref":"dsl-ashauthentication-strategy-oauth2.html#secrets-and-runtime-configuration","title":"Secrets and runtime configuration - DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":">\n> We **strongly** urge you not to share actual secrets in your code or\n> repository.","ref":"dsl-ashauthentication-strategy-oauth2.html#warning-warning","title":"Warning {: .warning} - DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":"Providing configuration as an anonymous function:\n\n```elixir\noauth2 do\n  client_secret fn _path, resource ->\n    Application.fetch_env(:my_app, resource, :oauth2_client_secret)\n  end\nend\n```\n\nProviding configuration as a module:\n\n```elixir\ndefmodule MyApp.Secrets do\n  use AshAuthentication.Secret\n\n  def secret_for([:authentication, :strategies, :example, :client_secret], MyApp.User, _opts), do: Application.fetch_env(:my_app, :oauth2_client_secret)\nend\n\n# and in your strategies:\n\noauth2 :example do\n  client_secret MyApp.Secrets\nend\n```","ref":"dsl-ashauthentication-strategy-oauth2.html#examples","title":"Examples: - DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":"Because your users can be signed in via multiple providers at once, you can\nspecify an `identity_resource` in the DSL configuration which points to a\nseperate Ash resource which has the `AshAuthentication.UserIdentity` extension\npresent. This resource will be used to store details of the providers in use\nby each user and a relationship will be added to the user resource.\n\nSetting the `identity_resource` will cause extra validations to be applied to\nyour resource so that changes are tracked correctly on sign-in or\nregistration.","ref":"dsl-ashauthentication-strategy-oauth2.html#user-identities","title":"User identities - DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":"When using an OAuth 2.0 provider you need to declare either a \"register\" or\n\"sign-in\" action.  The reason for this is that it's not possible for us to\nknow ahead of time how you want to manage the link between your user resources\nand the \"user info\" provided by the OAuth server.\n\nBoth actions receive the following two arguments:\n\n1. `user_info` - a map with string keys containing the [OpenID Successful\n   UserInfo\n   response](https://openid.net/specs/openid-connect-core-1_0.html#UserInfoResponse).\n   Usually this will be used to populate your email, nickname or other\n   identifying field.\n2. `oauth_tokens` a map with string keys containing the [OpenID Successful\n   Token\n   response](https://openid.net/specs/openid-connect-core-1_0.html#TokenResponse)\n   (or similar).\n\nThe actions themselves can be interacted with directly via the\n`AshAuthentication.Strategy` protocol, but you are more likely to interact\nwith them via the web/plugs.","ref":"dsl-ashauthentication-strategy-oauth2.html#actions","title":"Actions - DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":"The sign-in action is called when a successful OAuth2 callback is received.\nYou should use it to constrain the query to the correct user based on the\narguments provided.\n\nThis action is only needed when the `registration_enabled?` DSL settings is\nset to `false`.","ref":"dsl-ashauthentication-strategy-oauth2.html#sign-in","title":"Sign-in - DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":"The register action is a little more complicated than the sign-in action,\nbecause we cannot tell the difference between a new user and a returning user\n(they all use the same OAuth flow).  In order to handle this your register\naction must be defined as an upsert with a configured `upsert_identity` (see\nexample below).","ref":"dsl-ashauthentication-strategy-oauth2.html#registration","title":"Registration - DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":"Providing sign-in to users who already exist in the database (and by extension\nrejecting new users):\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false\n  end\n\n  actions do\n    read :sign_in_with_example do\n      argument :user_info, :map, allow_nil?: false\n      argument :oauth_tokens, :map, allow_nil?: false\n      prepare AshAuthentication.Strategy.OAuth2.SignInPreparation\n\n      filter expr(email == get_path(^arg(:user_info), [:email]))\n    end\n  end\n\n  authentication do\n    strategies do\n      oauth2 :example do\n        registration_enabled? false\n      end\n    end\n  end\nend\n```\n\nProviding registration or sign-in to all comers:\n\n```elixir\ndefmodule MyApp.Accounts.User do\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false\n  end\n\n  actions do\n    create :register_with_oauth2 do\n      argument :user_info, :map, allow_nil?: false\n      argument :oauth_tokens, :map, allow_nil?: false\n      upsert? true\n      upsert_identity :email\n\n      change AshAuthentication.GenerateTokenChange\n      change fn changeset, _ctx ->\n        user_info = Ash.Changeset.get_argument(changeset, :user_info)\n\n        changeset\n        |> Ash.Changeset.change_attribute(:email, user_info[\"email\"])\n      end\n    end\n  end\n\n  authentication do\n    strategies do\n      oauth2 :example do\n      end\n    end\n  end\nend\n```","ref":"dsl-ashauthentication-strategy-oauth2.html#examples","title":"Examples: - DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":"OAuth 2.0 is (usually) a browser-based flow. This means that you're most\nlikely to interact with this strategy via it's plugs.  There are two phases to\nauthentication with OAuth 2.0:\n\n1. The request phase, where the user's browser is redirected to the remote\n   authentication provider for authentication.\n2. The callback phase, where the provider redirects the user back to your app\n   to create a local database record, session, etc.","ref":"dsl-ashauthentication-strategy-oauth2.html#plugs","title":"Plugs - DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":"```elixir\noauth2 name \\\\ :oauth2\n```\n\n\nOAuth2 authentication","ref":"dsl-ashauthentication-strategy-oauth2.html#authentication-strategies-oauth2","title":"authentication.strategies.oauth2 - DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`name`](#authentication-strategies-oauth2-name){: #authentication-strategies-oauth2-name .spark-required} | `atom` |  | Uniquely identifies the strategy. |","ref":"dsl-ashauthentication-strategy-oauth2.html#arguments","title":"Arguments - DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`client_id`](#authentication-strategies-oauth2-client_id){: #authentication-strategies-oauth2-client_id .spark-required} | `(any, any -> any) \\| module \\| String.t` |  | The OAuth2 client ID.  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`authorize_url`](#authentication-strategies-oauth2-authorize_url){: #authentication-strategies-oauth2-authorize_url .spark-required} | `(any, any -> any) \\| module \\| String.t` |  | The API url to the OAuth2 authorize endpoint, relative to `site`, e.g `authorize_url fn _, _ -> {:ok, \"https://exampe.com/authorize\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`token_url`](#authentication-strategies-oauth2-token_url){: #authentication-strategies-oauth2-token_url .spark-required} | `(any, any -> any) \\| module \\| String.t` |  | The API url to access the token endpoint, relative to `site`, e.g `token_url fn _, _ -> {:ok, \"https://example.com/oauth_token\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`user_url`](#authentication-strategies-oauth2-user_url){: #authentication-strategies-oauth2-user_url .spark-required} | `(any, any -> any) \\| module \\| String.t` |  | The API url to access the user endpoint, relative to `site`, e.g `user_url fn _, _ -> {:ok, \"https://example.com/userinfo\"} end`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`redirect_uri`](#authentication-strategies-oauth2-redirect_uri){: #authentication-strategies-oauth2-redirect_uri .spark-required} | `(any, any -> any) \\| module \\| String.t` |  | The callback URI *base*. Not the whole URI back to the callback endpoint, but the URI to your `AuthPlug`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`base_url`](#authentication-strategies-oauth2-base_url){: #authentication-strategies-oauth2-base_url } | `(any, any -> any) \\| module \\| String.t` |  | The base URL of the OAuth2 server - including the leading protocol (ie `https://`).  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`site`](#authentication-strategies-oauth2-site){: #authentication-strategies-oauth2-site } | `(any, any -> any) \\| module \\| String.t` |  | Deprecated: Use `base_url` instead. |\n| [`auth_method`](#authentication-strategies-oauth2-auth_method){: #authentication-strategies-oauth2-auth_method } | `nil \\| :client_secret_basic \\| :client_secret_post \\| :client_secret_jwt \\| :private_key_jwt` | `:client_secret_post` | The authentication strategy used, optional. If not set, no authentication will be used during the access token request. |\n| [`client_secret`](#authentication-strategies-oauth2-client_secret){: #authentication-strategies-oauth2-client_secret } | `(any, any -> any) \\| module \\| String.t` |  | The OAuth2 client secret. Required if :auth_method is `:client_secret_basic`, `:client_secret_post` or `:client_secret_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`trusted_audiences`](#authentication-strategies-oauth2-trusted_audiences){: #authentication-strategies-oauth2-trusted_audiences } | `(any, any -> any) \\| module \\| list(any) \\| nil` |  | A list of audiences which are trusted. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`private_key`](#authentication-strategies-oauth2-private_key){: #authentication-strategies-oauth2-private_key } | `(any, any -> any) \\| module \\| String.t` |  | The private key to use if `:auth_method` is `:private_key_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`authorization_params`](#authentication-strategies-oauth2-authorization_params){: #authentication-strategies-oauth2-authorization_params } | `keyword` | `[]` | Any additional parameters to encode in the request phase. eg: `authorization_params scope: \"openid profile email\"` |\n| [`registration_enabled?`](#authentication-strategies-oauth2-registration_enabled?){: #authentication-strategies-oauth2-registration_enabled? } | `boolean` | `true` | If enabled, new users will be able to register for your site when authenticating and not already present. If not, only existing users will be able to authenticate. |\n| [`register_action_name`](#authentication-strategies-oauth2-register_action_name){: #authentication-strategies-oauth2-register_action_name } | `atom` |  | The name of the action to use to register a user, if `registration_enabled?` is `true`. Defaults to `register_with_ ` See the \"Registration and Sign-in\" section of the strategy docs for more. |\n| [`sign_in_action_name`](#authentication-strategies-oauth2-sign_in_action_name){: #authentication-strategies-oauth2-sign_in_action_name } | `atom` |  | The name of the action to use to sign in an existing user, if `sign_in_enabled?` is `true`. Defaults to `sign_in_with_ `, which is generated for you by default. See the \"Registration and Sign-in\" section of the strategy docs for more information. |\n| [`identity_resource`](#authentication-strategies-oauth2-identity_resource){: #authentication-strategies-oauth2-identity_resource } | `module \\| false` | `false` | The resource used to store user identities, or `false` to disable. See the User Identities section of the strategy docs for more. |\n| [`identity_relationship_name`](#authentication-strategies-oauth2-identity_relationship_name){: #authentication-strategies-oauth2-identity_relationship_name } | `atom` | `:identities` | Name of the relationship to the provider identities resource |\n| [`identity_relationship_user_id_attribute`](#authentication-strategies-oauth2-identity_relationship_user_id_attribute){: #authentication-strategies-oauth2-identity_relationship_user_id_attribute } | `atom` | `:user_id` | The name of the destination (user_id) attribute on your provider identity resource. Only necessary if you've changed the `user_id_attribute_name` option of the provider identity. |\n| [`icon`](#authentication-strategies-oauth2-icon){: #authentication-strategies-oauth2-icon } | `atom` | `:oauth2` | The name of an icon to use in any potential UI. This is a *hint* for UI generators to use, and not in any way canonical. |","ref":"dsl-ashauthentication-strategy-oauth2.html#options","title":"Options - DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":"Target: `AshAuthentication.Strategy.OAuth2`\n\n\n\n .spark-required::after { content: \"*\"; color: red !important; }","ref":"dsl-ashauthentication-strategy-oauth2.html#introspection","title":"Introspection - DSL: AshAuthentication.Strategy.OAuth2","type":"extras"},{"doc":"<!--\nThis file was generated by Spark. Do not edit it by hand.\n-->\n# DSL: AshAuthentication.Strategy.Oidc\n\nStrategy for authentication using an [OpenID\nConnect](https://openid.net/connect/) compatible server as the source of\ntruth.\n\nThis strategy builds on-top of `AshAuthentication.Strategy.OAuth2` and\n[`assent`](https://hex.pm/packages/assent).\n\nIn order to use OIDC you need to provide the following minimum configuration:\n\n- `client_id` - The client id, required\n- `site` - The OIDC issuer, required\n- `openid_configuration_uri` - The URI for OpenID Provider, optional, defaults\n  to `/.well-known/openid-configuration`\n- `client_authentication_method` - The Client Authentication method to use,\n  optional, defaults to `client_secret_basic`\n- `client_secret` - The client secret, required if\n  `:client_authentication_method` is `:client_secret_basic`,\n  `:client_secret_post`, or `:client_secret_jwt`\n- `openid_configuration` - The OpenID configuration, optional, the\n  configuration will be fetched from `:openid_configuration_uri` if this is\n  not defined\n- `id_token_signed_response_alg` - The `id_token_signed_response_alg`\n  parameter sent by the Client during Registration, defaults to `RS256`\n- `id_token_ttl_seconds` - The number of seconds from `iat` that an ID Token\n  will be considered valid, optional, defaults to nil\n- `nonce` - The nonce to use for authorization request, optional, MUST be\n  session based and unguessable.","ref":"dsl-ashauthentication-strategy-oidc.html","title":"DSL: AshAuthentication.Strategy.Oidc","type":"extras"},{"doc":"`nonce` can be set in the provider config. The `nonce` will be returned in the\n`session_params` along with `state`. You can use this to store the value in\nthe current session e.g. a httpOnly session cookie.\n\nA random value generator can look like this:\n\n```elixir\n16\n|> :crypto.strong_rand_bytes()\n|> Base.encode64(padding: false)\n```\n\nAshAuthentication will dynamically generate one for the session if `nonce` is\nset to `true`.","ref":"dsl-ashauthentication-strategy-oidc.html#nonce","title":"Nonce - DSL: AshAuthentication.Strategy.Oidc","type":"extras"},{"doc":"- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)","ref":"dsl-ashauthentication-strategy-oidc.html#more-documentation","title":"More documentation: - DSL: AshAuthentication.Strategy.Oidc","type":"extras"},{"doc":"```elixir\noidc name \\\\ :oidc\n```\n\n\nProvides an OpenID Connect authentication strategy.\n\nThis strategy is built using the `:oauth2` strategy, and thus provides\nall the same configuration options should you need them.\n\n###### More documentation:\n- The [OAuth2 documentation](`AshAuthentication.Strategy.OAuth2`)","ref":"dsl-ashauthentication-strategy-oidc.html#authentication-strategies-oidc","title":"authentication.strategies.oidc - DSL: AshAuthentication.Strategy.Oidc","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`name`](#authentication-strategies-oidc-name){: #authentication-strategies-oidc-name .spark-required} | `atom` |  | Uniquely identifies the strategy. |","ref":"dsl-ashauthentication-strategy-oidc.html#arguments","title":"Arguments - DSL: AshAuthentication.Strategy.Oidc","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`client_id`](#authentication-strategies-oidc-client_id){: #authentication-strategies-oidc-client_id .spark-required} | `(any, any -> any) \\| module \\| String.t` |  | The OAuth2 client ID.  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`base_url`](#authentication-strategies-oidc-base_url){: #authentication-strategies-oidc-base_url .spark-required} | `(any, any -> any) \\| module \\| String.t` |  | The base URL of the OAuth2 server - including the leading protocol (ie `https://`).  Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`redirect_uri`](#authentication-strategies-oidc-redirect_uri){: #authentication-strategies-oidc-redirect_uri .spark-required} | `(any, any -> any) \\| module \\| String.t` |  | The callback URI *base*. Not the whole URI back to the callback endpoint, but the URI to your `AuthPlug`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`site`](#authentication-strategies-oidc-site){: #authentication-strategies-oidc-site } | `(any, any -> any) \\| module \\| String.t` |  | Deprecated: Use `base_url` instead. |\n| [`auth_method`](#authentication-strategies-oidc-auth_method){: #authentication-strategies-oidc-auth_method } | `nil \\| :client_secret_basic \\| :client_secret_post \\| :client_secret_jwt \\| :private_key_jwt` | `:client_secret_post` | The authentication strategy used, optional. If not set, no authentication will be used during the access token request. |\n| [`client_secret`](#authentication-strategies-oidc-client_secret){: #authentication-strategies-oidc-client_secret } | `(any, any -> any) \\| module \\| String.t` |  | The OAuth2 client secret. Required if :auth_method is `:client_secret_basic`, `:client_secret_post` or `:client_secret_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`trusted_audiences`](#authentication-strategies-oidc-trusted_audiences){: #authentication-strategies-oidc-trusted_audiences } | `(any, any -> any) \\| module \\| list(any) \\| nil` |  | A list of audiences which are trusted. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`private_key`](#authentication-strategies-oidc-private_key){: #authentication-strategies-oidc-private_key } | `(any, any -> any) \\| module \\| String.t` |  | The private key to use if `:auth_method` is `:private_key_jwt`. Takes either a module which implements the `AshAuthentication.Secret` behaviour, a 2 arity anonymous function or a string. |\n| [`authorization_params`](#authentication-strategies-oidc-authorization_params){: #authentication-strategies-oidc-authorization_params } | `keyword` | `[]` | Any additional parameters to encode in the request phase. eg: `authorization_params scope: \"openid profile email\"` |\n| [`registration_enabled?`](#authentication-strategies-oidc-registration_enabled?){: #authentication-strategies-oidc-registration_enabled? } | `boolean` | `true` | If enabled, new users will be able to register for your site when authenticating and not already present. If not, only existing users will be able to authenticate. |\n| [`register_action_name`](#authentication-strategies-oidc-register_action_name){: #authentication-strategies-oidc-register_action_name } | `atom` |  | The name of the action to use to register a user, if `registration_enabled?` is `true`. Defaults to `register_with_ ` See the \"Registration and Sign-in\" section of the strategy docs for more. |\n| [`sign_in_action_name`](#authentication-strategies-oidc-sign_in_action_name){: #authentication-strategies-oidc-sign_in_action_name } | `atom` |  | The name of the action to use to sign in an existing user, if `sign_in_enabled?` is `true`. Defaults to `sign_in_with_ `, which is generated for you by default. See the \"Registration and Sign-in\" section of the strategy docs for more information. |\n| [`identity_resource`](#authentication-strategies-oidc-identity_resource){: #authentication-strategies-oidc-identity_resource } | `module \\| false` | `false` | The resource used to store user identities, or `false` to disable. See the User Identities section of the strategy docs for more. |\n| [`identity_relationship_name`](#authentication-strategies-oidc-identity_relationship_name){: #authentication-strategies-oidc-identity_relationship_name } | `atom` | `:identities` | Name of the relationship to the provider identities resource |\n| [`identity_relationship_user_id_attribute`](#authentication-strategies-oidc-identity_relationship_user_id_attribute){: #authentication-strategies-oidc-identity_relationship_user_id_attribute } | `atom` | `:user_id` | The name of the destination (user_id) attribute on your provider identity resource. Only necessary if you've changed the `user_id_attribute_name` option of the provider identity. |\n| [`openid_configuration_uri`](#authentication-strategies-oidc-openid_configuration_uri){: #authentication-strategies-oidc-openid_configuration_uri } | `String.t` | `\"/.well-known/openid-configuration\"` | The URI for the OpenID provider |\n| [`client_authentication_method`](#authentication-strategies-oidc-client_authentication_method){: #authentication-strategies-oidc-client_authentication_method } | `:client_secret_basic \\| :client_secret_post \\| :client_secret_jwt \\| :private_key_jwt` | `:client_secret_basic` | The client authentication method to use. |\n| [`openid_configuration`](#authentication-strategies-oidc-openid_configuration){: #authentication-strategies-oidc-openid_configuration } | `map` | `%{}` | The OpenID configuration.  If not set, the configuration will be retrieved from `openid_configuration_uri`. |\n| [`id_token_signed_response_alg`](#authentication-strategies-oidc-id_token_signed_response_alg){: #authentication-strategies-oidc-id_token_signed_response_alg } | `\"HS256\" \\| \"HS384\" \\| \"HS512\" \\| \"RS256\" \\| \"RS384\" \\| \"RS512\" \\| \"ES256\" \\| \"ES384\" \\| \"ES512\" \\| \"PS256\" \\| \"PS384\" \\| \"PS512\" \\| \"Ed25519\" \\| \"Ed25519ph\" \\| \"Ed448\" \\| \"Ed448ph\" \\| \"EdDSA\"` | `\"RS256\"` | The `id_token_signed_response_alg` parameter sent by the Client during Registration. |\n| [`id_token_ttl_seconds`](#authentication-strategies-oidc-id_token_ttl_seconds){: #authentication-strategies-oidc-id_token_ttl_seconds } | `nil \\| pos_integer` |  | The number of seconds from `iat` that an ID Token will be considered valid. |\n| [`nonce`](#authentication-strategies-oidc-nonce){: #authentication-strategies-oidc-nonce } | `boolean \\| (any, any -> any) \\| module \\| String.t` | `true` | A function for generating the session nonce, `true` to automatically generate it with `AshAuthetnication.Strategy.Oidc.NonceGenerator`, or `false` to disable. |","ref":"dsl-ashauthentication-strategy-oidc.html#options","title":"Options - DSL: AshAuthentication.Strategy.Oidc","type":"extras"},{"doc":"Target: `AshAuthentication.Strategy.OAuth2`\n\n\n\n .spark-required::after { content: \"*\"; color: red !important; }","ref":"dsl-ashauthentication-strategy-oidc.html#introspection","title":"Introspection - DSL: AshAuthentication.Strategy.Oidc","type":"extras"},{"doc":"<!--\nThis file was generated by Spark. Do not edit it by hand.\n-->\n# DSL: AshAuthentication.Strategy.Password\n\nStrategy for authenticating using local resources as the source of truth.\n\nIn order to use password authentication your resource needs to meet the\nfollowing minimum requirements:\n\n1. Have a primary key.\n2. A uniquely constrained identity field (eg `username` or `email`).\n3. A sensitive string field within which to store the hashed password.\n\nThere are other options documented in the DSL.","ref":"dsl-ashauthentication-strategy-password.html","title":"DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"```elixir\ndefmodule MyApp.Accounts.User do\n  use Ash.Resource,\n    extensions: [AshAuthentication],\n    domain: MyApp.Accounts\n\n  attributes do\n    uuid_primary_key :id\n    attribute :email, :ci_string, allow_nil?: false\n    attribute :hashed_password, :string, allow_nil?: false, sensitive?: true\n  end\n\n  authentication do\n    strategies do\n      password :password do\n        identity_field :email\n        hashed_password_field :hashed_password\n      end\n    end\n  end\n\n  identities do\n    identity :unique_email, [:email]\n  end\nend\n```","ref":"dsl-ashauthentication-strategy-password.html#example","title":"Example: - DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"By default the password strategy will automatically generate the register,\nsign-in, reset-request and reset actions for you, however you're free to\ndefine them yourself.  If you do, then the action will be validated to ensure\nthat all the needed configuration is present.\n\nIf you wish to work with the actions directly from your code you can do so via\nthe `AshAuthentication.Strategy` protocol.","ref":"dsl-ashauthentication-strategy-password.html#actions","title":"Actions - DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"Interacting with the actions directly:\n\n    iex> strategy = Info.strategy!(Example.User, :password)\n    ...> {:ok, marty} = Strategy.action(strategy, :register, %{\"username\" => \"marty\", \"password\" => \"outatime1985\", \"password_confirmation\" => \"outatime1985\"})\n    ...> marty.username |> to_string()\n    \"marty\"\n\n    ...> {:ok, user} = Strategy.action(strategy, :sign_in, %{\"username\" => \"marty\", \"password\" => \"outatime1985\"})\n    ...> user.username |> to_string()\n    \"marty\"","ref":"dsl-ashauthentication-strategy-password.html#examples","title":"Examples: - DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"The password strategy provides plug endpoints for all four actions, although\nonly sign-in and register will be reported by `Strategy.routes/1` if the\nstrategy is not configured as resettable.\n\nIf you wish to work with the plugs directly, you can do so via the\n`AshAuthentication.Strategy` protocol.","ref":"dsl-ashauthentication-strategy-password.html#plugs","title":"Plugs - DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"Dispatching to plugs directly:\n\n    iex> strategy = Info.strategy!(Example.User, :password)\n    ...> conn = conn(:post, \"/user/password/register\", %{\"user\" => %{\"username\" => \"marty\", \"password\" => \"outatime1985\", \"password_confirmation\" => \"outatime1985\"}})\n    ...> conn = Strategy.plug(strategy, :register, conn)\n    ...> {_conn, {:ok, marty}} = Plug.Helpers.get_authentication_result(conn)\n    ...> marty.username |> to_string()\n    \"marty\"\n\n    ...> conn = conn(:post, \"/user/password/reset_request\", %{\"user\" => %{\"username\" => \"marty\"}})\n    ...> conn = Strategy.plug(strategy, :reset_request, conn)\n    ...> {_conn, :ok} = Plug.Helpers.get_authentication_result(conn)","ref":"dsl-ashauthentication-strategy-password.html#examples","title":"Examples: - DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"See the [Testing guide](/documentation/topics/testing.md) for tips on testing resources using this strategy.","ref":"dsl-ashauthentication-strategy-password.html#testing","title":"Testing - DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"```elixir\npassword name \\\\ :password\n```\n\n\nStrategy for authenticating using local resources as the source of truth.","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password","title":"authentication.strategies.password - DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"* [resettable](#authentication-strategies-password-resettable)","ref":"dsl-ashauthentication-strategy-password.html#nested-dsls","title":"Nested DSLs - DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"```\npassword :password do\n  identity_field :email\n  hashed_password_field :hashed_password\n  hash_provider AshAuthentication.BcryptProvider\n  confirmation_required? true\nend\n\n```","ref":"dsl-ashauthentication-strategy-password.html#examples","title":"Examples - DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`identity_field`](#authentication-strategies-password-identity_field){: #authentication-strategies-password-identity_field } | `atom` | `:username` | The name of the attribute which uniquely identifies the user, usually something like `username` or `email_address`. |\n| [`hashed_password_field`](#authentication-strategies-password-hashed_password_field){: #authentication-strategies-password-hashed_password_field } | `atom` | `:hashed_password` | The name of the attribute within which to store the user's password once it has been hashed. |\n| [`hash_provider`](#authentication-strategies-password-hash_provider){: #authentication-strategies-password-hash_provider } | `module` | `AshAuthentication.BcryptProvider` | A module which implements the `AshAuthentication.HashProvider` behaviour, to provide cryptographic hashing of passwords. |\n| [`confirmation_required?`](#authentication-strategies-password-confirmation_required?){: #authentication-strategies-password-confirmation_required? } | `boolean` | `true` | Whether a password confirmation field is required when registering or changing passwords. |\n| [`register_action_accept`](#authentication-strategies-password-register_action_accept){: #authentication-strategies-password-register_action_accept } | `list(atom)` | `[]` | A list of additional fields to be accepted in the register action. |\n| [`password_field`](#authentication-strategies-password-password_field){: #authentication-strategies-password-password_field } | `atom` | `:password` | The name of the argument used to collect the user's password in plaintext when registering, checking or changing passwords. |\n| [`password_confirmation_field`](#authentication-strategies-password-password_confirmation_field){: #authentication-strategies-password-password_confirmation_field } | `atom` | `:password_confirmation` | The name of the argument used to confirm the user's password in plaintext when registering or changing passwords. |\n| [`register_action_name`](#authentication-strategies-password-register_action_name){: #authentication-strategies-password-register_action_name } | `atom` |  | The name to use for the register action. Defaults to `register_with_ ` |\n| [`registration_enabled?`](#authentication-strategies-password-registration_enabled?){: #authentication-strategies-password-registration_enabled? } | `boolean` | `true` | If you do not want new users to be able to register using this strategy, set this to false. |\n| [`sign_in_action_name`](#authentication-strategies-password-sign_in_action_name){: #authentication-strategies-password-sign_in_action_name } | `atom` |  | The name to use for the sign in action. Defaults to `sign_in_with_ ` |\n| [`sign_in_enabled?`](#authentication-strategies-password-sign_in_enabled?){: #authentication-strategies-password-sign_in_enabled? } | `boolean` | `true` | If you do not want new users to be able to sign in using this strategy, set this to false. |\n| [`sign_in_tokens_enabled?`](#authentication-strategies-password-sign_in_tokens_enabled?){: #authentication-strategies-password-sign_in_tokens_enabled? } | `boolean` | `true` | Whether or not to support generating short lived sign in tokens. Requires the resource to have tokens enabled. |\n| [`sign_in_token_lifetime`](#authentication-strategies-password-sign_in_token_lifetime){: #authentication-strategies-password-sign_in_token_lifetime } | `pos_integer \\| {pos_integer, :days \\| :hours \\| :minutes \\| :seconds}` | `{60, :seconds}` | A lifetime for which a generated sign in token will be valid, if `sign_in_tokens_enabled?`. Unit defaults to `:seconds`. |","ref":"dsl-ashauthentication-strategy-password.html#options","title":"Options - DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"Configure password reset options for the resource","ref":"dsl-ashauthentication-strategy-password.html#authentication-strategies-password-resettable","title":"authentication.strategies.password.resettable - DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`sender`](#authentication-strategies-password-resettable-sender){: #authentication-strategies-password-resettable-sender .spark-required} | `(any, any, any -> any) \\| module` |  | The sender to use when sending password reset instructions. |\n| [`token_lifetime`](#authentication-strategies-password-resettable-token_lifetime){: #authentication-strategies-password-resettable-token_lifetime } | `pos_integer \\| {pos_integer, :days \\| :hours \\| :minutes \\| :seconds}` | `{3, :days}` | How long should the reset token be valid.  If no unit is provided `:hours` is assumed. |\n| [`request_password_reset_action_name`](#authentication-strategies-password-resettable-request_password_reset_action_name){: #authentication-strategies-password-resettable-request_password_reset_action_name } | `atom` |  | The name to use for the action which generates a password reset token. Defaults to `request_password_reset_with_ `. |\n| [`password_reset_action_name`](#authentication-strategies-password-resettable-password_reset_action_name){: #authentication-strategies-password-resettable-password_reset_action_name } | `atom` |  | The name to use for the action which actually resets the user's password. Defaults to `password_reset_with_ `. |","ref":"dsl-ashauthentication-strategy-password.html#options","title":"Options - DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"Target: `AshAuthentication.Strategy.Password.Resettable`","ref":"dsl-ashauthentication-strategy-password.html#introspection","title":"Introspection - DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"Target: `AshAuthentication.Strategy.Password`\n\n\n\n .spark-required::after { content: \"*\"; color: red !important; }","ref":"dsl-ashauthentication-strategy-password.html#introspection","title":"Introspection - DSL: AshAuthentication.Strategy.Password","type":"extras"},{"doc":"<!--\nThis file was generated by Spark. Do not edit it by hand.\n-->\n# DSL: AshAuthentication.TokenResource\n\nThis is an Ash resource extension which generates the default token resource.\n\nThe token resource is used to store information about tokens that should not\nbe shared with the end user.  It does not actually contain any tokens.\n\nFor example:\n\n  * When an authentication token has been revoked\n  * When a confirmation token has changes to apply","ref":"dsl-ashauthentication-tokenresource.html","title":"DSL: AshAuthentication.TokenResource","type":"extras"},{"doc":"The information stored in this resource is essentially ephemeral - all tokens\nhave an expiry date, so it doesn't make sense to keep them after that time has\npassed.  However, if you have any tokens with very long expiry times then we\nsuggest you store this resource in a resilient data-layer such as Postgres.","ref":"dsl-ashauthentication-tokenresource.html#storage","title":"Storage - DSL: AshAuthentication.TokenResource","type":"extras"},{"doc":"There is no need to define any attributes or actions (although you can if you\nwant).  The extension will wire up everything that's needed for the token\nsystem to function.\n\n```\ndefmodule MyApp.Accounts.Token do\n  use Ash.Resource,\n    data_layer: AshPostgres.DataLayer,\n    extensions: [AshAuthentication.TokenResource],\n    domain: MyApp.Accounts\n\n  postgres do\n    table \"tokens\"\n    repo MyApp.Repo\n  end\nend\n```\n\nWhilst it is possible to have multiple token resources, there is no need to do\nso.","ref":"dsl-ashauthentication-tokenresource.html#usage","title":"Usage - DSL: AshAuthentication.TokenResource","type":"extras"},{"doc":"Once a token has expired there's no point in keeping the information it refers\nto, so expired tokens can be automatically removed by adding the\n`AshAuthentication.Supervisor` to your application supervision tree.  This\nwill start the `AshAuthentication.TokenResource.Expunger` `GenServer` which\nperiodically scans and removes any expired records.","ref":"dsl-ashauthentication-tokenresource.html#removing-expired-records","title":"Removing expired records - DSL: AshAuthentication.TokenResource","type":"extras"},{"doc":"Configuration options for this token resource","ref":"dsl-ashauthentication-tokenresource.html#token","title":"token - DSL: AshAuthentication.TokenResource","type":"extras"},{"doc":"* [revocation](#token-revocation)\n * [confirmation](#token-confirmation)","ref":"dsl-ashauthentication-tokenresource.html#nested-dsls","title":"Nested DSLs - DSL: AshAuthentication.TokenResource","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`domain`](#token-domain){: #token-domain } | `module` |  | The Ash domain to use to access this resource. |\n| [`expunge_expired_action_name`](#token-expunge_expired_action_name){: #token-expunge_expired_action_name } | `atom` | `:expunge_expired` | The name of the action used to remove expired tokens. |\n| [`read_expired_action_name`](#token-read_expired_action_name){: #token-read_expired_action_name } | `atom` | `:read_expired` | The name of the action use to find all expired tokens. |\n| [`expunge_interval`](#token-expunge_interval){: #token-expunge_interval } | `pos_integer` | `12` | How often to scan this resource for records which have expired, and thus can be removed. |\n| [`store_token_action_name`](#token-store_token_action_name){: #token-store_token_action_name } | `atom` | `:store_token` | The name of the action to use to store a token, if `require_tokens_for_authentication?` is enabled in your authentication resource. |\n| [`get_token_action_name`](#token-get_token_action_name){: #token-get_token_action_name } | `atom` | `:get_token` | The name of the action used to retrieve tokens from the store, if `require_tokens_for_authentication?` is enabled in your authentication resource. |","ref":"dsl-ashauthentication-tokenresource.html#options","title":"Options - DSL: AshAuthentication.TokenResource","type":"extras"},{"doc":"Configuration options for token revocation","ref":"dsl-ashauthentication-tokenresource.html#token-revocation","title":"token.revocation - DSL: AshAuthentication.TokenResource","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`revoke_token_action_name`](#token-revocation-revoke_token_action_name){: #token-revocation-revoke_token_action_name } | `atom` | `:revoke_token` | The name of the action used to revoke tokens. |\n| [`is_revoked_action_name`](#token-revocation-is_revoked_action_name){: #token-revocation-is_revoked_action_name } | `atom` | `:revoked?` | The name of the action used to check if a token is revoked. |","ref":"dsl-ashauthentication-tokenresource.html#options","title":"Options - DSL: AshAuthentication.TokenResource","type":"extras"},{"doc":"Configuration options for confirmation tokens","ref":"dsl-ashauthentication-tokenresource.html#token-confirmation","title":"token.confirmation - DSL: AshAuthentication.TokenResource","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`store_changes_action_name`](#token-confirmation-store_changes_action_name){: #token-confirmation-store_changes_action_name } | `atom` | `:store_confirmation_changes` | The name of the action used to store confirmation changes. |\n| [`get_changes_action_name`](#token-confirmation-get_changes_action_name){: #token-confirmation-get_changes_action_name } | `atom` | `:get_confirmation_changes` | The name of the action used to get confirmation changes. |\n\n\n\n\n\n\n\n\n\n .spark-required::after { content: \"*\"; color: red !important; }","ref":"dsl-ashauthentication-tokenresource.html#options","title":"Options - DSL: AshAuthentication.TokenResource","type":"extras"},{"doc":"<!--\nThis file was generated by Spark. Do not edit it by hand.\n-->\n# DSL: AshAuthentication.UserIdentity\n\nAn Ash extension which generates the default user identities resource.\n\nThe user identities resource is used to store information returned by remote\nauthentication strategies (such as those provided by OAuth2) and maps them to\nyour user resource(s).  This provides the following benefits:\n\n  1. A user can be signed in to multiple authentication strategies at once.\n  2. For those provides which support it AshAuthentication can handle\n     automatic refreshing of tokens.","ref":"dsl-ashauthentication-useridentity.html","title":"DSL: AshAuthentication.UserIdentity","type":"extras"},{"doc":"User identities are expected to be relatively long-lived (although they're\ndeleted on log out), so should probably be stored using a permanent data layer\nsush as `ash_postgres`.","ref":"dsl-ashauthentication-useridentity.html#storage","title":"Storage - DSL: AshAuthentication.UserIdentity","type":"extras"},{"doc":"There is no need to define any attributes, etc.  The extension will generate\nthem all for you.  As there is no other use-case for this resource it's\nunlikely that you will need to customise it.\n\n```elixir\ndefmodule MyApp.Accounts.UserIdentity do\n  use Ash.Resource,\n    data_layer: AshPostgres.DataLayer,\n    extensions: [AshAuthentication.UserIdentity],\n    domain: MyApp.Accounts\n\n  user_identity do\n    user_resource MyApp.Accounts.User\n  end\n\n  postgres do\n    table \"user_identities\"\n    repo MyApp.Repo\n  end\nend\n```\n\nIf you intend to operate with multiple user resources, you will need to define\nmultiple user identity resources.","ref":"dsl-ashauthentication-useridentity.html#usage","title":"Usage - DSL: AshAuthentication.UserIdentity","type":"extras"},{"doc":"Configure identity options for this resource","ref":"dsl-ashauthentication-useridentity.html#user_identity","title":"user_identity - DSL: AshAuthentication.UserIdentity","type":"extras"},{"doc":"| Name | Type | Default | Docs |\n|------|------|---------|------|\n| [`user_resource`](#user_identity-user_resource){: #user_identity-user_resource .spark-required} | `module` |  | The user resource to which these identities belong. |\n| [`domain`](#user_identity-domain){: #user_identity-domain } | `module` |  | The Ash domain to use to access this resource. |\n| [`uid_attribute_name`](#user_identity-uid_attribute_name){: #user_identity-uid_attribute_name } | `atom` | `:uid` | The name of the `uid` attribute on this resource. |\n| [`strategy_attribute_name`](#user_identity-strategy_attribute_name){: #user_identity-strategy_attribute_name } | `atom` | `:strategy` | The name of the `strategy` attribute on this resource. |\n| [`user_id_attribute_name`](#user_identity-user_id_attribute_name){: #user_identity-user_id_attribute_name } | `atom` | `:user_id` | The name of the `user_id` attribute on this resource. |\n| [`access_token_attribute_name`](#user_identity-access_token_attribute_name){: #user_identity-access_token_attribute_name } | `atom` | `:access_token` | The name of the `access_token` attribute on this resource. |\n| [`access_token_expires_at_attribute_name`](#user_identity-access_token_expires_at_attribute_name){: #user_identity-access_token_expires_at_attribute_name } | `atom` | `:access_token_expires_at` | The name of the `access_token_expires_at` attribute on this resource. |\n| [`refresh_token_attribute_name`](#user_identity-refresh_token_attribute_name){: #user_identity-refresh_token_attribute_name } | `atom` | `:refresh_token` | The name of the `refresh_token` attribute on this resource. |\n| [`upsert_action_name`](#user_identity-upsert_action_name){: #user_identity-upsert_action_name } | `atom` | `:upsert` | The name of the action used to create and update records. |\n| [`destroy_action_name`](#user_identity-destroy_action_name){: #user_identity-destroy_action_name } | `atom` | `:destroy` | The name of the action used to destroy records. |\n| [`read_action_name`](#user_identity-read_action_name){: #user_identity-read_action_name } | `atom` | `:read` | The name of the action used to query identities. |\n| [`user_relationship_name`](#user_identity-user_relationship_name){: #user_identity-user_relationship_name } | `atom` | `:user` | The name of the belongs-to relationship between identities and users. |\n\n\n\n\n\n\n\n .spark-required::after { content: \"*\"; color: red !important; }","ref":"dsl-ashauthentication-useridentity.html#options","title":"Options - DSL: AshAuthentication.UserIdentity","type":"extras"}],"producer":{"name":"ex_doc","version":[48,46,51,52,46,50]}}